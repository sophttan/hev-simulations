
R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> rm(list = ls())
> gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 275325 14.8     662942 35.5   468594 25.1
Vcells 462880  3.6    8388608 64.0  1820267 13.9
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(foreach)
> library(doParallel)
Loading required package: iterators
Loading required package: parallel
> 
> # Set up the number of cores used for parallelization.
> # Use detectCores() to find out how many cores are available.
> num_cores <- 12
> registerDoParallel(num_cores)
> 
> time <- 365 # Number of days.
> inc <- 28 # Average incubation period length.
> inf <- 7 # Average infectious period length.
> pop <- 1000 # Population size.
> 
> create_hh <- function() {
+   # Randomly sample household sizes such that total population is 1000 
+   # individuals.
+   hh_size <- sample(x = c(3, 4, 5, 6), size = 340, replace = T)
+   
+   # Keep households such that total population is < 1000.
+   hh_size <- hh_size[which(cumsum(hh_size) < pop)]
+   
+   leftover <- pop - sum(hh_size)
+   if (leftover < 3) {
+     hh <- 1:length(hh_size)
+     sampled <- sample(hh[hh_size < 6], leftover)
+     hh_size[sampled] <- hh_size[sampled] + 1
+   } else {
+     hh_size <- c(hh_size, leftover)
+   }
+   return(hh_size)
+ }
> 
> SEIR <- function(beta_H, beta_C, inc, inf, verbose = 0) {
+   hh_size <- create_hh()
+   
+   # Create frame for running the simulation.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # S: susceptibility status.
+   # E: exposed status.
+   # E_count: number of days since exposed.
+   # I: infectious status.
+   # I_count: number of days since infectious.
+   # R: recovered status.
+   # INC: incubation period.
+   # INF: infectious period.
+   data <- data.frame(ID = 1:pop,
+                     SIZE = rep(hh_size, times = hh_size),
+                     HH = rep(1:length(hh_size), times = hh_size), 
+                     S = c(0, rep(1, pop - 1)), 
+                     E = c(1, rep(0, pop - 1)),
+                     E_count = c(1, rep(0, pop - 1)), 
+                     I = 0,
+                     I_count = 0, 
+                     R = 0, 
+                     INC = c(round(rnorm(1, inc, 2)), rep(0, pop - 1)),
+                     INF = 0)
+   
+   # Create frame for storing results.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # TYPE: the kind of infection: household (H), community (C), or both (B).
+   # TIME: when the individual became infectious.
+   # S_num: number of susceptible people in individual's household when their 
+   #        infectious period begins.
+   # I_num: number of people in household that this individual infected over 
+   #        their infectious period.
+   results <- data[, 1:3] %>% mutate(TYPE = NA, TIME = NA, S_num = NA, I_num = 0)
+   results$TYPE[1] <- '0'
+   
+   for(t in 1:time) {
+     if (verbose) {
+       if (t %% 10 == 0) {
+         print(t)
+       }
+     }
+     
+     # Anyone who has been infectious for as many days as their infectious
+     # period is now recovered.
+     recovered <- (data$INF > 0) & (data$I_count == data$INF)
+     if(sum(recovered, na.rm = T) > 0) {
+       data$R[recovered] <- 1
+       data$I[recovered] <- 0
+       data$I_count[recovered] <- 0 
+     }
+     
+     # Anyone who has been incubating for as many days as their incubation
+     # period is now infectious.
+     new_inf <- (data$INC > 0) & (data$E_count == data$INC)
+     num_new_inf <- sum(new_inf, na.rm = T)
+     if(num_new_inf > 0) {
+       # Change status to newly infectious and add infectious period.
+       data$I[new_inf] <- 1
+       random_inf <- rnorm(num_new_inf, mean = inf, sd = 1) %>% round()
+       data$INF[new_inf] <- random_inf
+       
+       # Remove exposure status and exposure count.
+       data$E[new_inf] <- 0
+       data$E_count[new_inf] <- 0 
+       
+       # Record time at which infectious period starts.
+       results$TIME[new_inf] <- t
+       
+       # Save the number of susceptible people in each infectious 
+       # individual's household.
+       S_data <- data %>% group_by(HH) %>% 
+         mutate(S_tot = sum(S)) %>% 
+         select(HH, S_tot)
+       results$S_num[new_inf == 1] <- S_data$S_tot[new_inf == 1]
+     }
+     
+     # I_H is the number of infections inside each household.
+     # I_C is the number of infections outside each household.
+     I_data <- data %>% group_by(HH) %>% 
+       mutate(I_H = sum(I)) %>% 
+       ungroup() %>% 
+       mutate(I_C = sum(I) - I_H)
+     
+     # Calculate household risk and community risk.
+     risk_H <- beta_H * data$S * I_data$I_H / pop
+     risk_C <- beta_C * data$S * I_data$I_C / pop
+     
+     # Each individual is infected from their household or 
+     # community independently with probabilities risk_H
+     # and risk_C.
+     new_inf_H <- rbinom(nrow(data), 1, risk_H)
+     new_inf_C <- rbinom(nrow(data), 1, risk_C)
+     
+     new_exposed <- (new_inf_H == 1) | (new_inf_C == 1)
+     num_new_exposed <- sum(new_exposed, na.rm = T)
+     if (num_new_exposed > 0) {
+       # Change status to newly exposed and add incubation period.
+       data$E[new_exposed] <- 1
+       random_inc <- rnorm(num_new_exposed, mean = inc, sd = 2) %>% round()
+       data$INC[new_exposed] <- random_inc
+       
+       # Remove susceptible status.
+       data$S[new_exposed] <- 0
+       
+       # Label community infections with C and household infections with H.
+       results$TYPE[new_inf_C == 1] <- 'C'
+       results$TYPE[new_inf_H == 1] <- 'H'
+       
+       # Get number of new infections in each household.
+       I_data <- I_data %>%
+         select(ID, HH, I, I_H) %>%
+         mutate(new_I_H = new_inf_H) %>%
+         group_by(HH) %>%
+         # Find households with at least 1 currently infectious person.
+         # If exactly 1 infectious person in household, assign all new H exposures to infectious person.
+         # If there are multiple infectious people, assign all infections to an infectious person at random.
+         mutate(new_I_H = ifelse(I == 1 & ID == first(ID[I == 1]), sum(new_I_H), 0))
+       
+       results$I_num <- results$I_num + I_data$new_I_H
+         
+       # Label individuals with both a household and community infection with B.
+       results$TYPE[(new_inf_H == 1) & (new_inf_C == 1)] <- 'B'
+     }
+     
+     # Increment exposure and infectious counters.
+     data$E_count[data$E == 1] <- data$E_count[data$E == 1] + 1
+     data$I_count[data$I == 1] <- data$I_count[data$I == 1] + 1
+   }
+   return(results)
+ }
> 
> metrics <- function(results) {
+   # Incidence is the proportion of the population that became infected.
+   idc <- mean(!is.na(results$TIME))
+   
+   # If incidence is 0, the SAR is undefined.
+   sar <- NA
+   if (idc != 0) {
+     # The SAR is the average SAR for each individual that was infectious.
+     sar <- mean(results$I_num / results$S_num, na.rm = T)
+   }
+   return(c(idc, sar))
+ }
> 
> beta_Hs <- seq(35, 65, 0.5)
> beta_Cs <- seq(0, 0.5, 0.02)
> 
> a <- length(beta_Cs)
> b <- length(beta_Hs)
> 
> reps <- 40
> idcs <- array(rep(0, a * b * reps), dim = c(a, b, reps))
> sars <- array(rep(0, a * b * reps), dim = c(a, b, reps))
> for (i in 1:b) {
+   for (j in 1:a) {
+     beta_H <- beta_Hs[i]
+     beta_C <- beta_Cs[j]
+     
+     idc_list <- rep(NA, reps)
+     sar_list <- rep(NA, reps)
+     t_0 <- Sys.time()
+     vals <- foreach (k = 1:reps, .combine = 'c') %dopar% {
+       results <- SEIR(beta_H, beta_C, inc, inf, verbose = F) 
+       metrics(results)
+     }
+     t_1 <- Sys.time()
+     message(paste0(format(beta_H, nsmall = 1), '/65.0\t', 
+                    format(beta_C, nsmall = 2), '/0.50\t',  
+                    round(t_1 - t_0, 3)))
+     vals <- matrix(vals, reps, byrow = T)
+     idcs[i, j, ] <- vals[, 1]
+     sars[i, j, ] <- vals[, 2]
+       
+     write.table(idcs, file = 'idcs.txt', row.names = F, col.names = F)
+     write.table(sars, file = 'sars.txt', row.names = F, col.names = F)
+   }
+ }
35.0/65.0	0.00/0.50	32.05
35.0/65.0	0.02/0.50	32.959
35.0/65.0	0.04/0.50	37.492
35.0/65.0	0.06/0.50	41.691
35.0/65.0	0.08/0.50	44.758
35.0/65.0	0.10/0.50	53.401
35.0/65.0	0.12/0.50	56.184
35.0/65.0	0.14/0.50	1.248
35.0/65.0	0.16/0.50	1.219
35.0/65.0	0.18/0.50	1.371
35.0/65.0	0.20/0.50	1.264
35.0/65.0	0.22/0.50	1.4
35.0/65.0	0.24/0.50	1.466
35.0/65.0	0.26/0.50	1.247
35.0/65.0	0.28/0.50	1.411
35.0/65.0	0.30/0.50	1.398
35.0/65.0	0.32/0.50	1.234
35.0/65.0	0.34/0.50	1.254
35.0/65.0	0.36/0.50	1.331
35.0/65.0	0.38/0.50	1.189
35.0/65.0	0.40/0.50	1.225
35.0/65.0	0.42/0.50	1.256
35.0/65.0	0.44/0.50	1.248
35.0/65.0	0.46/0.50	1.191
35.0/65.0	0.48/0.50	1.118
35.0/65.0	0.50/0.50	1.152
35.5/65.0	0.00/0.50	38.117
35.5/65.0	0.02/0.50	37.715
35.5/65.0	0.04/0.50	36.502
35.5/65.0	0.06/0.50	34.442
35.5/65.0	0.08/0.50	50.654
35.5/65.0	0.10/0.50	51.406
35.5/65.0	0.12/0.50	1.012
35.5/65.0	0.14/0.50	1.091
35.5/65.0	0.16/0.50	1.141
35.5/65.0	0.18/0.50	1.233
35.5/65.0	0.20/0.50	1.244
35.5/65.0	0.22/0.50	1.341
35.5/65.0	0.24/0.50	1.496
35.5/65.0	0.26/0.50	1.381
35.5/65.0	0.28/0.50	1.311
35.5/65.0	0.30/0.50	1.411
35.5/65.0	0.32/0.50	1.358
35.5/65.0	0.34/0.50	1.288
35.5/65.0	0.36/0.50	1.197
35.5/65.0	0.38/0.50	1.31
35.5/65.0	0.40/0.50	1.216
35.5/65.0	0.42/0.50	1.113
35.5/65.0	0.44/0.50	1.228
35.5/65.0	0.46/0.50	1.231
35.5/65.0	0.48/0.50	1.087
35.5/65.0	0.50/0.50	1.128
36.0/65.0	0.00/0.50	38.432
36.0/65.0	0.02/0.50	37.746
36.0/65.0	0.04/0.50	41.468
36.0/65.0	0.06/0.50	40.761
36.0/65.0	0.08/0.50	42.698
36.0/65.0	0.10/0.50	48.669
36.0/65.0	0.12/0.50	1.256
36.0/65.0	0.14/0.50	1.09
36.0/65.0	0.16/0.50	1.381
36.0/65.0	0.18/0.50	1.221
36.0/65.0	0.20/0.50	1.349
36.0/65.0	0.22/0.50	1.289
36.0/65.0	0.24/0.50	1.374
36.0/65.0	0.26/0.50	1.479
36.0/65.0	0.28/0.50	1.317
36.0/65.0	0.30/0.50	1.282
36.0/65.0	0.32/0.50	1.339
36.0/65.0	0.34/0.50	1.34
36.0/65.0	0.36/0.50	1.117
36.0/65.0	0.38/0.50	1.303
36.0/65.0	0.40/0.50	1.258
36.0/65.0	0.42/0.50	1.096
36.0/65.0	0.44/0.50	1.175
36.0/65.0	0.46/0.50	1.227
36.0/65.0	0.48/0.50	1.138
36.0/65.0	0.50/0.50	1.08
36.5/65.0	0.00/0.50	34.876
36.5/65.0	0.02/0.50	38.132
36.5/65.0	0.04/0.50	41.28
36.5/65.0	0.06/0.50	37.558
36.5/65.0	0.08/0.50	37.976
36.5/65.0	0.10/0.50	54.581
36.5/65.0	0.12/0.50	1.04
36.5/65.0	0.14/0.50	1.176
36.5/65.0	0.16/0.50	1.327
36.5/65.0	0.18/0.50	1.378
36.5/65.0	0.20/0.50	1.441
36.5/65.0	0.22/0.50	1.41
36.5/65.0	0.24/0.50	1.346
36.5/65.0	0.26/0.50	1.427
36.5/65.0	0.28/0.50	1.378
36.5/65.0	0.30/0.50	1.264
36.5/65.0	0.32/0.50	1.388
36.5/65.0	0.34/0.50	1.348
36.5/65.0	0.36/0.50	1.103
36.5/65.0	0.38/0.50	1.258
36.5/65.0	0.40/0.50	1.288
36.5/65.0	0.42/0.50	1.105
36.5/65.0	0.44/0.50	1.161
36.5/65.0	0.46/0.50	1.236
36.5/65.0	0.48/0.50	1.188
36.5/65.0	0.50/0.50	1.124
37.0/65.0	0.00/0.50	35.954
37.0/65.0	0.02/0.50	38.45
37.0/65.0	0.04/0.50	39.548
37.0/65.0	0.06/0.50	35.26
37.0/65.0	0.08/0.50	47.798
37.0/65.0	0.10/0.50	57.384
37.0/65.0	0.12/0.50	1.071
37.0/65.0	0.14/0.50	1.157
37.0/65.0	0.16/0.50	1.253
37.0/65.0	0.18/0.50	1.348
37.0/65.0	0.20/0.50	1.415
37.0/65.0	0.22/0.50	1.427
37.0/65.0	0.24/0.50	1.311
37.0/65.0	0.26/0.50	1.437
37.0/65.0	0.28/0.50	1.418
37.0/65.0	0.30/0.50	1.222
37.0/65.0	0.32/0.50	1.397
37.0/65.0	0.34/0.50	1.309
37.0/65.0	0.36/0.50	1.152
37.0/65.0	0.38/0.50	1.24
37.0/65.0	0.40/0.50	1.26
37.0/65.0	0.42/0.50	1.158
37.0/65.0	0.44/0.50	1.144
37.0/65.0	0.46/0.50	1.235
37.0/65.0	0.48/0.50	1.203
37.0/65.0	0.50/0.50	1.163
37.5/65.0	0.00/0.50	38.209
37.5/65.0	0.02/0.50	37.473
37.5/65.0	0.04/0.50	36.38
37.5/65.0	0.06/0.50	45.621
37.5/65.0	0.08/0.50	45.261
37.5/65.0	0.10/0.50	1.008
37.5/65.0	0.12/0.50	1.033
37.5/65.0	0.14/0.50	1.334
37.5/65.0	0.16/0.50	1.223
37.5/65.0	0.18/0.50	1.297
37.5/65.0	0.20/0.50	1.474
37.5/65.0	0.22/0.50	1.47
37.5/65.0	0.24/0.50	1.3
37.5/65.0	0.26/0.50	1.467
37.5/65.0	0.28/0.50	1.321
37.5/65.0	0.30/0.50	1.243
37.5/65.0	0.32/0.50	1.357
37.5/65.0	0.34/0.50	1.248
37.5/65.0	0.36/0.50	1.284
37.5/65.0	0.38/0.50	1.247
37.5/65.0	0.40/0.50	1.245
37.5/65.0	0.42/0.50	1.246
37.5/65.0	0.44/0.50	1.098
37.5/65.0	0.46/0.50	1.254
37.5/65.0	0.48/0.50	1.207
37.5/65.0	0.50/0.50	1.119
38.0/65.0	0.00/0.50	30.48
38.0/65.0	0.02/0.50	35.682
38.0/65.0	0.04/0.50	41.011
38.0/65.0	0.06/0.50	40.688
38.0/65.0	0.08/0.50	46.72
38.0/65.0	0.10/0.50	49.91
38.0/65.0	0.12/0.50	56.463
38.0/65.0	0.14/0.50	1.362
38.0/65.0	0.16/0.50	1.417
38.0/65.0	0.18/0.50	1.342
38.0/65.0	0.20/0.50	1.405
38.0/65.0	0.22/0.50	1.383
38.0/65.0	0.24/0.50	1.264
38.0/65.0	0.26/0.50	1.432
38.0/65.0	0.28/0.50	1.363
38.0/65.0	0.30/0.50	1.368
38.0/65.0	0.32/0.50	1.243
38.0/65.0	0.34/0.50	1.341
38.0/65.0	0.36/0.50	1.281
38.0/65.0	0.38/0.50	1.154
38.0/65.0	0.40/0.50	1.271
38.0/65.0	0.42/0.50	1.297
38.0/65.0	0.44/0.50	1.029
38.0/65.0	0.46/0.50	1.216
38.0/65.0	0.48/0.50	1.227
38.0/65.0	0.50/0.50	1.123
38.5/65.0	0.00/0.50	32.621
38.5/65.0	0.02/0.50	37.007
38.5/65.0	0.04/0.50	38.436
38.5/65.0	0.06/0.50	39.435
38.5/65.0	0.08/0.50	47.506
38.5/65.0	0.10/0.50	51.073
38.5/65.0	0.12/0.50	1.078
38.5/65.0	0.14/0.50	1.271
38.5/65.0	0.16/0.50	1.132
38.5/65.0	0.18/0.50	1.357
38.5/65.0	0.20/0.50	1.338
38.5/65.0	0.22/0.50	1.401
38.5/65.0	0.24/0.50	1.361
38.5/65.0	0.26/0.50	1.298
38.5/65.0	0.28/0.50	1.368
38.5/65.0	0.30/0.50	1.421
38.5/65.0	0.32/0.50	1.122
38.5/65.0	0.34/0.50	1.309
38.5/65.0	0.36/0.50	1.296
38.5/65.0	0.38/0.50	1.09
38.5/65.0	0.40/0.50	1.114
38.5/65.0	0.42/0.50	1.245
38.5/65.0	0.44/0.50	1.166
38.5/65.0	0.46/0.50	1.149
38.5/65.0	0.48/0.50	1.198
38.5/65.0	0.50/0.50	1.134
39.0/65.0	0.00/0.50	36.862
39.0/65.0	0.02/0.50	37.532
39.0/65.0	0.04/0.50	38.062
39.0/65.0	0.06/0.50	38.899
39.0/65.0	0.08/0.50	47.257
39.0/65.0	0.10/0.50	52.402
39.0/65.0	0.12/0.50	1.139
39.0/65.0	0.14/0.50	1.117
39.0/65.0	0.16/0.50	1.301
39.0/65.0	0.18/0.50	1.385
39.0/65.0	0.20/0.50	1.272
39.0/65.0	0.22/0.50	1.364
39.0/65.0	0.24/0.50	1.452
39.0/65.0	0.26/0.50	1.39
39.0/65.0	0.28/0.50	1.247
39.0/65.0	0.30/0.50	1.353
39.0/65.0	0.32/0.50	1.228
39.0/65.0	0.34/0.50	1.087
39.0/65.0	0.36/0.50	1.181
39.0/65.0	0.38/0.50	1.219
39.0/65.0	0.40/0.50	58.041
39.0/65.0	0.42/0.50	1.146
39.0/65.0	0.44/0.50	1.136
39.0/65.0	0.46/0.50	1.029
39.0/65.0	0.48/0.50	1.071
39.0/65.0	0.50/0.50	1.078
39.5/65.0	0.00/0.50	35.579
39.5/65.0	0.02/0.50	29.017
39.5/65.0	0.04/0.50	35.259
39.5/65.0	0.06/0.50	39.38
39.5/65.0	0.08/0.50	40.326
39.5/65.0	0.10/0.50	59.451
39.5/65.0	0.12/0.50	58.988
39.5/65.0	0.14/0.50	1.163
39.5/65.0	0.16/0.50	1.268
39.5/65.0	0.18/0.50	1.231
39.5/65.0	0.20/0.50	1.344
39.5/65.0	0.22/0.50	1.274
39.5/65.0	0.24/0.50	1.149
39.5/65.0	0.26/0.50	1.316
39.5/65.0	0.28/0.50	1.261
39.5/65.0	0.30/0.50	1.097
39.5/65.0	0.32/0.50	1.283
39.5/65.0	0.34/0.50	1.251
39.5/65.0	0.36/0.50	57.698
39.5/65.0	0.38/0.50	1.146
39.5/65.0	0.40/0.50	1.167
39.5/65.0	0.42/0.50	1.115
39.5/65.0	0.44/0.50	50.461
39.5/65.0	0.46/0.50	1.15
39.5/65.0	0.48/0.50	1.098
39.5/65.0	0.50/0.50	1.094
40.0/65.0	0.00/0.50	26.935
40.0/65.0	0.02/0.50	25.127
40.0/65.0	0.04/0.50	35.259
40.0/65.0	0.06/0.50	41.536
40.0/65.0	0.08/0.50	50.585
40.0/65.0	0.10/0.50	56.774
40.0/65.0	0.12/0.50	53.089
40.0/65.0	0.14/0.50	1.238
40.0/65.0	0.16/0.50	1.216
40.0/65.0	0.18/0.50	1.238
40.0/65.0	0.20/0.50	1.266
40.0/65.0	0.22/0.50	1.376
40.0/65.0	0.24/0.50	1.301
40.0/65.0	0.26/0.50	1.264
40.0/65.0	0.28/0.50	1.19
40.0/65.0	0.30/0.50	1.241
40.0/65.0	0.32/0.50	1.246
40.0/65.0	0.34/0.50	1.035
40.0/65.0	0.36/0.50	1.211
40.0/65.0	0.38/0.50	1.179
40.0/65.0	0.40/0.50	1.048
40.0/65.0	0.42/0.50	58.194
40.0/65.0	0.44/0.50	1.141
40.0/65.0	0.46/0.50	1.13
40.0/65.0	0.48/0.50	57.32
40.0/65.0	0.50/0.50	59.3
40.5/65.0	0.00/0.50	34.02
40.5/65.0	0.02/0.50	36.541
40.5/65.0	0.04/0.50	37.317
40.5/65.0	0.06/0.50	36.132
40.5/65.0	0.08/0.50	42.913
40.5/65.0	0.10/0.50	58.695
40.5/65.0	0.12/0.50	1.107
40.5/65.0	0.14/0.50	1.105
40.5/65.0	0.16/0.50	1.261
40.5/65.0	0.18/0.50	1.16
40.5/65.0	0.20/0.50	1.07
40.5/65.0	0.22/0.50	1.419
40.5/65.0	0.24/0.50	1.165
40.5/65.0	0.26/0.50	1.251
40.5/65.0	0.28/0.50	1.333
40.5/65.0	0.30/0.50	1.206
40.5/65.0	0.32/0.50	1.036
40.5/65.0	0.34/0.50	1.246
40.5/65.0	0.36/0.50	1.233
40.5/65.0	0.38/0.50	1.031
40.5/65.0	0.40/0.50	1.039
40.5/65.0	0.42/0.50	1.13
40.5/65.0	0.44/0.50	1.132
40.5/65.0	0.46/0.50	57.849
40.5/65.0	0.48/0.50	1.061
40.5/65.0	0.50/0.50	1.109
41.0/65.0	0.00/0.50	31.482
41.0/65.0	0.02/0.50	33.239
41.0/65.0	0.04/0.50	36.398
41.0/65.0	0.06/0.50	38.568
41.0/65.0	0.08/0.50	41.874
41.0/65.0	0.10/0.50	48.715
41.0/65.0	0.12/0.50	1.1
41.0/65.0	0.14/0.50	1.003
41.0/65.0	0.16/0.50	1.057
41.0/65.0	0.18/0.50	1.242
41.0/65.0	0.20/0.50	1.292
41.0/65.0	0.22/0.50	1.22
41.0/65.0	0.24/0.50	1.262
41.0/65.0	0.26/0.50	1.337
41.0/65.0	0.28/0.50	1.227
41.0/65.0	0.30/0.50	1.058
41.0/65.0	0.32/0.50	1.291
41.0/65.0	0.34/0.50	1.234
41.0/65.0	0.36/0.50	1.026
41.0/65.0	0.38/0.50	1.121
41.0/65.0	0.40/0.50	1.147
41.0/65.0	0.42/0.50	1.102
41.0/65.0	0.44/0.50	1.065
41.0/65.0	0.46/0.50	1.099
41.0/65.0	0.48/0.50	1.059
41.0/65.0	0.50/0.50	1.101
41.5/65.0	0.00/0.50	35.084
41.5/65.0	0.02/0.50	33.038
41.5/65.0	0.04/0.50	31.105
41.5/65.0	0.06/0.50	33.97
41.5/65.0	0.08/0.50	43.712
41.5/65.0	0.10/0.50	56.065
41.5/65.0	0.12/0.50	1.103
41.5/65.0	0.14/0.50	1.043
41.5/65.0	0.16/0.50	1.098
41.5/65.0	0.18/0.50	1.335
41.5/65.0	0.20/0.50	1.233
41.5/65.0	0.22/0.50	1.348
41.5/65.0	0.24/0.50	1.358
41.5/65.0	0.26/0.50	1.28
41.5/65.0	0.28/0.50	1.324
41.5/65.0	0.30/0.50	1.26
41.5/65.0	0.32/0.50	1.249
41.5/65.0	0.34/0.50	1.151
41.5/65.0	0.36/0.50	1.121
41.5/65.0	0.38/0.50	1.184
41.5/65.0	0.40/0.50	1.169
41.5/65.0	0.42/0.50	54.123
41.5/65.0	0.44/0.50	1.101
41.5/65.0	0.46/0.50	1.148
41.5/65.0	0.48/0.50	1.105
41.5/65.0	0.50/0.50	54.433
42.0/65.0	0.00/0.50	32.531
42.0/65.0	0.02/0.50	35.308
42.0/65.0	0.04/0.50	36.921
42.0/65.0	0.06/0.50	38.539
42.0/65.0	0.08/0.50	49.219
42.0/65.0	0.10/0.50	47.153
42.0/65.0	0.12/0.50	1.002
42.0/65.0	0.14/0.50	1.092
42.0/65.0	0.16/0.50	1.358
42.0/65.0	0.18/0.50	1.268
42.0/65.0	0.20/0.50	1.233
42.0/65.0	0.22/0.50	1.388
42.0/65.0	0.24/0.50	1.303
42.0/65.0	0.26/0.50	1.119
42.0/65.0	0.28/0.50	1.295
42.0/65.0	0.30/0.50	1.29
42.0/65.0	0.32/0.50	1.123
42.0/65.0	0.34/0.50	1.215
42.0/65.0	0.36/0.50	1.177
42.0/65.0	0.38/0.50	1.164
42.0/65.0	0.40/0.50	1.15
42.0/65.0	0.42/0.50	1.085
42.0/65.0	0.44/0.50	1.125
42.0/65.0	0.46/0.50	1.132
42.0/65.0	0.48/0.50	55.434
42.0/65.0	0.50/0.50	59.898
42.5/65.0	0.00/0.50	34.602
42.5/65.0	0.02/0.50	35.282
42.5/65.0	0.04/0.50	38.709
42.5/65.0	0.06/0.50	38.183
42.5/65.0	0.08/0.50	42.34
42.5/65.0	0.10/0.50	41.781
42.5/65.0	0.12/0.50	1.22
42.5/65.0	0.14/0.50	1.208
42.5/65.0	0.16/0.50	1.255
42.5/65.0	0.18/0.50	1.258
42.5/65.0	0.20/0.50	1.414
42.5/65.0	0.22/0.50	1.294
42.5/65.0	0.24/0.50	1.276
42.5/65.0	0.26/0.50	1.307
42.5/65.0	0.28/0.50	1.342
42.5/65.0	0.30/0.50	1.089
42.5/65.0	0.32/0.50	1.195
42.5/65.0	0.34/0.50	1.253
42.5/65.0	0.36/0.50	1.186
42.5/65.0	0.38/0.50	58.781
42.5/65.0	0.40/0.50	1.164
42.5/65.0	0.42/0.50	1.163
42.5/65.0	0.44/0.50	1.039
42.5/65.0	0.46/0.50	1.041
42.5/65.0	0.48/0.50	1.065
42.5/65.0	0.50/0.50	1.073
43.0/65.0	0.00/0.50	35.442
43.0/65.0	0.02/0.50	32.929
43.0/65.0	0.04/0.50	35.893
43.0/65.0	0.06/0.50	36.419
43.0/65.0	0.08/0.50	45.311
43.0/65.0	0.10/0.50	51.801
43.0/65.0	0.12/0.50	1.065
43.0/65.0	0.14/0.50	1.034
43.0/65.0	0.16/0.50	1.25
43.0/65.0	0.18/0.50	1.387
43.0/65.0	0.20/0.50	1.306
43.0/65.0	0.22/0.50	1.207
43.0/65.0	0.24/0.50	1.367
43.0/65.0	0.26/0.50	1.331
43.0/65.0	0.28/0.50	1.265
43.0/65.0	0.30/0.50	1.24
43.0/65.0	0.32/0.50	1.226
43.0/65.0	0.34/0.50	1.262
43.0/65.0	0.36/0.50	1.096
43.0/65.0	0.38/0.50	1.14
43.0/65.0	0.40/0.50	1.167
43.0/65.0	0.42/0.50	59.039
43.0/65.0	0.44/0.50	59.344
43.0/65.0	0.46/0.50	1.135
43.0/65.0	0.48/0.50	1.123
43.0/65.0	0.50/0.50	58.725
43.5/65.0	0.00/0.50	30.37
43.5/65.0	0.02/0.50	35.647
43.5/65.0	0.04/0.50	35.859
43.5/65.0	0.06/0.50	39.746
43.5/65.0	0.08/0.50	55.704
43.5/65.0	0.10/0.50	52.599
43.5/65.0	0.12/0.50	1.014
43.5/65.0	0.14/0.50	1.288
43.5/65.0	0.16/0.50	1.282
43.5/65.0	0.18/0.50	1.285
43.5/65.0	0.20/0.50	1.321
43.5/65.0	0.22/0.50	1.41
43.5/65.0	0.24/0.50	1.248
43.5/65.0	0.26/0.50	1.213
43.5/65.0	0.28/0.50	1.355
43.5/65.0	0.30/0.50	1.267
43.5/65.0	0.32/0.50	1.073
43.5/65.0	0.34/0.50	1.214
43.5/65.0	0.36/0.50	1.18
43.5/65.0	0.38/0.50	1.158
43.5/65.0	0.40/0.50	1.111
43.5/65.0	0.42/0.50	1.04
43.5/65.0	0.44/0.50	1.132
43.5/65.0	0.46/0.50	1.103
43.5/65.0	0.48/0.50	56.709
43.5/65.0	0.50/0.50	1.077
44.0/65.0	0.00/0.50	35.695
44.0/65.0	0.02/0.50	36.765
44.0/65.0	0.04/0.50	35.261
44.0/65.0	0.06/0.50	32.467
44.0/65.0	0.08/0.50	32.905
44.0/65.0	0.10/0.50	45.518
44.0/65.0	0.12/0.50	1.115
44.0/65.0	0.14/0.50	1.263
44.0/65.0	0.16/0.50	1.089
44.0/65.0	0.18/0.50	1.296
44.0/65.0	0.20/0.50	1.341
44.0/65.0	0.22/0.50	1.213
44.0/65.0	0.24/0.50	1.355
44.0/65.0	0.26/0.50	1.272
44.0/65.0	0.28/0.50	1.305
44.0/65.0	0.30/0.50	1.185
44.0/65.0	0.32/0.50	1.165
44.0/65.0	0.34/0.50	1.214
44.0/65.0	0.36/0.50	1.176
44.0/65.0	0.38/0.50	59.574
44.0/65.0	0.40/0.50	1.194
44.0/65.0	0.42/0.50	1.154
44.0/65.0	0.44/0.50	58.678
44.0/65.0	0.46/0.50	58.284
44.0/65.0	0.48/0.50	1.119
44.0/65.0	0.50/0.50	1.117
44.5/65.0	0.00/0.50	33.13
44.5/65.0	0.02/0.50	29.53
44.5/65.0	0.04/0.50	36.406
44.5/65.0	0.06/0.50	40.509
44.5/65.0	0.08/0.50	43.136
44.5/65.0	0.10/0.50	1.062
44.5/65.0	0.12/0.50	1.171
44.5/65.0	0.14/0.50	1.044
44.5/65.0	0.16/0.50	1.167
44.5/65.0	0.18/0.50	1.37
44.5/65.0	0.20/0.50	1.213
44.5/65.0	0.22/0.50	1.308
44.5/65.0	0.24/0.50	1.343
44.5/65.0	0.26/0.50	1.23
44.5/65.0	0.28/0.50	1.102
44.5/65.0	0.30/0.50	1.289
44.5/65.0	0.32/0.50	1.239
44.5/65.0	0.34/0.50	1.015
44.5/65.0	0.36/0.50	1.172
44.5/65.0	0.38/0.50	1.166
44.5/65.0	0.40/0.50	1.1
44.5/65.0	0.42/0.50	1.03
44.5/65.0	0.44/0.50	1.096
44.5/65.0	0.46/0.50	1.094
44.5/65.0	0.48/0.50	1.022
44.5/65.0	0.50/0.50	1.038
45.0/65.0	0.00/0.50	34.61
45.0/65.0	0.02/0.50	35.476
45.0/65.0	0.04/0.50	34.524
45.0/65.0	0.06/0.50	40.896
45.0/65.0	0.08/0.50	49.729
45.0/65.0	0.10/0.50	55.593
45.0/65.0	0.12/0.50	53.17
45.0/65.0	0.14/0.50	1.053
45.0/65.0	0.16/0.50	1.382
45.0/65.0	0.18/0.50	1.189
45.0/65.0	0.20/0.50	1.372
45.0/65.0	0.22/0.50	1.387
45.0/65.0	0.24/0.50	1.101
45.0/65.0	0.26/0.50	1.264
45.0/65.0	0.28/0.50	1.292
45.0/65.0	0.30/0.50	1.185
45.0/65.0	0.32/0.50	1.02
45.0/65.0	0.34/0.50	1.227
45.0/65.0	0.36/0.50	1.216
45.0/65.0	0.38/0.50	1.064
45.0/65.0	0.40/0.50	1.034
45.0/65.0	0.42/0.50	1.135
45.0/65.0	0.44/0.50	1.185
45.0/65.0	0.46/0.50	55.332
45.0/65.0	0.48/0.50	1.042
45.0/65.0	0.50/0.50	1.091
45.5/65.0	0.00/0.50	35.865
45.5/65.0	0.02/0.50	33.487
45.5/65.0	0.04/0.50	30.192
45.5/65.0	0.06/0.50	40.718
45.5/65.0	0.08/0.50	52.876
45.5/65.0	0.10/0.50	49.662
45.5/65.0	0.12/0.50	52.809
45.5/65.0	0.14/0.50	1.027
45.5/65.0	0.16/0.50	1.344
45.5/65.0	0.18/0.50	1.337
45.5/65.0	0.20/0.50	1.328
45.5/65.0	0.22/0.50	1.333
45.5/65.0	0.24/0.50	1.266
45.5/65.0	0.26/0.50	1.338
45.5/65.0	0.28/0.50	1.144
45.5/65.0	0.30/0.50	1.247
45.5/65.0	0.32/0.50	1.256
45.5/65.0	0.34/0.50	1.137
45.5/65.0	0.36/0.50	1.014
45.5/65.0	0.38/0.50	1.191
45.5/65.0	0.40/0.50	1.186
45.5/65.0	0.42/0.50	1.02
45.5/65.0	0.44/0.50	57.225
45.5/65.0	0.46/0.50	1.115
45.5/65.0	0.48/0.50	1.089
45.5/65.0	0.50/0.50	59.795
46.0/65.0	0.00/0.50	31.312
46.0/65.0	0.02/0.50	35.941
46.0/65.0	0.04/0.50	37.884
46.0/65.0	0.06/0.50	40.871
46.0/65.0	0.08/0.50	54.237
46.0/65.0	0.10/0.50	59.423
46.0/65.0	0.12/0.50	1.003
46.0/65.0	0.14/0.50	1.236
46.0/65.0	0.16/0.50	1.413
46.0/65.0	0.18/0.50	1.192
46.0/65.0	0.20/0.50	1.216
46.0/65.0	0.22/0.50	1.4
46.0/65.0	0.24/0.50	1.238
46.0/65.0	0.26/0.50	1.16
46.0/65.0	0.28/0.50	1.257
46.0/65.0	0.30/0.50	1.316
46.0/65.0	0.32/0.50	1.053
46.0/65.0	0.34/0.50	1.136
46.0/65.0	0.36/0.50	1.217
46.0/65.0	0.38/0.50	1.141
46.0/65.0	0.40/0.50	57.96
46.0/65.0	0.42/0.50	1.119
46.0/65.0	0.44/0.50	1.146
46.0/65.0	0.46/0.50	1.015
46.0/65.0	0.48/0.50	1.012
46.0/65.0	0.50/0.50	1.065
46.5/65.0	0.00/0.50	36.308
46.5/65.0	0.02/0.50	32.752
46.5/65.0	0.04/0.50	32.67
46.5/65.0	0.06/0.50	37.737
46.5/65.0	0.08/0.50	51.032
46.5/65.0	0.10/0.50	59.9
46.5/65.0	0.12/0.50	1.084
46.5/65.0	0.14/0.50	1.194
46.5/65.0	0.16/0.50	1.308
46.5/65.0	0.18/0.50	1.322
46.5/65.0	0.20/0.50	1.387
46.5/65.0	0.22/0.50	1.261
46.5/65.0	0.24/0.50	1.359
46.5/65.0	0.26/0.50	1.306
46.5/65.0	0.28/0.50	1.066
46.5/65.0	0.30/0.50	1.239
46.5/65.0	0.32/0.50	1.248
46.5/65.0	0.34/0.50	1.209
46.5/65.0	0.36/0.50	57.189
46.5/65.0	0.38/0.50	1.16
46.5/65.0	0.40/0.50	1.185
46.5/65.0	0.42/0.50	1.107
46.5/65.0	0.44/0.50	58.215
46.5/65.0	0.46/0.50	1.086
46.5/65.0	0.48/0.50	1.113
46.5/65.0	0.50/0.50	58.096
47.0/65.0	0.00/0.50	29.222
47.0/65.0	0.02/0.50	34.999
47.0/65.0	0.04/0.50	37.244
47.0/65.0	0.06/0.50	43.857
47.0/65.0	0.08/0.50	55.08
47.0/65.0	0.10/0.50	1.033
47.0/65.0	0.12/0.50	1.151
47.0/65.0	0.14/0.50	1.257
47.0/65.0	0.16/0.50	1.131
47.0/65.0	0.18/0.50	1.397
47.0/65.0	0.20/0.50	1.355
47.0/65.0	0.22/0.50	1.249
47.0/65.0	0.24/0.50	1.324
47.0/65.0	0.26/0.50	1.249
47.0/65.0	0.28/0.50	1.148
47.0/65.0	0.30/0.50	1.27
47.0/65.0	0.32/0.50	1.203
47.0/65.0	0.34/0.50	1.054
47.0/65.0	0.36/0.50	1.255
47.0/65.0	0.38/0.50	1.196
47.0/65.0	0.40/0.50	1.114
47.0/65.0	0.42/0.50	1.179
47.0/65.0	0.44/0.50	1.165
47.0/65.0	0.46/0.50	1.089
47.0/65.0	0.48/0.50	57.695
47.0/65.0	0.50/0.50	57.284
47.5/65.0	0.00/0.50	35.218
47.5/65.0	0.02/0.50	35.909
47.5/65.0	0.04/0.50	36.174
47.5/65.0	0.06/0.50	38.921
47.5/65.0	0.08/0.50	41.799
47.5/65.0	0.10/0.50	57.96
47.5/65.0	0.12/0.50	1.034
47.5/65.0	0.14/0.50	1.064
47.5/65.0	0.16/0.50	1.173
47.5/65.0	0.18/0.50	1.342
47.5/65.0	0.20/0.50	1.351
47.5/65.0	0.22/0.50	1.392
47.5/65.0	0.24/0.50	1.18
47.5/65.0	0.26/0.50	1.279
47.5/65.0	0.28/0.50	1.35
47.5/65.0	0.30/0.50	1.128
47.5/65.0	0.32/0.50	1.123
47.5/65.0	0.34/0.50	1.229
47.5/65.0	0.36/0.50	1.206
47.5/65.0	0.38/0.50	57.423
47.5/65.0	0.40/0.50	1.056
47.5/65.0	0.42/0.50	1.144
47.5/65.0	0.44/0.50	1.171
47.5/65.0	0.46/0.50	57.642
47.5/65.0	0.48/0.50	1.089
47.5/65.0	0.50/0.50	1.106
48.0/65.0	0.00/0.50	32.244
Error in `[<-`(`*tmp*`, i, j, , value = vals[, 1]) : 
  subscript out of bounds
Execution halted
