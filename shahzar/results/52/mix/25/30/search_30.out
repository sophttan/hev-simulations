
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> rm(list = ls())
> gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 284765 15.3     664565 35.5   464468 24.9
Vcells 490458  3.8    8388608 64.0  1837328 14.1
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(foreach)
> library(doParallel)
Loading required package: iterators
Loading required package: parallel
> 
> # Set up the number of cores used for parallelization.
> message(detectCores())
32
> num_cores <- 32
> registerDoParallel(num_cores)
> 
> #########################
> #### SEIR Simulation ####
> #########################
> time <- 365 # Number of days.
> inf <- 7 # Average infectious period length.
> N <- 1000 # Population size.
> 
> create_hh <- function() {
+   # Randomly sample household sizes such that total population is 1000 
+   # individuals.
+   hh_size <- sample(x = c(3, 4, 5, 6), size = 340, replace = T)
+   
+   # Keep households such that total population is < 1000.
+   hh_size <- hh_size[which(cumsum(hh_size) < N)]
+   
+   leftover <- N - sum(hh_size)
+   if (leftover < 3) {
+     hh <- 1:length(hh_size)
+     sampled <- sample(hh[hh_size < 6], leftover)
+     hh_size[sampled] <- hh_size[sampled] + 1
+   } else {
+     hh_size <- c(hh_size, leftover)
+   }
+   return(hh_size)
+ }
> 
> SEIR_mix <- function(params, inf = 7, verbose = F) {
+   hh_size <- create_hh()
+   
+   # Create frame for running the simulation.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # S: susceptibility status.
+   # E: exposed status.
+   # E_count: number of days since exposed.
+   # I: infectious status.
+   # I_count: number of days since infectious.
+   # R: recovered status.
+   # INC: incubation period.
+   # INF: infectious period.
+   data <- data.frame(ID = 1:N,
+                      SIZE = rep(hh_size, times = hh_size),
+                      HH = rep(1:length(hh_size), times = hh_size), 
+                      S = c(0, rep(1, N - 1)), 
+                      E = c(1, rep(0, N - 1)),
+                      E_count = c(1, rep(0, N - 1)), 
+                      I = 0,
+                      I_count = 0, 
+                      R = 0, 
+                      INC = c(rlnorm(1, meanlog = log(29.8), sdlog = 0.45), rep(0, N - 1)),
+                      INF = 0)
+   
+   # Create frame for storing results.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # TYPE: the kind of infection: household (H), community (C), or both (B).
+   # TIME: when the individual became infectious.
+   # S_NUM: number of susceptible people in individual's household when their 
+   #        infectious period begins.
+   # I_NUM: number of people in household that this individual infected over 
+   #        their infectious period.
+   results <- data[, 1:3] %>% mutate(TYPE = NA, TIME = NA, S_NUM = NA, I_NUM = 0)
+   results$TYPE[1] <- '0'
+   
+   for(t in 1:time) {
+     if (verbose) {
+       if (t %% 10 == 0) {
+         cat(paste0(t, ' '))
+       }
+     }
+     
+     # Anyone who has been infectious for as many days as their infectious period
+     # is now recovered.
+     recovered <- (data$INF > 0) & (data$I_count == data$INF)
+     if(sum(recovered, na.rm = T) > 0) {
+       data$R[recovered] <- 1
+       data$I[recovered] <- 0
+       data$I_count[recovered] <- 0 
+     }
+     
+     new_inf <- (data$INC > 0) & (data$E_count == data$INC)
+     num_new_inf <- sum(new_inf, na.rm = T)
+     if(num_new_inf > 0) {
+       # Change status to newly infectious and add infectious period.
+       data$I[new_inf] <- 1
+       random_inf <- rnorm(num_new_inf, mean = inf, sd = 1) %>% round()
+       data$INF[new_inf] <- random_inf
+       
+       # Remove exposure status and exposure count.
+       data$E[new_inf] <- 0
+       data$E_count[new_inf] <- 0 
+       
+       # Record time at which infectious period starts.
+       results$TIME[new_inf] <- t
+       
+       # Save the number of susceptible people in each infectious individual's 
+       # household.
+       S_data <- data %>% group_by(HH) %>% 
+         mutate(S_TOT = sum(S)) %>% 
+         select(HH, S_TOT)
+       results$S_NUM[new_inf == 1] <- S_data$S_TOT[new_inf == 1]
+     }
+     
+     # I_H is the number of infections inside each household.
+     # I_C is the number of infections outside each household.
+     I_data <- data %>% group_by(HH) %>% 
+       mutate(I_H = sum(I)) %>% 
+       ungroup() %>% 
+       mutate(I_C = sum(I) - I_H)
+     
+     beta_H <- params[1]
+     beta_C <- params[2]
+     beta_E <- params[3]
+     risk_H <- pmin(beta_H * data$S * I_data$I_H / N, 1)
+     risk_C <- pmin(beta_C * data$S * I_data$I_C / N, 1)
+     risk_E <- pmin(beta_E * data$S, 1)
+ 
+     new_inf_H <- rbinom(N, 1, risk_H)
+     new_inf_C <- rbinom(N, 1, risk_C)
+     new_inf_E <- rbinom(N, 1, risk_E)
+     new_exposed <- (new_inf_H == 1) | (new_inf_C == 1) | (new_inf_E == 1)
+     num_new_exposed <- sum(new_exposed, na.rm = T)
+     if (num_new_exposed > 0) {
+       # Change status to newly exposed and add incubation period.
+       data$E[new_exposed] <- 1
+       random_inc <- rlnorm(num_new_exposed, meanlog = log(29.8), sdlog = 0.45) %>% round()
+       data$INC[new_exposed] <- random_inc
+       
+       # Remove susceptible status.
+       data$S[new_exposed] <- 0
+       
+       # Get number of new infections in each household.
+       I_data <- I_data %>%
+         select(ID, HH, I, I_H) %>%
+         mutate(new_I_H = new_inf_H) %>%
+         group_by(HH) %>%
+         # Find households with at least 1 currently infectious individual. If 
+         # exactly 1 infectious individual in household, assign all new H 
+         # exposures to that individual. If there are multiple infectious 
+         # individuals, assign all infections to the infectious individual with 
+         # the first ID.
+         mutate(new_I_H = ifelse(I == 1 & ID == first(ID[I == 1]), 
+                                 sum(new_I_H), 0))
+       
+       results$I_NUM <- results$I_NUM + I_data$new_I_H
+       
+       # Label infections types.
+       results$TYPE[new_inf_H == 1] <- 'H'
+       results$TYPE[new_inf_C == 1] <- 'C'
+       results$TYPE[new_inf_E == 1] <- 'E'
+       results$TYPE[(new_inf_H == 1) & (new_inf_C == 1)] <- 'HC'
+       results$TYPE[(new_inf_H == 1) & (new_inf_E == 1)] <- 'HE'
+       results$TYPE[(new_inf_C == 1) & (new_inf_E == 1)] <- 'CE'
+       results$TYPE[(new_inf_H == 1) & (new_inf_C == 1) & (new_inf_E == 1)] <- 'HCE'
+     }
+     
+     # Increment exposure and infectious counters.
+     data$E_count[data$E == 1] <- data$E_count[data$E == 1] + 1
+     data$I_count[data$I == 1] <- data$I_count[data$I == 1] + 1
+   }
+   return(results)
+ }
> 
> metrics <- function(results) {
+   # Incidence is the proportion of the population that became infected.
+   idc <- mean(!is.na(results$TIME))
+   
+   # The SAR is the average SAR for each individual that was infectious.
+   sar <- mean(results$I_NUM / results$S_NUM, na.rm = T)
+   
+   # The proportion of cases caused by household infections.
+   cases <- results[!is.na(results$TIME), ]
+   prp <- mean((cases$TYPE != 'E') & (cases$TYPE != '0'))
+ 
+   return(c(idc, sar, prp))
+ }
> 
> beta_Hs <- seq(12, 15, 1) # 4
> beta_Cs <- seq(0, 0.005, 0.001) # 6
> beta_Es <- seq(0.00075, 0.00085, 0.00001) # 11
> 
> d_H <- length(beta_Hs)
> d_C <- length(beta_Cs)
> d_E <- length(beta_Es)
> 
> reps <- 200
> idcs <- array(rep(NA, d_H * d_C * d_E * reps), dim = c(d_H, d_C, d_E, reps))
> sars <- array(rep(NA, d_H * d_C * d_E * reps), dim = c(d_H, d_C, d_E, reps))
> prps <- array(rep(NA, d_H * d_C * d_E * reps), dim = c(d_H, d_C, d_E, reps))
> t_tot <- 0
> for (i in 1:d_H) {
+   for (j in 1:d_C) {
+     for (k in 1:d_E) {
+       beta_H <- beta_Hs[i]
+       beta_C <- beta_Cs[j]
+       beta_E <- beta_Es[k]
+       
+       params <- c(beta_H, beta_C, beta_E)
+       
+       cat(paste0(format(beta_H, nsmall = 1), '/15\t', 
+                  format(beta_C, nsmall = 3), '/0.005\t',
+                  format(beta_E, nsmall = 5, scientific = F), '/0.00095\t'))
+         
+       t_0 <- Sys.time()
+       vals <- foreach (l = 1:reps, .combine = 'c') %dopar% {
+         results <- SEIR_mix(params) 
+         metrics(results)
+       }
+       t_1 <- Sys.time()
+       t_tot <- t_tot + (t_1 - t_0)
+         
+       cat(paste0(format(t_tot, nsmall = 2, digits = 4), '\t(', 
+                  format(t_1 - t_0, nsmall = 2, digits = 4), ')\t'))
+       
+       vals <- matrix(vals, reps, byrow = T)
+       idcs[i, j, k, ] <- vals[, 1]
+       sars[i, j, k, ] <- vals[, 2]
+       prps[i, j, k, ] <- vals[, 3]
+         
+       cat(paste0(format(round(mean(vals[, 1]), 3), nsmall = 3), '\t', 
+                  format(round(mean(vals[, 2]), 3), nsmall = 3), '\t', 
+                  format(round(mean(vals[, 3]), 3), nsmall = 3), '\n'))
+     }
+     cat('\n')
+     saveRDS(idcs, file = 'idcs.rds')
+     saveRDS(sars, file = 'sars.rds')
+     saveRDS(prps, file = 'prps.rds')
+     
+     write.table(idcs, file = 'idcs.txt', row.names = F, col.names = F)
+     write.table(sars, file = 'sars.txt', row.names = F, col.names = F)
+     write.table(prps, file = 'prps.txt', row.names = F, col.names = F)
+   }
+   message('\n')
+ }
12.0/15	0.000/0.005	0.00075/0.00095	2.712 mins	(2.712 mins)	0.275	0.080	0.223
12.0/15	0.000/0.005	0.00076/0.00095	5.418 mins	(2.706 mins)	0.278	0.080	0.222
12.0/15	0.000/0.005	0.00077/0.00095	8.114 mins	(2.696 mins)	0.280	0.080	0.224
12.0/15	0.000/0.005	0.00078/0.00095	10.84 mins	(2.73 mins)	0.283	0.081	0.221
12.0/15	0.000/0.005	0.00079/0.00095	13.57 mins	(2.727 mins)	0.286	0.079	0.219
12.0/15	0.000/0.005	0.00080/0.00095	16.28 mins	(2.713 mins)	0.289	0.080	0.220
12.0/15	0.000/0.005	0.00081/0.00095	19.07 mins	(2.781 mins)	0.293	0.079	0.218
12.0/15	0.000/0.005	0.00082/0.00095	21.82 mins	(2.759 mins)	0.296	0.081	0.221
12.0/15	0.000/0.005	0.00083/0.00095	24.62 mins	(2.794 mins)	0.298	0.080	0.218
12.0/15	0.000/0.005	0.00084/0.00095	27.40 mins	(2.783 mins)	0.302	0.080	0.220
12.0/15	0.000/0.005	0.00085/0.00095	30.19 mins	(2.784 mins)	0.303	0.080	0.215

12.0/15	0.001/0.005	0.00075/0.00095	32.91 mins	(2.728 mins)	0.277	0.081	0.230
12.0/15	0.001/0.005	0.00076/0.00095	35.64 mins	(2.727 mins)	0.279	0.078	0.223
12.0/15	0.001/0.005	0.00077/0.00095	38.37 mins	(2.729 mins)	0.284	0.079	0.226
12.0/15	0.001/0.005	0.00078/0.00095	41.15 mins	(2.785 mins)	0.285	0.080	0.226
12.0/15	0.001/0.005	0.00079/0.00095	43.89 mins	(2.735 mins)	0.288	0.081	0.226
12.0/15	0.001/0.005	0.00080/0.00095	46.65 mins	(2.765 mins)	0.290	0.079	0.223
12.0/15	0.001/0.005	0.00081/0.00095	49.45 mins	(2.794 mins)	0.292	0.079	0.225
12.0/15	0.001/0.005	0.00082/0.00095	52.24 mins	(2.787 mins)	0.294	0.080	0.223
12.0/15	0.001/0.005	0.00083/0.00095	55.02 mins	(2.785 mins)	0.302	0.081	0.228
12.0/15	0.001/0.005	0.00084/0.00095	57.81 mins	(2.789 mins)	0.304	0.081	0.226
12.0/15	0.001/0.005	0.00085/0.00095	60.64 mins	(2.825 mins)	0.305	0.080	0.227

12.0/15	0.002/0.005	0.00075/0.00095	63.32 mins	(2.689 mins)	0.276	0.079	0.230
12.0/15	0.002/0.005	0.00076/0.00095	66.03 mins	(2.703 mins)	0.277	0.078	0.228
12.0/15	0.002/0.005	0.00077/0.00095	68.77 mins	(2.747 mins)	0.285	0.081	0.233
12.0/15	0.002/0.005	0.00078/0.00095	71.50 mins	(2.731 mins)	0.285	0.080	0.232
12.0/15	0.002/0.005	0.00079/0.00095	74.27 mins	(2.764 mins)	0.289	0.079	0.229
12.0/15	0.002/0.005	0.00080/0.00095	77.01 mins	(2.744 mins)	0.293	0.080	0.230
12.0/15	0.002/0.005	0.00081/0.00095	79.79 mins	(2.775 mins)	0.296	0.080	0.231
12.0/15	0.002/0.005	0.00082/0.00095	82.57 mins	(2.783 mins)	0.300	0.080	0.231
12.0/15	0.002/0.005	0.00083/0.00095	85.36 mins	(2.79 mins)	0.299	0.079	0.228
12.0/15	0.002/0.005	0.00084/0.00095	88.17 mins	(2.805 mins)	0.303	0.079	0.229
12.0/15	0.002/0.005	0.00085/0.00095	91.00 mins	(2.834 mins)	0.308	0.079	0.228

12.0/15	0.003/0.005	0.00075/0.00095	93.73 mins	(2.73 mins)	0.278	0.079	0.235
12.0/15	0.003/0.005	0.00076/0.00095	96.49 mins	(2.758 mins)	0.281	0.081	0.239
12.0/15	0.003/0.005	0.00077/0.00095	99.21 mins	(2.723 mins)	0.283	0.081	0.240
12.0/15	0.003/0.005	0.00078/0.00095	101.96 mins	(2.744 mins)	0.287	0.080	0.237
12.0/15	0.003/0.005	0.00079/0.00095	104.72 mins	(2.763 mins)	0.291	0.081	0.238
12.0/15	0.003/0.005	0.00080/0.00095	107.47 mins	(2.754 mins)	0.295	0.080	0.234
12.0/15	0.003/0.005	0.00081/0.00095	110.25 mins	(2.781 mins)	0.299	0.081	0.239
12.0/15	0.003/0.005	0.00082/0.00095	113.02 mins	(2.77 mins)	0.299	0.079	0.231
12.0/15	0.003/0.005	0.00083/0.00095	115.83 mins	(2.803 mins)	0.305	0.080	0.235
12.0/15	0.003/0.005	0.00084/0.00095	118.63 mins	(2.808 mins)	0.307	0.080	0.235
12.0/15	0.003/0.005	0.00085/0.00095	121.48 mins	(2.847 mins)	0.308	0.080	0.234

12.0/15	0.004/0.005	0.00075/0.00095	124.22 mins	(2.734 mins)	0.281	0.079	0.240
12.0/15	0.004/0.005	0.00076/0.00095	126.96 mins	(2.747 mins)	0.282	0.080	0.241
12.0/15	0.004/0.005	0.00077/0.00095	129.71 mins	(2.749 mins)	0.286	0.079	0.239
12.0/15	0.004/0.005	0.00078/0.00095	132.49 mins	(2.778 mins)	0.291	0.079	0.240
12.0/15	0.004/0.005	0.00079/0.00095	135.26 mins	(2.769 mins)	0.292	0.080	0.241
12.0/15	0.004/0.005	0.00080/0.00095	138.04 mins	(2.782 mins)	0.294	0.079	0.238
12.0/15	0.004/0.005	0.00081/0.00095	140.83 mins	(2.788 mins)	0.297	0.079	0.240
12.0/15	0.004/0.005	0.00082/0.00095	143.64 mins	(2.814 mins)	0.302	0.080	0.241
12.0/15	0.004/0.005	0.00083/0.00095	146.43 mins	(2.784 mins)	0.303	0.078	0.236
12.0/15	0.004/0.005	0.00084/0.00095	149.24 mins	(2.807 mins)	0.307	0.080	0.236
12.0/15	0.004/0.005	0.00085/0.00095	152.09 mins	(2.853 mins)	0.309	0.081	0.239

12.0/15	0.005/0.005	0.00075/0.00095	154.83 mins	(2.742 mins)	0.283	0.080	0.248
12.0/15	0.005/0.005	0.00076/0.00095	157.58 mins	(2.747 mins)	0.287	0.080	0.249
12.0/15	0.005/0.005	0.00077/0.00095	160.32 mins	(2.743 mins)	0.289	0.081	0.247
12.0/15	0.005/0.005	0.00078/0.00095	163.07 mins	(2.753 mins)	0.292	0.081	0.247
12.0/15	0.005/0.005	0.00079/0.00095	165.82 mins	(2.745 mins)	0.290	0.079	0.244
12.0/15	0.005/0.005	0.00080/0.00095	168.62 mins	(2.807 mins)	0.298	0.080	0.249
12.0/15	0.005/0.005	0.00081/0.00095	171.46 mins	(2.834 mins)	0.299	0.080	0.245
12.0/15	0.005/0.005	0.00082/0.00095	174.27 mins	(2.807 mins)	0.303	0.081	0.248
12.0/15	0.005/0.005	0.00083/0.00095	177.05 mins	(2.784 mins)	0.306	0.080	0.243
12.0/15	0.005/0.005	0.00084/0.00095	179.87 mins	(2.817 mins)	0.310	0.080	0.242
12.0/15	0.005/0.005	0.00085/0.00095	182.70 mins	(2.833 mins)	0.312	0.080	0.243



13.0/15	0.000/0.005	0.00075/0.00095	185.43 mins	(2.73 mins)	0.279	0.086	0.239
13.0/15	0.000/0.005	0.00076/0.00095	188.14 mins	(2.709 mins)	0.282	0.087	0.238
13.0/15	0.000/0.005	0.00077/0.00095	190.90 mins	(2.757 mins)	0.286	0.086	0.237
13.0/15	0.000/0.005	0.00078/0.00095	193.63 mins	(2.737 mins)	0.291	0.087	0.240
13.0/15	0.000/0.005	0.00079/0.00095	196.42 mins	(2.79 mins)	0.292	0.086	0.237
13.0/15	0.000/0.005	0.00080/0.00095	199.18 mins	(2.754 mins)	0.294	0.086	0.235
13.0/15	0.000/0.005	0.00081/0.00095	201.96 mins	(2.783 mins)	0.299	0.088	0.239
13.0/15	0.000/0.005	0.00082/0.00095	204.73 mins	(2.773 mins)	0.298	0.085	0.232
13.0/15	0.000/0.005	0.00083/0.00095	207.51 mins	(2.778 mins)	0.302	0.085	0.232
13.0/15	0.000/0.005	0.00084/0.00095	210.30 mins	(2.789 mins)	0.306	0.086	0.236
13.0/15	0.000/0.005	0.00085/0.00095	213.12 mins	(2.817 mins)	0.311	0.087	0.236

13.0/15	0.001/0.005	0.00075/0.00095	215.84 mins	(2.718 mins)	0.282	0.087	0.244
13.0/15	0.001/0.005	0.00076/0.00095	218.57 mins	(2.737 mins)	0.282	0.086	0.242
13.0/15	0.001/0.005	0.00077/0.00095	221.31 mins	(2.734 mins)	0.287	0.086	0.241
13.0/15	0.001/0.005	0.00078/0.00095	224.04 mins	(2.736 mins)	0.289	0.085	0.241
13.0/15	0.001/0.005	0.00079/0.00095	226.83 mins	(2.783 mins)	0.294	0.086	0.242
13.0/15	0.001/0.005	0.00080/0.00095	229.60 mins	(2.775 mins)	0.297	0.086	0.242
13.0/15	0.001/0.005	0.00081/0.00095	232.39 mins	(2.791 mins)	0.297	0.086	0.241
13.0/15	0.001/0.005	0.00082/0.00095	235.19 mins	(2.798 mins)	0.302	0.086	0.241
13.0/15	0.001/0.005	0.00083/0.00095	238.01 mins	(2.819 mins)	0.305	0.087	0.242
13.0/15	0.001/0.005	0.00084/0.00095	240.84 mins	(2.83 mins)	0.307	0.086	0.238
13.0/15	0.001/0.005	0.00085/0.00095	243.67 mins	(2.828 mins)	0.309	0.087	0.238

13.0/15	0.002/0.005	0.00075/0.00095	246.47 mins	(2.80 mins)	0.285	0.086	0.248
13.0/15	0.002/0.005	0.00076/0.00095	249.37 mins	(2.907 mins)	0.283	0.086	0.245
13.0/15	0.002/0.005	0.00077/0.00095	252.23 mins	(2.86 mins)	0.288	0.085	0.246
13.0/15	0.002/0.005	0.00078/0.00095	255.02 mins	(2.79 mins)	0.291	0.087	0.247
13.0/15	0.002/0.005	0.00079/0.00095	257.79 mins	(2.762 mins)	0.296	0.088	0.250
13.0/15	0.002/0.005	0.00080/0.00095	260.62 mins	(2.829 mins)	0.299	0.086	0.246
13.0/15	0.002/0.005	0.00081/0.00095	263.42 mins	(2.809 mins)	0.301	0.087	0.247
13.0/15	0.002/0.005	0.00082/0.00095	266.25 mins	(2.823 mins)	0.302	0.086	0.246
13.0/15	0.002/0.005	0.00083/0.00095	269.05 mins	(2.801 mins)	0.307	0.086	0.243
13.0/15	0.002/0.005	0.00084/0.00095	271.89 mins	(2.845 mins)	0.309	0.086	0.245
13.0/15	0.002/0.005	0.00085/0.00095	274.76 mins	(2.868 mins)	0.313	0.085	0.242

13.0/15	0.003/0.005	0.00075/0.00095	277.57 mins	(2.811 mins)	0.285	0.086	0.252
13.0/15	0.003/0.005	0.00076/0.00095	280.34 mins	(2.767 mins)	0.288	0.085	0.251
13.0/15	0.003/0.005	0.00077/0.00095	283.11 mins	(2.772 mins)	0.287	0.086	0.252
13.0/15	0.003/0.005	0.00078/0.00095	285.87 mins	(2.758 mins)	0.292	0.086	0.251
13.0/15	0.003/0.005	0.00079/0.00095	288.67 mins	(2.803 mins)	0.298	0.087	0.252
13.0/15	0.003/0.005	0.00080/0.00095	291.47 mins	(2.795 mins)	0.300	0.086	0.251
13.0/15	0.003/0.005	0.00081/0.00095	294.27 mins	(2.799 mins)	0.301	0.086	0.252
13.0/15	0.003/0.005	0.00082/0.00095	297.07 mins	(2.799 mins)	0.306	0.087	0.251
13.0/15	0.003/0.005	0.00083/0.00095	299.91 mins	(2.846 mins)	0.311	0.086	0.248
13.0/15	0.003/0.005	0.00084/0.00095	302.72 mins	(2.807 mins)	0.310	0.086	0.247
13.0/15	0.003/0.005	0.00085/0.00095	305.58 mins	(2.866 mins)	0.315	0.085	0.247

13.0/15	0.004/0.005	0.00075/0.00095	308.31 mins	(2.727 mins)	0.287	0.088	0.259
13.0/15	0.004/0.005	0.00076/0.00095	311.06 mins	(2.753 mins)	0.287	0.085	0.256
13.0/15	0.004/0.005	0.00077/0.00095	313.88 mins	(2.811 mins)	0.293	0.086	0.259
13.0/15	0.004/0.005	0.00078/0.00095	316.71 mins	(2.83 mins)	0.295	0.087	0.259
13.0/15	0.004/0.005	0.00079/0.00095	319.50 mins	(2.798 mins)	0.299	0.085	0.255
13.0/15	0.004/0.005	0.00080/0.00095	322.33 mins	(2.824 mins)	0.304	0.087	0.257
13.0/15	0.004/0.005	0.00081/0.00095	325.14 mins	(2.811 mins)	0.303	0.087	0.259
13.0/15	0.004/0.005	0.00082/0.00095	327.97 mins	(2.832 mins)	0.308	0.087	0.257
13.0/15	0.004/0.005	0.00083/0.00095	330.80 mins	(2.83 mins)	0.310	0.087	0.256
13.0/15	0.004/0.005	0.00084/0.00095	333.62 mins	(2.821 mins)	0.313	0.086	0.253
13.0/15	0.004/0.005	0.00085/0.00095	336.48 mins	(2.854 mins)	0.314	0.085	0.253

13.0/15	0.005/0.005	0.00075/0.00095	339.21 mins	(2.738 mins)	0.290	0.085	0.264
13.0/15	0.005/0.005	0.00076/0.00095	341.98 mins	(2.764 mins)	0.290	0.087	0.266
13.0/15	0.005/0.005	0.00077/0.00095	344.75 mins	(2.771 mins)	0.296	0.086	0.266
13.0/15	0.005/0.005	0.00078/0.00095	347.54 mins	(2.794 mins)	0.296	0.086	0.259
13.0/15	0.005/0.005	0.00079/0.00095	350.35 mins	(2.81 mins)	0.301	0.087	0.264
13.0/15	0.005/0.005	0.00080/0.00095	353.19 mins	(2.84 mins)	0.303	0.087	0.263
13.0/15	0.005/0.005	0.00081/0.00095	355.99 mins	(2.802 mins)	0.306	0.087	0.261
13.0/15	0.005/0.005	0.00082/0.00095	358.83 mins	(2.839 mins)	0.309	0.087	0.262
13.0/15	0.005/0.005	0.00083/0.00095	361.68 mins	(2.844 mins)	0.312	0.086	0.259
13.0/15	0.005/0.005	0.00084/0.00095	364.51 mins	(2.835 mins)	0.315	0.087	0.260
13.0/15	0.005/0.005	0.00085/0.00095	367.39 mins	(2.878 mins)	0.317	0.086	0.257



14.0/15	0.000/0.005	0.00075/0.00095	370.22 mins	(2.826 mins)	0.285	0.094	0.258
14.0/15	0.000/0.005	0.00076/0.00095	373.07 mins	(2.852 mins)	0.287	0.092	0.250
14.0/15	0.000/0.005	0.00077/0.00095	375.91 mins	(2.843 mins)	0.291	0.094	0.255
14.0/15	0.000/0.005	0.00078/0.00095	378.84 mins	(2.925 mins)	0.293	0.093	0.251
14.0/15	0.000/0.005	0.00079/0.00095	381.76 mins	(2.926 mins)	0.297	0.092	0.251
14.0/15	0.000/0.005	0.00080/0.00095	384.65 mins	(2.889 mins)	0.299	0.092	0.249
14.0/15	0.000/0.005	0.00081/0.00095	387.54 mins	(2.893 mins)	0.304	0.092	0.251
14.0/15	0.000/0.005	0.00082/0.00095	390.38 mins	(2.833 mins)	0.306	0.093	0.251
14.0/15	0.000/0.005	0.00083/0.00095	393.20 mins	(2.819 mins)	0.310	0.092	0.250
14.0/15	0.000/0.005	0.00084/0.00095	396.04 mins	(2.844 mins)	0.311	0.093	0.249
14.0/15	0.000/0.005	0.00085/0.00095	398.87 mins	(2.829 mins)	0.314	0.093	0.250

14.0/15	0.001/0.005	0.00075/0.00095	401.61 mins	(2.736 mins)	0.286	0.091	0.255
14.0/15	0.001/0.005	0.00076/0.00095	404.37 mins	(2.762 mins)	0.290	0.094	0.259
14.0/15	0.001/0.005	0.00077/0.00095	407.12 mins	(2.756 mins)	0.291	0.093	0.256
14.0/15	0.001/0.005	0.00078/0.00095	409.90 mins	(2.777 mins)	0.295	0.093	0.257
14.0/15	0.001/0.005	0.00079/0.00095	412.69 mins	(2.787 mins)	0.299	0.092	0.256
14.0/15	0.001/0.005	0.00080/0.00095	415.46 mins	(2.769 mins)	0.300	0.092	0.255
14.0/15	0.001/0.005	0.00081/0.00095	418.26 mins	(2.798 mins)	0.304	0.093	0.257
14.0/15	0.001/0.005	0.00082/0.00095	421.09 mins	(2.835 mins)	0.307	0.092	0.255
14.0/15	0.001/0.005	0.00083/0.00095	423.93 mins	(2.838 mins)	0.308	0.093	0.257
14.0/15	0.001/0.005	0.00084/0.00095	426.76 mins	(2.833 mins)	0.315	0.093	0.256
14.0/15	0.001/0.005	0.00085/0.00095	429.65 mins	(2.884 mins)	0.318	0.093	0.255

14.0/15	0.002/0.005	0.00075/0.00095	432.41 mins	(2.76 mins)	0.289	0.093	0.264
14.0/15	0.002/0.005	0.00076/0.00095	435.22 mins	(2.81 mins)	0.292	0.092	0.261
14.0/15	0.002/0.005	0.00077/0.00095	437.97 mins	(2.751 mins)	0.293	0.093	0.263
14.0/15	0.002/0.005	0.00078/0.00095	440.76 mins	(2.79 mins)	0.296	0.093	0.262
14.0/15	0.002/0.005	0.00079/0.00095	443.56 mins	(2.799 mins)	0.300	0.094	0.263
14.0/15	0.002/0.005	0.00080/0.00095	446.34 mins	(2.787 mins)	0.304	0.093	0.263
14.0/15	0.002/0.005	0.00081/0.00095	449.18 mins	(2.832 mins)	0.306	0.092	0.260
14.0/15	0.002/0.005	0.00082/0.00095	451.99 mins	(2.818 mins)	0.308	0.092	0.259
14.0/15	0.002/0.005	0.00083/0.00095	454.83 mins	(2.834 mins)	0.314	0.093	0.261
14.0/15	0.002/0.005	0.00084/0.00095	457.67 mins	(2.845 mins)	0.314	0.092	0.259
14.0/15	0.002/0.005	0.00085/0.00095	460.55 mins	(2.874 mins)	0.318	0.093	0.259

14.0/15	0.003/0.005	0.00075/0.00095	463.32 mins	(2.775 mins)	0.289	0.094	0.270
14.0/15	0.003/0.005	0.00076/0.00095	466.09 mins	(2.771 mins)	0.291	0.092	0.267
14.0/15	0.003/0.005	0.00077/0.00095	468.91 mins	(2.816 mins)	0.297	0.094	0.270
14.0/15	0.003/0.005	0.00078/0.00095	471.68 mins	(2.774 mins)	0.299	0.093	0.268
14.0/15	0.003/0.005	0.00079/0.00095	474.47 mins	(2.789 mins)	0.304	0.093	0.268
14.0/15	0.003/0.005	0.00080/0.00095	477.30 mins	(2.829 mins)	0.306	0.093	0.267
14.0/15	0.003/0.005	0.00081/0.00095	480.11 mins	(2.804 mins)	0.306	0.092	0.263
14.0/15	0.003/0.005	0.00082/0.00095	482.94 mins	(2.837 mins)	0.311	0.093	0.268
14.0/15	0.003/0.005	0.00083/0.00095	485.78 mins	(2.841 mins)	0.315	0.093	0.265
14.0/15	0.003/0.005	0.00084/0.00095	488.64 mins	(2.852 mins)	0.316	0.093	0.264
14.0/15	0.003/0.005	0.00085/0.00095	491.52 mins	(2.879 mins)	0.318	0.092	0.263

14.0/15	0.004/0.005	0.00075/0.00095	494.29 mins	(2.773 mins)	0.292	0.092	0.273
14.0/15	0.004/0.005	0.00076/0.00095	497.05 mins	(2.756 mins)	0.293	0.092	0.274
14.0/15	0.004/0.005	0.00077/0.00095	499.84 mins	(2.792 mins)	0.295	0.092	0.271
14.0/15	0.004/0.005	0.00078/0.00095	502.64 mins	(2.80 mins)	0.299	0.093	0.271
14.0/15	0.004/0.005	0.00079/0.00095	505.45 mins	(2.811 mins)	0.304	0.092	0.270
14.0/15	0.004/0.005	0.00080/0.00095	508.24 mins	(2.79 mins)	0.307	0.093	0.274
14.0/15	0.004/0.005	0.00081/0.00095	511.07 mins	(2.835 mins)	0.311	0.093	0.274
14.0/15	0.004/0.005	0.00082/0.00095	513.92 mins	(2.842 mins)	0.312	0.093	0.271
14.0/15	0.004/0.005	0.00083/0.00095	516.78 mins	(2.861 mins)	0.318	0.094	0.274
14.0/15	0.004/0.005	0.00084/0.00095	519.64 mins	(2.861 mins)	0.317	0.092	0.269
14.0/15	0.004/0.005	0.00085/0.00095	522.51 mins	(2.868 mins)	0.321	0.093	0.270

14.0/15	0.005/0.005	0.00075/0.00095	525.30 mins	(2.797 mins)	0.294	0.093	0.279
14.0/15	0.005/0.005	0.00076/0.00095	528.07 mins	(2.763 mins)	0.294	0.092	0.277
14.0/15	0.005/0.005	0.00077/0.00095	530.86 mins	(2.794 mins)	0.301	0.093	0.279
14.0/15	0.005/0.005	0.00078/0.00095	533.67 mins	(2.809 mins)	0.302	0.092	0.276
14.0/15	0.005/0.005	0.00079/0.00095	536.50 mins	(2.826 mins)	0.305	0.093	0.279
14.0/15	0.005/0.005	0.00080/0.00095	539.30 mins	(2.807 mins)	0.308	0.093	0.278
14.0/15	0.005/0.005	0.00081/0.00095	542.16 mins	(2.858 mins)	0.310	0.092	0.274
14.0/15	0.005/0.005	0.00082/0.00095	545.03 mins	(2.871 mins)	0.316	0.092	0.275
14.0/15	0.005/0.005	0.00083/0.00095	547.88 mins	(2.849 mins)	0.317	0.093	0.277
14.0/15	0.005/0.005	0.00084/0.00095	550.76 mins	(2.878 mins)	0.321	0.093	0.277
14.0/15	0.005/0.005	0.00085/0.00095	553.62 mins	(2.861 mins)	0.323	0.093	0.275



15.0/15	0.000/0.005	0.00075/0.00095	556.42 mins	(2.798 mins)	0.291	0.098	0.267
15.0/15	0.000/0.005	0.00076/0.00095	559.19 mins	(2.776 mins)	0.294	0.099	0.269
15.0/15	0.000/0.005	0.00077/0.00095	562.05 mins	(2.858 mins)	0.299	0.100	0.272
15.0/15	0.000/0.005	0.00078/0.00095	564.94 mins	(2.885 mins)	0.297	0.098	0.265
15.0/15	0.000/0.005	0.00079/0.00095	567.82 mins	(2.877 mins)	0.303	0.099	0.267
15.0/15	0.000/0.005	0.00080/0.00095	570.66 mins	(2.842 mins)	0.303	0.099	0.265
15.0/15	0.000/0.005	0.00081/0.00095	573.48 mins	(2.827 mins)	0.308	0.099	0.266
15.0/15	0.000/0.005	0.00082/0.00095	576.33 mins	(2.841 mins)	0.311	0.101	0.267
15.0/15	0.000/0.005	0.00083/0.00095	579.16 mins	(2.831 mins)	0.314	0.099	0.265
15.0/15	0.000/0.005	0.00084/0.00095	582.02 mins	(2.869 mins)	0.313	0.098	0.263
15.0/15	0.000/0.005	0.00085/0.00095	584.88 mins	(2.854 mins)	0.319	0.098	0.262

15.0/15	0.001/0.005	0.00075/0.00095	587.66 mins	(2.779 mins)	0.292	0.099	0.271
15.0/15	0.001/0.005	0.00076/0.00095	590.45 mins	(2.793 mins)	0.295	0.099	0.274
15.0/15	0.001/0.005	0.00077/0.00095	593.26 mins	(2.812 mins)	0.298	0.100	0.272
15.0/15	0.001/0.005	0.00078/0.00095	596.17 mins	(2.904 mins)	0.299	0.099	0.272
15.0/15	0.001/0.005	0.00079/0.00095	599.20 mins	(3.037 mins)	0.304	0.099	0.271
15.0/15	0.001/0.005	0.00080/0.00095	602.21 mins	(3.004 mins)	0.305	0.097	0.268
15.0/15	0.001/0.005	0.00081/0.00095	605.17 mins	(2.96 mins)	0.310	0.100	0.272
15.0/15	0.001/0.005	0.00082/0.00095	608.10 mins	(2.934 mins)	0.311	0.098	0.268
15.0/15	0.001/0.005	0.00083/0.00095	611.06 mins	(2.957 mins)	0.316	0.099	0.270
15.0/15	0.001/0.005	0.00084/0.00095	614.03 mins	(2.969 mins)	0.318	0.098	0.266
15.0/15	0.001/0.005	0.00085/0.00095	616.94 mins	(2.912 mins)	0.322	0.099	0.270

15.0/15	0.002/0.005	0.00075/0.00095	619.72 mins	(2.779 mins)	0.291	0.099	0.279
15.0/15	0.002/0.005	0.00076/0.00095	622.54 mins	(2.815 mins)	0.297	0.099	0.278
15.0/15	0.002/0.005	0.00077/0.00095	625.36 mins	(2.822 mins)	0.301	0.100	0.280
15.0/15	0.002/0.005	0.00078/0.00095	628.18 mins	(2.82 mins)	0.300	0.098	0.277
15.0/15	0.002/0.005	0.00079/0.00095	630.97 mins	(2.794 mins)	0.304	0.099	0.278
15.0/15	0.002/0.005	0.00080/0.00095	633.84 mins	(2.869 mins)	0.309	0.098	0.272
15.0/15	0.002/0.005	0.00081/0.00095	636.68 mins	(2.836 mins)	0.313	0.099	0.275
15.0/15	0.002/0.005	0.00082/0.00095	639.55 mins	(2.869 mins)	0.315	0.100	0.278
15.0/15	0.002/0.005	0.00083/0.00095	642.43 mins	(2.886 mins)	0.316	0.099	0.273
15.0/15	0.002/0.005	0.00084/0.00095	645.30 mins	(2.865 mins)	0.321	0.099	0.276
15.0/15	0.002/0.005	0.00085/0.00095	648.16 mins	(2.859 mins)	0.323	0.099	0.273

15.0/15	0.003/0.005	0.00075/0.00095	650.92 mins	(2.766 mins)	0.295	0.099	0.285
15.0/15	0.003/0.005	0.00076/0.00095	653.72 mins	(2.798 mins)	0.299	0.099	0.284
15.0/15	0.003/0.005	0.00077/0.00095	656.53 mins	(2.809 mins)	0.298	0.100	0.284
15.0/15	0.003/0.005	0.00078/0.00095	659.34 mins	(2.809 mins)	0.305	0.100	0.287
15.0/15	0.003/0.005	0.00079/0.00095	662.18 mins	(2.842 mins)	0.308	0.100	0.285
15.0/15	0.003/0.005	0.00080/0.00095	665.03 mins	(2.852 mins)	0.311	0.100	0.282
15.0/15	0.003/0.005	0.00081/0.00095	667.89 mins	(2.853 mins)	0.314	0.098	0.281
15.0/15	0.003/0.005	0.00082/0.00095	670.78 mins	(2.889 mins)	0.319	0.100	0.283
15.0/15	0.003/0.005	0.00083/0.00095	673.65 mins	(2.872 mins)	0.321	0.099	0.278
15.0/15	0.003/0.005	0.00084/0.00095	676.52 mins	(2.877 mins)	0.322	0.099	0.279
15.0/15	0.003/0.005	0.00085/0.00095	679.41 mins	(2.883 mins)	0.325	0.100	0.280

15.0/15	0.004/0.005	0.00075/0.00095	682.16 mins	(2.755 mins)	0.298	0.098	0.287
15.0/15	0.004/0.005	0.00076/0.00095	684.95 mins	(2.792 mins)	0.300	0.100	0.288
15.0/15	0.004/0.005	0.00077/0.00095	687.75 mins	(2.796 mins)	0.302	0.099	0.287
15.0/15	0.004/0.005	0.00078/0.00095	690.60 mins	(2.849 mins)	0.307	0.099	0.288
15.0/15	0.004/0.005	0.00079/0.00095	693.42 mins	(2.819 mins)	0.310	0.100	0.288
15.0/15	0.004/0.005	0.00080/0.00095	696.23 mins	(2.81 mins)	0.310	0.098	0.284
15.0/15	0.004/0.005	0.00081/0.00095	699.05 mins	(2.823 mins)	0.315	0.100	0.288
15.0/15	0.004/0.005	0.00082/0.00095	701.91 mins	(2.858 mins)	0.318	0.098	0.285
15.0/15	0.004/0.005	0.00083/0.00095	704.76 mins	(2.853 mins)	0.322	0.099	0.288
15.0/15	0.004/0.005	0.00084/0.00095	707.65 mins	(2.89 mins)	0.324	0.100	0.285
15.0/15	0.004/0.005	0.00085/0.00095	710.52 mins	(2.873 mins)	0.327	0.099	0.282

15.0/15	0.005/0.005	0.00075/0.00095	713.29 mins	(2.763 mins)	0.296	0.098	0.292
15.0/15	0.005/0.005	0.00076/0.00095	716.08 mins	(2.791 mins)	0.302	0.100	0.294
15.0/15	0.005/0.005	0.00077/0.00095	718.88 mins	(2.798 mins)	0.303	0.098	0.292
15.0/15	0.005/0.005	0.00078/0.00095	721.69 mins	(2.81 mins)	0.307	0.099	0.291
15.0/15	0.005/0.005	0.00079/0.00095	724.52 mins	(2.83 mins)	0.310	0.099	0.293
15.0/15	0.005/0.005	0.00080/0.00095	727.37 mins	(2.857 mins)	0.315	0.101	0.293
15.0/15	0.005/0.005	0.00081/0.00095	730.23 mins	(2.857 mins)	0.318	0.099	0.291
15.0/15	0.005/0.005	0.00082/0.00095	733.11 mins	(2.877 mins)	0.319	0.099	0.290
15.0/15	0.005/0.005	0.00083/0.00095	735.98 mins	(2.872 mins)	0.325	0.098	0.287
15.0/15	0.005/0.005	0.00084/0.00095	738.86 mins	(2.883 mins)	0.324	0.099	0.286
15.0/15	0.005/0.005	0.00085/0.00095	741.79 mins	(2.933 mins)	0.331	0.100	0.291



> 
> proc.time()
      user     system    elapsed 
1229888.09   20669.69   44542.71 
