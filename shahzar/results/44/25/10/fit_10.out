
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> rm(list = ls())
> gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 284765 15.3     664565 35.5   464468 24.9
Vcells 490458  3.8    8388608 64.0  1837328 14.1
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(readr)
> library(foreach)
> library(doParallel)
Loading required package: iterators
Loading required package: parallel
> 
> # Set up the number of cores used for parallelization.
> message(detectCores())
24
> num_cores <- detectCores()
> registerDoParallel(num_cores)
> 
> #########################
> #### SEIR Simulation ####
> #########################
> time <- 365 # Number of days.
> inf <- 7 # Average infectious period length.
> N <- 1000 # Population size.
> 
> create_hh <- function() {
+   # Randomly sample household sizes such that total population is 1000 
+   # individuals.
+   hh_size <- sample(x = c(3, 4, 5, 6), size = 340, replace = T)
+   
+   # Keep households such that total population is < 1000.
+   hh_size <- hh_size[which(cumsum(hh_size) < N)]
+   
+   leftover <- N - sum(hh_size)
+   if (leftover < 3) {
+     hh <- 1:length(hh_size)
+     sampled <- sample(hh[hh_size < 6], leftover)
+     hh_size[sampled] <- hh_size[sampled] + 1
+   } else {
+     hh_size <- c(hh_size, leftover)
+   }
+   return(hh_size)
+ }
> 
> SEIR <- function(params, inf = 7, verbose = F) {
+   hh_size <- create_hh()
+   
+   # Create frame for running the simulation.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # S: susceptibility status.
+   # E: exposed status.
+   # E_count: number of days since exposed.
+   # I: infectious status.
+   # I_count: number of days since infectious.
+   # R: recovered status.
+   # INC: incubation period.
+   # INF: infectious period.
+   data <- data.frame(ID = 1:N,
+                      SIZE = rep(hh_size, times = hh_size),
+                      HH = rep(1:length(hh_size), times = hh_size), 
+                      S = c(0, rep(1, N - 1)), 
+                      E = c(1, rep(0, N - 1)),
+                      E_count = c(1, rep(0, N - 1)), 
+                      I = 0,
+                      I_count = 0, 
+                      R = 0, 
+                      INC = c(rlnorm(1, meanlog = log(29.8), sdlog = 0.45), rep(0, N - 1)),
+                      INF = 0)
+   
+   # Create frame for storing results.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # TYPE: the kind of infection: household (H), community (C), or both (B).
+   # TIME: when the individual became infectious.
+   # S_NUM: number of susceptible people in individual's household when their 
+   #        infectious period begins.
+   # I_NUM: number of people in household that this individual infected over 
+   #        their infectious period.
+   results <- data[, 1:3] %>% mutate(TYPE = NA, TIME = NA, S_NUM = NA, I_NUM = 0)
+   results$TYPE[1] <- '0'
+   
+   for(t in 1:time) {
+     if (verbose) {
+       if (t %% 10 == 0) {
+         cat(paste0(t, ' '))
+       }
+     }
+     
+     # Anyone who has been infectious for as many days as their infectious period
+     # is now recovered.
+     recovered <- (data$INF > 0) & (data$I_count == data$INF)
+     if(sum(recovered, na.rm = T) > 0) {
+       data$R[recovered] <- 1
+       data$I[recovered] <- 0
+       data$I_count[recovered] <- 0 
+     }
+     
+     new_inf <- (data$INC > 0) & (data$E_count == data$INC)
+     num_new_inf <- sum(new_inf, na.rm = T)
+     if(num_new_inf > 0) {
+       # Change status to newly infectious and add infectious period.
+       data$I[new_inf] <- 1
+       random_inf <- rnorm(num_new_inf, mean = inf, sd = 1) %>% round()
+       data$INF[new_inf] <- random_inf
+       
+       # Remove exposure status and exposure count.
+       data$E[new_inf] <- 0
+       data$E_count[new_inf] <- 0 
+       
+       # Record time at which infectious period starts.
+       results$TIME[new_inf] <- t
+       
+       # Save the number of susceptible people in each infectious individual's 
+       # household.
+       S_data <- data %>% group_by(HH) %>% 
+         mutate(S_TOT = sum(S)) %>% 
+         select(HH, S_TOT)
+       results$S_NUM[new_inf == 1] <- S_data$S_TOT[new_inf == 1]
+     }
+     
+     # I_H is the number of infections inside each household.
+     # I_C is the number of infections outside each household.
+     I_data <- data %>% group_by(HH) %>% 
+       mutate(I_H = sum(I)) %>% 
+       ungroup() %>% 
+       mutate(I_C = sum(I) - I_H)
+     
+     beta_H <- params[1]
+     beta_C <- params[2]
+     beta_E <- params[3]
+     risk_H <- pmin(beta_H * data$S * I_data$I_H / N, 1)
+     risk_C <- pmin(beta_C * data$S * I_data$I_C / N, 1)
+     risk_E <- pmin(beta_E * data$S, 1)
+ 
+     new_inf_H <- rbinom(N, 1, risk_H)
+     new_inf_C <- rbinom(N, 1, risk_C)
+     new_inf_E <- rbinom(N, 1, risk_E)
+     new_exposed <- (new_inf_H == 1) | (new_inf_C == 1) | (new_inf_E == 1)
+     num_new_exposed <- sum(new_exposed, na.rm = T)
+     if (num_new_exposed > 0) {
+       # Change status to newly exposed and add incubation period.
+       data$E[new_exposed] <- 1
+       random_inc <- rlnorm(num_new_exposed, meanlog = log(29.8), sdlog = 0.45) %>% round()
+       data$INC[new_exposed] <- random_inc
+       
+       # Remove susceptible status.
+       data$S[new_exposed] <- 0
+       
+       # Get number of new infections in each household.
+       I_data <- I_data %>%
+         select(ID, HH, I, I_H) %>%
+         mutate(new_I_H = new_inf_H) %>%
+         group_by(HH) %>%
+         # Find households with at least 1 currently infectious individual. If 
+         # exactly 1 infectious individual in household, assign all new H 
+         # exposures to that individual. If there are multiple infectious 
+         # individuals, assign all infections to the infectious individual with 
+         # the first ID.
+         mutate(new_I_H = ifelse(I == 1 & ID == first(ID[I == 1]), 
+                                 sum(new_I_H), 0))
+       
+       results$I_NUM <- results$I_NUM + I_data$new_I_H
+       
+       # Label infections types.
+       results$TYPE[new_inf_H == 1] <- 'H'
+       results$TYPE[new_inf_C == 1] <- 'C'
+       results$TYPE[new_inf_E == 1] <- 'E'
+       results$TYPE[(new_inf_H == 1) & (new_inf_C == 1)] <- 'HC'
+       results$TYPE[(new_inf_H == 1) & (new_inf_E == 1)] <- 'HE'
+       results$TYPE[(new_inf_C == 1) & (new_inf_E == 1)] <- 'CE'
+       results$TYPE[(new_inf_H == 1) & (new_inf_C == 1) & (new_inf_E == 1)] <- 'HCE'
+     }
+     
+     # Increment exposure and infectious counters.
+     data$E_count[data$E == 1] <- data$E_count[data$E == 1] + 1
+     data$I_count[data$I == 1] <- data$I_count[data$I == 1] + 1
+   }
+   return(results)
+ }
> 
> metrics <- function(results) {
+   # Incidence is the proportion of the population that became infected.
+   idc <- mean(!is.na(results$TIME))
+   
+   # If incidence is 0, the SAR is undefined.
+   sar <- NA
+   prp <- NA
+   if (idc != 0) {
+     # The SAR is the average SAR for each individual that was infectious.
+     sar <- mean(results$I_NUM / results$S_NUM, na.rm = T)
+     cases <- results[!is.na(results$TIME), ]
+     prp <- mean((cases$TYPE == 'H') | (cases$TYPE == 'HC') | (cases$TYPE == 'HCE'))
+   }
+   return(c(idc, sar, prp))
+ }
> 
> ##############################
> #### Metropolis Algorithm ####
> ##############################
> score <- function(fit, tgt) {
+   # The score is the L² distance of the observed values from the target.
+   return(sum((fit - tgt)^2))
+ }
> 
> # The likelihood is calculated by first averaging the incidence and SAR over n
> # simulations with the state parameters. The likelihood is the negative log
> # score of the average incidence and SAR.
> likelihood <- function(state, tgt, n = 300) {
+   # If any parameter is negative, do not transition to that state.
+   if (any(state < 0)) {
+     return(-Inf)
+   }
+   # Otherwise, find the average incidence and SAR and compute likelihood.
+   vals <- foreach (i = 1:n, .combine = c) %dopar% {
+     results <- SEIR(state)
+     metrics(results)
+   }
+   vals <- matrix(vals, n, byrow = T)
+   fit <- colMeans(vals)
+   return(-log(score(fit, tgt)))
+ }
> 
> # Proposal function
> q <- function(state, sds = c(0.1, 0.001, 0.0001)) {
+   # Sample from a multivariate normal distributions centered at the current 
+   # state. The SDs roughly correspond to the step-size of the chain for each 
+   # parameter.
+   return(rnorm(n = 3, mean = state, sd = sds))
+ }
> 
> # MCMC
> metropolis <- function(start, tgt, num_sim, num_iter) {
+   path <- matrix(NA, num_iter + 1, 3)
+   liks <- rep(NA, num_iter + 1)
+   
+   # Initialize current state.
+   curr <- start
+   curr_lik <- likelihood(curr, tgt, num_sim)
+   
+   # Initialize best state.
+   best <- curr
+   best_lik <- curr_lik
+   for (i in 1:num_iter) {
+     # Save the current state and its likelihood.
+     path[i, ] <- curr
+     liks[i] <- curr_lik
+       
+     cat('[', 
+         format(round(curr[1], 3), nsmall = 3), '\t', 
+         format(round(curr[2], 5), nsmall = 5), '\t', 
+         format(round(curr[3], 6), nsmall = 6, scientific = F), ']\t',
+         format(round(curr_lik, 3), nsmall = 3), '\t', sep = '')
+     
+     # Get a proposed state and calculate its likelihood.
+     prop <- q(curr)
+     prop_lik <- likelihood(prop, tgt, num_sim)
+     
+     cat('[', 
+         format(round(prop[1], 3), nsmall = 3), '\t', 
+         format(round(prop[2], 5), nsmall = 5), '\t', 
+         format(round(prop[3], 6), nsmall = 6, scientific = F), ']\t',
+         format(round(prop_lik, 3), nsmall = 3), '\t', sep = '')
+       
+     # Compute the ratio of the scores of the two states and generate a uniform 
+     # bit.
+     r <- exp(prop_lik - curr_lik)
+     p <- runif(1)
+     
+     # Print the current progress.
+     cat(format(round(r, 3), nsmall = 3), '\t', format(round(p, 3), nsmall = 3), '\n', sep = '')
+     
+     # Transition if the proposed state is better or if the coin flip succeeds.
+     if (p < r) { 
+       curr <- prop
+       curr_lik <- prop_lik
+       
+       # If the new likelihood is better than the best we've seen so far, replace 
+       # the best.
+       if (curr_lik > best_lik) {
+         best <- curr
+         best_lik <- curr_lik
+       }
+     }
+     
+     # Save the path, best state, and likelihoods so far.
+     write.table(path, file = 'path.txt', row.names = F, col.names = F)
+     write.table(liks, file = 'liks.txt', row.names = F, col.names = F)
+     write.table(best, file = 'best.txt', row.names = F, col.names = F)
+   }
+   path[num_iter + 1, ] <- curr
+   liks[num_iter + 1] <- curr_lik
+   return(list(path, liks, best))
+ }
> 
> # Solve for optimal values via MCMC.
> tgt <- c(0.10, 0.18, 0.25)
> start <- c(12.7930428375597, 0.00482881594661931, 0.000226857723625881)
> results <- metropolis(start, tgt, num_sim = 300, num_iter = 1000)
[12.793	0.00483	0.000227]	4.687	[12.933	0.00419	0.000250]	4.705	1.018	0.944
[12.933	0.00419	0.000250]	4.705	[12.999	0.00392	0.000252]	4.705	1.001	0.612
[12.999	0.00392	0.000252]	4.705	[12.939	0.00377	0.000331]	4.560	0.865	0.277
[12.939	0.00377	0.000331]	4.560	[12.923	0.00457	0.000675]	3.336	0.294	0.145
[12.923	0.00457	0.000675]	3.336	[12.787	0.00443	0.000716]	3.209	0.881	0.118
[12.787	0.00443	0.000716]	3.209	[12.922	0.00415	0.000798]	3.024	0.831	0.793
[12.922	0.00415	0.000798]	3.024	[12.922	0.00598	0.000871]	2.809	0.807	0.294
[12.922	0.00598	0.000871]	2.809	[12.842	0.00695	0.001089]	2.405	0.668	0.236
[12.842	0.00695	0.001089]	2.405	[12.919	0.00833	0.001048]	2.448	1.043	0.365
[12.919	0.00833	0.001048]	2.448	[12.865	0.00820	0.000927]	2.674	1.253	0.874
[12.865	0.00820	0.000927]	2.674	[12.794	0.00960	0.000927]	2.653	0.979	0.758
[12.794	0.00960	0.000927]	2.653	[12.874	0.00925	0.001055]	2.421	0.793	0.250
[12.874	0.00925	0.001055]	2.421	[12.729	0.00816	0.001029]	2.472	1.053	0.075
[12.729	0.00816	0.001029]	2.472	[12.763	0.00704	0.000988]	2.555	1.086	0.537
[12.763	0.00704	0.000988]	2.555	[12.780	0.00711	0.001034]	2.489	0.936	0.813
[12.780	0.00711	0.001034]	2.489	[12.635	0.00638	0.000952]	2.646	1.171	0.202
[12.635	0.00638	0.000952]	2.646	[12.693	0.00596	0.000776]	3.024	1.459	0.658
[12.693	0.00596	0.000776]	3.024	[12.765	0.00671	0.000694]	3.233	1.232	0.276
[12.765	0.00671	0.000694]	3.233	[12.822	0.00510	0.000641]	3.442	1.232	0.137
[12.822	0.00510	0.000641]	3.442	[12.683	0.00387	0.000545]	3.772	1.392	0.314
[12.683	0.00387	0.000545]	3.772	[12.720	0.00389	0.000566]	3.699	0.929	0.422
[12.720	0.00389	0.000566]	3.699	[12.675	0.00431	0.000469]	4.012	1.367	0.808
[12.675	0.00431	0.000469]	4.012	[12.687	0.00084	0.000503]	3.967	0.957	0.973
[12.675	0.00431	0.000469]	4.012	[12.827	0.00485	0.000385]	4.350	1.402	0.745
[12.827	0.00485	0.000385]	4.350	[12.927	0.00502	0.000198]	4.708	1.432	0.364
[12.927	0.00502	0.000198]	4.708	[12.944	0.00597	0.000075]	4.324	0.681	0.678
[12.944	0.00597	0.000075]	4.324	[13.010	0.00480	-0.000190]	-Inf	0.000	0.230
[12.944	0.00597	0.000075]	4.324	[12.790	0.00543	0.000024]	3.983	0.711	0.955
[12.944	0.00597	0.000075]	4.324	[13.029	0.00693	0.000055]	4.188	0.873	0.880
[12.944	0.00597	0.000075]	4.324	[12.890	0.00496	0.000090]	4.396	1.075	0.138
[12.890	0.00496	0.000090]	4.396	[12.824	0.00624	0.000258]	4.674	1.320	0.529
[12.824	0.00624	0.000258]	4.674	[12.909	0.00705	0.000349]	4.460	0.807	0.168
[12.909	0.00705	0.000349]	4.460	[12.997	0.00690	0.000361]	4.432	0.972	0.583
[12.997	0.00690	0.000361]	4.432	[13.008	0.00819	0.000492]	3.895	0.584	0.114
[13.008	0.00819	0.000492]	3.895	[13.028	0.00836	0.000511]	3.817	0.925	0.574
[13.028	0.00836	0.000511]	3.817	[13.026	0.00881	0.000531]	3.746	0.931	0.516
[13.026	0.00881	0.000531]	3.746	[13.124	0.00657	0.000502]	3.890	1.155	0.199
[13.124	0.00657	0.000502]	3.890	[13.231	0.00483	0.000453]	4.106	1.241	0.670
[13.231	0.00483	0.000453]	4.106	[13.065	0.00456	0.000347]	4.517	1.509	0.083
[13.065	0.00456	0.000347]	4.517	[13.233	0.00501	0.000266]	4.698	1.199	0.430
[13.233	0.00501	0.000266]	4.698	[13.338	0.00385	0.000331]	4.573	0.882	0.181
[13.338	0.00385	0.000331]	4.573	[13.439	0.00217	0.000227]	4.775	1.225	0.190
[13.439	0.00217	0.000227]	4.775	[13.580	0.00190	0.000042]	4.142	0.531	0.176
[13.580	0.00190	0.000042]	4.142	[13.656	0.00239	0.000134]	4.570	1.534	0.608
[13.656	0.00239	0.000134]	4.570	[13.702	0.00206	0.000122]	4.565	0.995	0.021
[13.702	0.00206	0.000122]	4.565	[13.857	0.00184	0.000179]	4.751	1.204	0.016
[13.857	0.00184	0.000179]	4.751	[14.013	0.00032	0.000346]	4.589	0.851	0.346
[14.013	0.00032	0.000346]	4.589	[13.920	-0.00118	0.000350]	-Inf	0.000	0.505
[14.013	0.00032	0.000346]	4.589	[14.066	0.00044	0.000253]	4.815	1.253	0.841
[14.066	0.00044	0.000253]	4.815	[14.032	-0.00063	0.000356]	-Inf	0.000	0.010
[14.066	0.00044	0.000253]	4.815	[14.158	0.00011	0.000328]	4.656	0.853	0.994
[14.066	0.00044	0.000253]	4.815	[14.095	0.00068	0.000200]	4.774	0.960	0.036
[14.095	0.00068	0.000200]	4.774	[14.095	0.00105	0.000139]	4.609	0.847	0.562
[14.095	0.00105	0.000139]	4.609	[14.188	0.00171	0.000156]	4.706	1.102	0.146
[14.188	0.00171	0.000156]	4.706	[14.262	0.00224	0.000204]	4.808	1.107	0.145
[14.262	0.00224	0.000204]	4.808	[14.042	0.00107	0.000298]	4.716	0.913	0.231
[14.042	0.00107	0.000298]	4.716	[14.049	0.00145	0.000323]	4.668	0.953	0.385
[14.049	0.00145	0.000323]	4.668	[14.117	0.00057	0.000445]	4.214	0.635	0.890
[14.049	0.00145	0.000323]	4.668	[14.024	0.00128	0.000295]	4.727	1.061	0.317
[14.024	0.00128	0.000295]	4.727	[14.082	9e-05	0.000282]	4.765	1.039	0.175
[14.082	9e-05	0.000282]	4.765	[14.075	-0.00119	0.000390]	-Inf	0.000	0.918
[14.082	9e-05	0.000282]	4.765	[14.050	0.00033	0.000431]	4.270	0.609	0.536
[14.050	0.00033	0.000431]	4.270	[14.008	0.00043	0.000566]	3.762	0.602	0.909
[14.050	0.00033	0.000431]	4.270	[14.107	0.00000	0.000510]	3.969	0.741	0.503
[14.107	0.00000	0.000510]	3.969	[14.141	-0.00041	0.000390]	-Inf	0.000	0.732
[14.107	0.00000	0.000510]	3.969	[14.102	-0.00079	0.000436]	-Inf	0.000	0.361
[14.107	0.00000	0.000510]	3.969	[14.095	0.00128	0.000489]	4.032	1.065	0.053
[14.095	0.00128	0.000489]	4.032	[14.078	0.00045	0.000474]	4.120	1.092	0.316
[14.078	0.00045	0.000474]	4.120	[14.132	0.00034	0.000575]	3.727	0.675	0.953
[14.078	0.00045	0.000474]	4.120	[14.045	-0.00033	0.000507]	-Inf	0.000	0.768
[14.078	0.00045	0.000474]	4.120	[13.986	0.00221	0.000506]	3.951	0.845	0.713
[13.986	0.00221	0.000506]	3.951	[13.908	0.00248	0.000584]	3.654	0.743	0.257
[13.908	0.00248	0.000584]	3.654	[13.818	0.00320	0.000742]	3.159	0.610	0.969
[13.908	0.00248	0.000584]	3.654	[13.922	0.00287	0.000511]	3.923	1.308	0.805
[13.922	0.00287	0.000511]	3.923	[13.871	0.00299	0.000541]	3.800	0.885	0.395
[13.871	0.00299	0.000541]	3.800	[13.926	0.00530	0.000393]	4.378	1.781	0.281
[13.926	0.00530	0.000393]	4.378	[13.930	0.00373	0.000566]	3.710	0.513	0.095
[13.930	0.00373	0.000566]	3.710	[13.854	0.00464	0.000584]	3.628	0.921	0.782
[13.854	0.00464	0.000584]	3.628	[13.818	0.00590	0.000592]	3.588	0.961	0.978
[13.854	0.00464	0.000584]	3.628	[13.837	0.00530	0.000523]	3.839	1.235	0.266
[13.837	0.00530	0.000523]	3.839	[13.738	0.00658	0.000519]	3.828	0.989	0.468
[13.738	0.00658	0.000519]	3.828	[13.614	0.00574	0.000673]	3.329	0.607	0.446
[13.614	0.00574	0.000673]	3.329	[13.507	0.00746	0.000516]	3.819	1.633	0.224
[13.507	0.00746	0.000516]	3.819	[13.534	0.00685	0.000583]	3.603	0.805	0.790
[13.534	0.00685	0.000583]	3.603	[13.539	0.00720	0.000563]	3.659	1.057	0.815
[13.539	0.00720	0.000563]	3.659	[13.461	0.00648	0.000555]	3.701	1.043	0.938
[13.461	0.00648	0.000555]	3.701	[13.299	0.00662	0.000560]	3.671	0.971	0.110
[13.299	0.00662	0.000560]	3.671	[13.397	0.00580	0.000595]	3.560	0.895	0.766
[13.397	0.00580	0.000595]	3.560	[13.420	0.00625	0.000650]	3.388	0.842	0.628
[13.420	0.00625	0.000650]	3.388	[13.392	0.00737	0.000597]	3.540	1.165	0.653
[13.392	0.00737	0.000597]	3.540	[13.329	0.00615	0.000584]	3.606	1.068	0.664
[13.329	0.00615	0.000584]	3.606	[13.451	0.00615	0.000567]	3.653	1.048	0.162
[13.451	0.00615	0.000567]	3.653	[13.453	0.00575	0.000660]	3.354	0.742	0.423
[13.453	0.00575	0.000660]	3.354	[13.396	0.00545	0.000667]	3.355	1.000	0.213
[13.396	0.00545	0.000667]	3.355	[13.466	0.00478	0.000691]	3.271	0.920	0.986
[13.396	0.00545	0.000667]	3.355	[13.295	0.00552	0.000568]	3.665	1.363	0.372
[13.295	0.00552	0.000568]	3.665	[13.291	0.00471	0.000460]	4.080	1.515	0.368
[13.291	0.00471	0.000460]	4.080	[13.289	0.00479	0.000369]	4.456	1.456	0.898
[13.289	0.00479	0.000369]	4.456	[13.089	0.00431	0.000393]	4.336	0.887	0.103
[13.089	0.00431	0.000393]	4.336	[13.009	0.00493	0.000508]	3.882	0.636	0.246
[13.009	0.00493	0.000508]	3.882	[12.989	0.00472	0.000488]	3.947	1.067	0.386
[12.989	0.00472	0.000488]	3.947	[12.985	0.00355	0.000406]	4.280	1.395	0.083
[12.985	0.00355	0.000406]	4.280	[13.035	0.00554	0.000475]	3.989	0.748	0.518
[13.035	0.00554	0.000475]	3.989	[13.044	0.00595	0.000401]	4.291	1.353	0.417
[13.044	0.00595	0.000401]	4.291	[12.998	0.00460	0.000516]	3.856	0.647	0.199
[12.998	0.00460	0.000516]	3.856	[13.040	0.00539	0.000332]	4.549	1.998	0.411
[13.040	0.00539	0.000332]	4.549	[13.023	0.00578	0.000405]	4.279	0.764	0.122
[13.023	0.00578	0.000405]	4.279	[13.085	0.00671	0.000429]	4.168	0.894	0.338
[13.085	0.00671	0.000429]	4.168	[13.213	0.00796	0.000523]	3.790	0.685	0.472
[13.213	0.00796	0.000523]	3.790	[13.356	0.00995	0.000592]	3.525	0.768	0.284
[13.356	0.00995	0.000592]	3.525	[13.385	0.01031	0.000461]	4.018	1.636	0.067
[13.385	0.01031	0.000461]	4.018	[13.331	0.01073	0.000270]	4.690	1.959	0.574
[13.331	0.01073	0.000270]	4.690	[13.367	0.01114	0.000036]	4.132	0.572	0.822
[13.331	0.01073	0.000270]	4.690	[13.284	0.01129	0.000283]	4.678	0.988	0.866
[13.284	0.01129	0.000283]	4.678	[13.288	0.01216	0.000217]	4.751	1.077	0.133
[13.288	0.01216	0.000217]	4.751	[13.330	0.01292	0.000243]	4.734	0.983	0.796
[13.330	0.01292	0.000243]	4.734	[13.164	0.01379	0.000278]	4.646	0.916	0.540
[13.164	0.01379	0.000278]	4.646	[13.187	0.01328	0.000085]	4.417	0.795	0.524
[13.187	0.01328	0.000085]	4.417	[13.218	0.01251	0.000171]	4.668	1.285	0.212
[13.218	0.01251	0.000171]	4.668	[13.191	0.01279	0.000240]	4.746	1.081	0.982
[13.191	0.01279	0.000240]	4.746	[13.097	0.01413	0.000380]	4.275	0.624	0.216
[13.097	0.01413	0.000380]	4.275	[13.033	0.01352	0.000361]	4.365	1.095	0.964
[13.033	0.01352	0.000361]	4.365	[12.876	0.01420	0.000509]	3.736	0.533	0.417
[12.876	0.01420	0.000509]	3.736	[12.862	0.01400	0.000572]	3.527	0.811	0.545
[12.862	0.01400	0.000572]	3.527	[12.695	0.01369	0.000722]	3.069	0.633	0.356
[12.695	0.01369	0.000722]	3.069	[12.774	0.01488	0.000880]	2.686	0.681	0.199
[12.774	0.01488	0.000880]	2.686	[12.687	0.01492	0.000849]	2.737	1.053	0.979
[12.687	0.01492	0.000849]	2.737	[12.573	0.01461	0.000976]	2.487	0.779	0.425
[12.573	0.01461	0.000976]	2.487	[12.635	0.01318	0.001216]	2.133	0.701	0.004
[12.635	0.01318	0.001216]	2.133	[12.772	0.01146	0.001305]	2.029	0.902	0.873
[12.772	0.01146	0.001305]	2.029	[12.668	0.01162	0.001416]	1.902	0.880	0.056
[12.668	0.01162	0.001416]	1.902	[12.563	0.01271	0.001512]	1.784	0.889	0.036
[12.563	0.01271	0.001512]	1.784	[12.568	0.01199	0.001631]	1.680	0.901	0.456
[12.568	0.01199	0.001631]	1.680	[12.611	0.01089	0.001734]	1.597	0.920	0.386
[12.611	0.01089	0.001734]	1.597	[12.669	0.01189	0.001795]	1.544	0.949	0.959
[12.611	0.01089	0.001734]	1.597	[12.417	0.01026	0.001702]	1.635	1.039	0.499
[12.417	0.01026	0.001702]	1.635	[12.536	0.00965	0.001526]	1.808	1.189	0.587
[12.536	0.00965	0.001526]	1.808	[12.585	0.00752	0.001695]	1.663	0.865	0.987
[12.536	0.00965	0.001526]	1.808	[12.541	0.01075	0.001494]	1.821	1.013	0.697
[12.541	0.01075	0.001494]	1.821	[12.446	0.01159	0.001791]	1.551	0.764	0.397
[12.446	0.01159	0.001791]	1.551	[12.318	0.01047	0.001766]	1.587	1.036	0.419
[12.318	0.01047	0.001766]	1.587	[12.359	0.00922	0.001914]	1.479	0.898	0.203
[12.359	0.00922	0.001914]	1.479	[12.322	0.01054	0.001872]	1.502	1.023	0.597
[12.322	0.01054	0.001872]	1.502	[12.173	0.00998	0.001924]	1.465	0.964	0.070
[12.173	0.00998	0.001924]	1.465	[12.247	0.00961	0.001913]	1.474	1.009	0.629
[12.247	0.00961	0.001913]	1.474	[12.089	0.01182	0.001930]	1.455	0.980	0.959
[12.089	0.01182	0.001930]	1.455	[12.194	0.01238	0.001922]	1.454	1.000	0.005
[12.194	0.01238	0.001922]	1.454	[12.207	0.01018	0.002040]	1.380	0.929	0.500
[12.207	0.01018	0.002040]	1.380	[12.172	0.00936	0.001919]	1.470	1.094	0.895
[12.172	0.00936	0.001919]	1.470	[12.151	0.01002	0.001763]	1.586	1.124	0.513
[12.151	0.01002	0.001763]	1.586	[11.937	0.01247	0.001781]	1.557	0.971	0.774
[11.937	0.01247	0.001781]	1.557	[11.900	0.01373	0.001692]	1.620	1.065	0.915
[11.900	0.01373	0.001692]	1.620	[12.015	0.01385	0.001774]	1.558	0.939	0.438
[12.015	0.01385	0.001774]	1.558	[11.994	0.01312	0.001955]	1.417	0.869	0.458
[11.994	0.01312	0.001955]	1.417	[11.878	0.01443	0.002012]	1.375	0.959	0.469
[11.878	0.01443	0.002012]	1.375	[11.853	0.01282	0.002016]	1.386	1.011	0.297
[11.853	0.01282	0.002016]	1.386	[11.941	0.01230	0.001925]	1.458	1.074	0.443
[11.941	0.01230	0.001925]	1.458	[12.039	0.01026	0.001967]	1.442	0.985	0.935
[12.039	0.01026	0.001967]	1.442	[12.094	0.00912	0.001726]	1.628	1.204	0.477
[12.094	0.00912	0.001726]	1.628	[12.150	0.00927	0.001707]	1.646	1.018	0.368
[12.150	0.00927	0.001707]	1.646	[12.104	0.01069	0.001768]	1.584	0.940	0.486
[12.104	0.01069	0.001768]	1.584	[12.062	0.01127	0.001638]	1.688	1.109	0.174
[12.062	0.01127	0.001638]	1.688	[11.975	0.00981	0.001630]	1.714	1.027	0.808
[11.975	0.00981	0.001630]	1.714	[12.142	0.01045	0.001699]	1.644	0.932	0.337
[12.142	0.01045	0.001699]	1.644	[12.081	0.00991	0.001819]	1.548	0.909	0.564
[12.081	0.00991	0.001819]	1.548	[12.023	0.01002	0.001800]	1.565	1.017	0.655
[12.023	0.01002	0.001800]	1.565	[12.069	0.00982	0.001887]	1.495	0.932	0.494
[12.069	0.00982	0.001887]	1.495	[12.061	0.00914	0.002052]	1.395	0.905	0.831
[12.061	0.00914	0.002052]	1.395	[12.075	0.00777	0.001918]	1.492	1.102	0.238
[12.075	0.00777	0.001918]	1.492	[12.078	0.00623	0.001848]	1.552	1.062	0.007
[12.078	0.00623	0.001848]	1.552	[12.122	0.00536	0.001712]	1.677	1.133	0.916
[12.122	0.00536	0.001712]	1.677	[12.150	0.00401	0.001886]	1.541	0.873	0.131
[12.150	0.00401	0.001886]	1.541	[12.045	0.00477	0.001956]	1.483	0.944	0.695
[12.045	0.00477	0.001956]	1.483	[11.857	0.00429	0.001928]	1.515	1.032	0.496
[11.857	0.00429	0.001928]	1.515	[11.824	0.00391	0.001697]	1.705	1.209	0.999
[11.824	0.00391	0.001697]	1.705	[11.802	0.00207	0.001878]	1.578	0.881	0.784
[11.802	0.00207	0.001878]	1.578	[11.951	0.00055	0.001871]	1.586	1.009	0.540
[11.951	0.00055	0.001871]	1.586	[11.988	0.00124	0.001851]	1.587	1.000	0.122
[11.988	0.00124	0.001851]	1.587	[11.960	0.00308	0.001866]	1.569	0.983	0.487
[11.960	0.00308	0.001866]	1.569	[11.709	0.00225	0.001907]	1.545	0.976	0.068
[11.709	0.00225	0.001907]	1.545	[11.632	0.00430	0.001771]	1.641	1.101	0.475
[11.632	0.00430	0.001771]	1.641	[11.839	0.00476	0.001765]	1.635	0.994	0.336
[11.839	0.00476	0.001765]	1.635	[11.768	0.00406	0.001762]	1.647	1.012	0.933
[11.768	0.00406	0.001762]	1.647	[11.642	0.00299	0.001690]	1.715	1.071	0.070
[11.642	0.00299	0.001690]	1.715	[11.693	0.00289	0.001741]	1.674	0.960	0.089
[11.693	0.00289	0.001741]	1.674	[11.759	0.00235	0.001754]	1.670	0.996	0.765
[11.759	0.00235	0.001754]	1.670	[11.848	0.00318	0.001785]	1.639	0.969	0.749
[11.848	0.00318	0.001785]	1.639	[11.859	0.00387	0.001739]	1.662	1.024	0.116
[11.859	0.00387	0.001739]	1.662	[11.800	0.00501	0.001822]	1.587	0.927	0.283
[11.800	0.00501	0.001822]	1.587	[12.077	0.00438	0.001922]	1.515	0.930	0.919
[12.077	0.00438	0.001922]	1.515	[12.140	0.00397	0.002038]	1.434	0.922	0.781
[12.140	0.00397	0.002038]	1.434	[12.190	0.00325	0.001998]	1.463	1.029	0.732
[12.190	0.00325	0.001998]	1.463	[12.101	0.00466	0.002023]	1.441	0.978	0.407
[12.101	0.00466	0.002023]	1.441	[12.124	0.00452	0.001941]	1.495	1.056	0.912
[12.124	0.00452	0.001941]	1.495	[12.089	0.00321	0.001812]	1.599	1.109	0.788
[12.089	0.00321	0.001812]	1.599	[12.125	0.00444	0.001777]	1.625	1.027	0.686
[12.125	0.00444	0.001777]	1.625	[12.150	0.00412	0.001638]	1.750	1.133	0.169
[12.150	0.00412	0.001638]	1.750	[12.128	0.00296	0.001648]	1.749	0.999	0.646
[12.128	0.00296	0.001648]	1.749	[12.153	0.00280	0.001693]	1.710	0.962	0.238
[12.153	0.00280	0.001693]	1.710	[12.159	0.00401	0.001703]	1.694	0.983	0.654
[12.159	0.00401	0.001703]	1.694	[12.223	0.00352	0.001644]	1.748	1.056	0.916
[12.223	0.00352	0.001644]	1.748	[12.125	0.00250	0.001615]	1.784	1.036	0.123
[12.125	0.00250	0.001615]	1.784	[12.108	0.00385	0.001659]	1.728	0.946	0.375
[12.108	0.00385	0.001659]	1.728	[12.002	0.00308	0.001682]	1.725	0.997	0.557
[12.002	0.00308	0.001682]	1.725	[12.014	0.00380	0.001668]	1.727	1.002	0.314
[12.014	0.00380	0.001668]	1.727	[11.978	0.00555	0.001684]	1.709	0.982	0.312
[11.978	0.00555	0.001684]	1.709	[12.026	0.00749	0.001557]	1.797	1.091	0.038
[12.026	0.00749	0.001557]	1.797	[12.028	0.00565	0.001498]	1.873	1.079	0.864
[12.028	0.00565	0.001498]	1.873	[12.173	0.00543	0.001535]	1.838	0.966	0.884
[12.173	0.00543	0.001535]	1.838	[12.051	0.00466	0.001638]	1.748	0.914	0.725
[12.051	0.00466	0.001638]	1.748	[12.085	0.00359	0.001691]	1.703	0.956	0.087
[12.085	0.00359	0.001691]	1.703	[11.962	0.00332	0.001627]	1.774	1.073	0.633
[11.962	0.00332	0.001627]	1.774	[12.015	0.00480	0.001671]	1.713	0.941	0.189
[12.015	0.00480	0.001671]	1.713	[12.113	0.00483	0.001688]	1.693	0.980	0.344
[12.113	0.00483	0.001688]	1.693	[11.997	0.00435	0.001704]	1.690	0.997	0.313
[11.997	0.00435	0.001704]	1.690	[12.035	0.00410	0.001655]	1.733	1.043	0.827
[12.035	0.00410	0.001655]	1.733	[12.254	0.00253	0.001489]	1.912	1.196	0.672
[12.254	0.00253	0.001489]	1.912	[12.228	0.00260	0.001418]	1.990	1.081	0.617
[12.228	0.00260	0.001418]	1.990	[12.083	0.00211	0.001743]	1.678	0.732	0.484
[12.083	0.00211	0.001743]	1.678	[12.121	0.00180	0.001752]	1.666	0.988	0.134
[12.121	0.00180	0.001752]	1.666	[12.152	0.00142	0.001690]	1.726	1.062	0.237
[12.152	0.00142	0.001690]	1.726	[12.034	0.00123	0.001878]	1.571	0.856	0.943
[12.152	0.00142	0.001690]	1.726	[12.187	0.00106	0.001728]	1.685	0.960	0.304
[12.187	0.00106	0.001728]	1.685	[12.130	0.00116	0.001833]	1.608	0.926	0.466
[12.130	0.00116	0.001833]	1.608	[12.085	0.00215	0.001740]	1.680	1.075	0.819
[12.085	0.00215	0.001740]	1.680	[12.042	0.00270	0.001822]	1.606	0.928	0.747
[12.042	0.00270	0.001822]	1.606	[12.027	0.00145	0.001888]	1.552	0.947	0.457
[12.027	0.00145	0.001888]	1.552	[12.043	0.00239	0.001748]	1.663	1.118	0.528
[12.043	0.00239	0.001748]	1.663	[12.006	0.00190	0.001620]	1.781	1.125	0.523
[12.006	0.00190	0.001620]	1.781	[12.101	0.00293	0.001720]	1.684	0.908	0.008
[12.101	0.00293	0.001720]	1.684	[12.206	0.00304	0.001786]	1.632	0.949	0.246
[12.206	0.00304	0.001786]	1.632	[12.251	0.00270	0.001753]	1.657	1.026	0.156
[12.251	0.00270	0.001753]	1.657	[12.310	0.00326	0.001850]	1.581	0.926	0.242
[12.310	0.00326	0.001850]	1.581	[12.183	0.00253	0.001713]	1.697	1.123	0.071
[12.183	0.00253	0.001713]	1.697	[12.347	0.00139	0.001791]	1.638	0.943	0.212
[12.347	0.00139	0.001791]	1.638	[12.520	0.00163	0.001800]	1.623	0.985	0.250
[12.520	0.00163	0.001800]	1.623	[12.477	0.00232	0.001748]	1.664	1.041	0.817
[12.477	0.00232	0.001748]	1.664	[12.433	0.00299	0.001411]	1.998	1.397	0.234
[12.433	0.00299	0.001411]	1.998	[12.346	0.00339	0.001464]	1.936	0.940	0.046
[12.346	0.00339	0.001464]	1.936	[12.292	0.00297	0.001363]	2.041	1.110	0.245
[12.292	0.00297	0.001363]	2.041	[12.273	0.00361	0.001502]	1.891	0.860	0.881
[12.292	0.00297	0.001363]	2.041	[12.230	0.00154	0.001571]	1.840	0.818	0.726
[12.230	0.00154	0.001571]	1.840	[12.192	0.00110	0.001705]	1.716	0.883	0.814
[12.192	0.00110	0.001705]	1.716	[12.039	0.00063	0.001757]	1.685	0.970	0.523
[12.039	0.00063	0.001757]	1.685	[12.085	0.00056	0.001924]	1.540	0.865	0.034
[12.085	0.00056	0.001924]	1.540	[11.994	-0.00092	0.001827]	-Inf	0.000	0.242
[12.085	0.00056	0.001924]	1.540	[12.076	0.00164	0.001941]	1.519	0.979	0.987
[12.085	0.00056	0.001924]	1.540	[12.265	4e-05	0.001901]	1.562	1.022	0.965
[12.265	4e-05	0.001901]	1.562	[12.295	0.00196	0.001789]	1.634	1.076	0.414
[12.295	0.00196	0.001789]	1.634	[12.366	0.00137	0.001840]	1.595	0.962	0.277
[12.366	0.00137	0.001840]	1.595	[12.207	0.00098	0.001762]	1.662	1.069	0.422
[12.207	0.00098	0.001762]	1.662	[12.434	0.00097	0.001748]	1.674	1.012	0.319
[12.434	0.00097	0.001748]	1.674	[12.482	0.00127	0.001710]	1.712	1.039	0.101
[12.482	0.00127	0.001710]	1.712	[12.397	0.00290	0.001657]	1.738	1.026	0.304
[12.397	0.00290	0.001657]	1.738	[12.404	0.00315	0.001587]	1.811	1.076	0.433
[12.404	0.00315	0.001587]	1.811	[12.389	0.00189	0.001639]	1.760	0.951	0.185
[12.389	0.00189	0.001639]	1.760	[12.381	0.00169	0.001643]	1.766	1.005	0.333
[12.381	0.00169	0.001643]	1.766	[12.305	0.00187	0.001588]	1.816	1.051	0.753
[12.305	0.00187	0.001588]	1.816	[12.293	0.00268	0.001691]	1.716	0.905	0.018
[12.293	0.00268	0.001691]	1.716	[12.266	0.00182	0.001598]	1.810	1.099	0.290
[12.266	0.00182	0.001598]	1.810	[12.242	0.00016	0.001645]	1.777	0.968	0.011
[12.242	0.00016	0.001645]	1.777	[12.117	-0.00136	0.001745]	-Inf	0.000	0.524
[12.242	0.00016	0.001645]	1.777	[12.103	-0.00184	0.001616]	-Inf	0.000	0.095
[12.242	0.00016	0.001645]	1.777	[12.283	0.00225	0.001548]	1.857	1.083	0.223
[12.283	0.00225	0.001548]	1.857	[12.278	0.00248	0.001579]	1.821	0.965	0.802
[12.278	0.00248	0.001579]	1.821	[12.277	0.00421	0.001462]	1.941	1.127	0.177
[12.277	0.00421	0.001462]	1.941	[12.225	0.00697	0.001313]	2.075	1.143	0.080
[12.225	0.00697	0.001313]	2.075	[12.406	0.00715	0.001224]	2.178	1.108	0.482
[12.406	0.00715	0.001224]	2.178	[12.423	0.00860	0.001213]	2.183	1.005	0.094
[12.423	0.00860	0.001213]	2.183	[12.362	0.00827	0.001092]	2.381	1.218	0.796
[12.362	0.00827	0.001092]	2.381	[12.206	0.00790	0.001050]	2.442	1.064	0.617
[12.206	0.00790	0.001050]	2.442	[12.371	0.00855	0.000914]	2.695	1.288	0.439
[12.371	0.00855	0.000914]	2.695	[12.456	0.00716	0.000963]	2.615	0.923	0.046
[12.456	0.00716	0.000963]	2.615	[12.388	0.00854	0.001100]	2.354	0.770	0.213
[12.388	0.00854	0.001100]	2.354	[12.425	0.00718	0.001182]	2.246	0.898	0.539
[12.425	0.00718	0.001182]	2.246	[12.327	0.00656	0.001087]	2.400	1.166	0.110
[12.327	0.00656	0.001087]	2.400	[12.418	0.00721	0.001029]	2.496	1.101	0.757
[12.418	0.00721	0.001029]	2.496	[12.451	0.00793	0.001078]	2.404	0.912	0.826
[12.451	0.00793	0.001078]	2.404	[12.268	0.00924	0.001059]	2.408	1.004	0.683
[12.268	0.00924	0.001059]	2.408	[12.232	0.01030	0.001028]	2.444	1.037	0.912
[12.232	0.01030	0.001028]	2.444	[12.357	0.01000	0.000877]	2.745	1.351	0.422
[12.357	0.01000	0.000877]	2.745	[12.271	0.01254	0.001000]	2.501	0.783	0.632
[12.271	0.01254	0.001000]	2.501	[12.201	0.01211	0.001026]	2.438	0.939	0.175
[12.201	0.01211	0.001026]	2.438	[12.077	0.01266	0.000902]	2.670	1.261	0.890
[12.077	0.01266	0.000902]	2.670	[12.140	0.01081	0.001075]	2.374	0.744	0.796
[12.077	0.01266	0.000902]	2.670	[12.243	0.01392	0.000950]	2.557	0.894	0.847
[12.243	0.01392	0.000950]	2.557	[12.233	0.01385	0.001044]	2.390	0.846	0.645
[12.233	0.01385	0.001044]	2.390	[12.200	0.01217	0.000859]	2.766	1.457	0.739
[12.200	0.01217	0.000859]	2.766	[12.272	0.01238	0.000788]	2.924	1.170	0.390
[12.272	0.01238	0.000788]	2.924	[12.269	0.01198	0.000771]	2.975	1.052	0.786
[12.269	0.01198	0.000771]	2.975	[12.272	0.01262	0.000769]	2.956	0.981	0.953
[12.272	0.01262	0.000769]	2.956	[12.235	0.01278	0.000589]	3.484	1.696	0.302
[12.235	0.01278	0.000589]	3.484	[12.259	0.01323	0.000758]	2.980	0.604	0.559
[12.259	0.01323	0.000758]	2.980	[12.261	0.01341	0.000751]	2.983	1.003	0.898
[12.261	0.01341	0.000751]	2.983	[12.191	0.01393	0.000791]	2.876	0.898	0.054
[12.191	0.01393	0.000791]	2.876	[12.245	0.01397	0.000703]	3.145	1.310	0.802
[12.245	0.01397	0.000703]	3.145	[12.341	0.01469	0.000684]	3.172	1.026	0.209
[12.341	0.01469	0.000684]	3.172	[12.334	0.01541	0.000751]	2.962	0.811	0.246
[12.334	0.01541	0.000751]	2.962	[12.228	0.01509	0.000795]	2.864	0.907	0.601
[12.228	0.01509	0.000795]	2.864	[12.093	0.01517	0.000970]	2.502	0.696	0.492
[12.093	0.01517	0.000970]	2.502	[11.923	0.01710	0.001111]	2.241	0.771	0.432
[11.923	0.01710	0.001111]	2.241	[11.980	0.01636	0.001059]	2.341	1.105	0.305
[11.980	0.01636	0.001059]	2.341	[11.837	0.01580	0.001137]	2.222	0.888	0.836
[11.837	0.01580	0.001137]	2.222	[11.986	0.01585	0.001237]	2.077	0.864	0.701
[11.986	0.01585	0.001237]	2.077	[12.014	0.01590	0.001407]	1.874	0.816	0.548
[12.014	0.01590	0.001407]	1.874	[12.042	0.01777	0.001460]	1.809	0.937	0.811
[12.042	0.01777	0.001460]	1.809	[12.253	0.01723	0.001402]	1.865	1.058	0.975
[12.253	0.01723	0.001402]	1.865	[12.288	0.01685	0.001272]	2.015	1.161	0.191
[12.288	0.01685	0.001272]	2.015	[12.223	0.01682	0.001130]	2.203	1.208	0.336
[12.223	0.01682	0.001130]	2.203	[12.317	0.01820	0.001140]	2.178	0.975	0.797
[12.317	0.01820	0.001140]	2.178	[12.286	0.01828	0.001088]	2.257	1.083	0.305
[12.286	0.01828	0.001088]	2.257	[12.137	0.01700	0.000982]	2.457	1.221	0.824
[12.137	0.01700	0.000982]	2.457	[12.117	0.01545	0.000945]	2.542	1.089	0.683
[12.117	0.01545	0.000945]	2.542	[12.181	0.01651	0.001026]	2.379	0.849	0.034
[12.181	0.01651	0.001026]	2.379	[11.973	0.01642	0.000879]	2.656	1.319	0.127
[11.973	0.01642	0.000879]	2.656	[11.989	0.01680	0.000752]	2.953	1.346	0.459
[11.989	0.01680	0.000752]	2.953	[11.956	0.01750	0.000815]	2.783	0.844	0.357
[11.956	0.01750	0.000815]	2.783	[11.942	0.01916	0.000620]	3.261	1.614	0.210
[11.942	0.01916	0.000620]	3.261	[11.875	0.02024	0.000679]	3.084	0.838	0.095
[11.875	0.02024	0.000679]	3.084	[11.860	0.02019	0.000664]	3.136	1.053	0.611
[11.860	0.02019	0.000664]	3.136	[11.819	0.01983	0.000729]	2.946	0.827	0.882
[11.860	0.02019	0.000664]	3.136	[11.913	0.01859	0.000596]	3.365	1.257	0.799
[11.913	0.01859	0.000596]	3.365	[11.934	0.01647	0.000657]	3.197	0.845	0.858
[11.913	0.01859	0.000596]	3.365	[11.941	0.01756	0.000801]	2.814	0.576	0.893
[11.913	0.01859	0.000596]	3.365	[11.950	0.01861	0.000748]	2.936	0.651	0.346
[11.950	0.01861	0.000748]	2.936	[11.852	0.01994	0.000708]	3.025	1.093	0.079
[11.852	0.01994	0.000708]	3.025	[11.879	0.02255	0.000832]	2.685	0.712	0.926
[11.852	0.01994	0.000708]	3.025	[11.804	0.02152	0.000830]	2.707	0.728	0.448
[11.804	0.02152	0.000830]	2.707	[11.683	0.02201	0.000722]	2.938	1.260	0.131
[11.683	0.02201	0.000722]	2.938	[11.735	0.02317	0.000803]	2.744	0.824	0.969
[11.683	0.02201	0.000722]	2.938	[11.556	0.02330	0.000816]	2.704	0.791	0.318
[11.556	0.02330	0.000816]	2.704	[11.569	0.02428	0.000993]	2.344	0.698	0.079
[11.569	0.02428	0.000993]	2.344	[11.596	0.02340	0.001109]	2.175	0.844	0.614
[11.596	0.02340	0.001109]	2.175	[11.570	0.02241	0.001058]	2.265	1.094	0.371
[11.570	0.02241	0.001058]	2.265	[11.418	0.02226	0.000871]	2.598	1.395	0.326
[11.418	0.02226	0.000871]	2.598	[11.311	0.02155	0.000768]	2.826	1.256	0.268
[11.311	0.02155	0.000768]	2.826	[11.304	0.02334	0.000949]	2.444	0.683	0.772
[11.311	0.02155	0.000768]	2.826	[11.158	0.02228	0.000830]	2.699	0.882	0.188
[11.158	0.02228	0.000830]	2.699	[11.034	0.02263	0.000805]	2.732	1.033	0.869
[11.034	0.02263	0.000805]	2.732	[10.909	0.02430	0.000765]	2.810	1.081	0.805
[10.909	0.02430	0.000765]	2.810	[11.082	0.02460	0.000652]	3.097	1.332	0.539
[11.082	0.02460	0.000652]	3.097	[10.907	0.02579	0.000582]	3.261	1.178	0.919
[10.907	0.02579	0.000582]	3.261	[10.787	0.02592	0.000437]	3.731	1.600	0.038
[10.787	0.02592	0.000437]	3.731	[10.686	0.02675	0.000357]	3.963	1.262	0.786
[10.686	0.02675	0.000357]	3.963	[10.592	0.02652	0.000243]	4.264	1.352	0.609
[10.592	0.02652	0.000243]	4.264	[10.568	0.02638	0.000225]	4.322	1.060	0.099
[10.568	0.02638	0.000225]	4.322	[10.464	0.02498	0.000252]	4.258	0.938	0.905
[10.464	0.02498	0.000252]	4.258	[10.188	0.02493	0.000279]	4.156	0.903	0.873
[10.188	0.02493	0.000279]	4.156	[10.008	0.02606	0.000337]	3.977	0.836	0.852
[10.188	0.02493	0.000279]	4.156	[10.144	0.02659	0.000280]	4.150	0.994	0.736
[10.144	0.02659	0.000280]	4.150	[10.266	0.02884	0.000406]	3.762	0.679	0.333
[10.266	0.02884	0.000406]	3.762	[10.324	0.02895	0.000364]	3.913	1.162	0.661
[10.324	0.02895	0.000364]	3.913	[10.454	0.03005	0.000328]	4.034	1.128	0.053
[10.454	0.03005	0.000328]	4.034	[10.352	0.02807	0.000391]	3.826	0.813	0.754
[10.352	0.02807	0.000391]	3.826	[10.323	0.02968	0.000465]	3.540	0.751	0.632
[10.323	0.02968	0.000465]	3.540	[10.306	0.03038	0.000475]	3.502	0.963	0.679
[10.306	0.03038	0.000475]	3.502	[10.191	0.02958	0.000489]	3.457	0.956	0.114
[10.191	0.02958	0.000489]	3.457	[10.252	0.02966	0.000398]	3.774	1.373	0.269
[10.252	0.02966	0.000398]	3.774	[10.440	0.03223	0.000382]	3.813	1.040	0.500
[10.440	0.03223	0.000382]	3.813	[10.495	0.03121	0.000375]	3.858	1.046	0.930
[10.495	0.03121	0.000375]	3.858	[10.397	0.02955	0.000411]	3.733	0.882	0.715
[10.397	0.02955	0.000411]	3.733	[10.425	0.02893	0.000363]	3.917	1.203	0.300
[10.425	0.02893	0.000363]	3.917	[10.426	0.02825	0.000384]	3.863	0.947	0.319
[10.426	0.02825	0.000384]	3.863	[10.208	0.02704	0.000364]	3.901	1.039	0.520
[10.208	0.02704	0.000364]	3.901	[10.178	0.02743	0.000380]	3.829	0.931	0.709
[10.178	0.02743	0.000380]	3.829	[10.153	0.02943	0.000348]	3.900	1.073	0.346
[10.153	0.02943	0.000348]	3.900	[10.117	0.02920	0.000487]	3.477	0.655	0.039
[10.117	0.02920	0.000487]	3.477	[9.993	0.02919	0.000587]	3.181	0.744	0.259
[9.993	0.02919	0.000587]	3.181	[10.017	0.02941	0.000628]	3.064	0.890	0.188
[10.017	0.02941	0.000628]	3.064	[9.912	0.03063	0.000559]	3.228	1.177	0.578
[9.912	0.03063	0.000559]	3.228	[9.976	0.02948	0.000623]	3.055	0.841	0.143
[9.976	0.02948	0.000623]	3.055	[10.045	0.02896	0.000551]	3.279	1.252	0.944
[10.045	0.02896	0.000551]	3.279	[10.094	0.02760	0.000604]	3.158	0.886	0.795
[10.094	0.02760	0.000604]	3.158	[10.107	0.02798	0.000776]	2.716	0.643	0.717
[10.094	0.02760	0.000604]	3.158	[10.151	0.02932	0.000465]	3.558	1.492	0.420
[10.151	0.02932	0.000465]	3.558	[10.085	0.02869	0.000440]	3.633	1.078	0.577
[10.085	0.02869	0.000440]	3.633	[10.099	0.02926	0.000383]	3.803	1.186	0.547
[10.099	0.02926	0.000383]	3.803	[9.954	0.02819	0.000438]	3.625	0.836	0.195
[9.954	0.02819	0.000438]	3.625	[9.959	0.02958	0.000349]	3.881	1.292	0.785
[9.959	0.02958	0.000349]	3.881	[9.829	0.02925	0.000137]	4.077	1.217	0.610
[9.829	0.02925	0.000137]	4.077	[10.006	0.02970	0.000105]	4.100	1.023	0.365
[10.006	0.02970	0.000105]	4.100	[10.026	0.02810	-0.000011]	-Inf	0.000	0.662
[10.006	0.02970	0.000105]	4.100	[9.918	0.03199	0.000177]	4.180	1.084	0.821
[9.918	0.03199	0.000177]	4.180	[9.883	0.03164	0.000125]	4.053	0.881	0.309
[9.883	0.03164	0.000125]	4.053	[9.890	0.02970	-0.000043]	-Inf	0.000	0.828
[9.883	0.03164	0.000125]	4.053	[9.934	0.03190	0.000244]	4.130	1.080	0.318
[9.934	0.03190	0.000244]	4.130	[9.896	0.03115	0.000301]	3.990	0.869	0.740
[9.896	0.03115	0.000301]	3.990	[9.883	0.03020	0.000416]	3.685	0.737	0.339
[9.883	0.03020	0.000416]	3.685	[9.856	0.02956	0.000322]	3.942	1.294	0.433
[9.856	0.02956	0.000322]	3.942	[9.813	0.03042	0.000376]	3.768	0.840	0.078
[9.813	0.03042	0.000376]	3.768	[9.950	0.03047	0.000315]	3.990	1.247	0.293
[9.950	0.03047	0.000315]	3.990	[9.729	0.03201	0.000240]	4.132	1.153	0.414
[9.729	0.03201	0.000240]	4.132	[9.759	0.03067	0.000177]	4.169	1.037	0.235
[9.759	0.03067	0.000177]	4.169	[9.918	0.02977	0.000106]	4.110	0.943	0.181
[9.918	0.02977	0.000106]	4.110	[9.948	0.02965	0.000194]	4.212	1.107	0.112
[9.948	0.02965	0.000194]	4.212	[9.998	0.03066	0.000307]	4.022	0.828	0.673
[9.998	0.03066	0.000307]	4.022	[9.886	0.02860	0.000417]	3.667	0.701	0.809
[9.998	0.03066	0.000307]	4.022	[9.948	0.03008	0.000247]	4.138	1.122	0.339
[9.948	0.03008	0.000247]	4.138	[10.170	0.02811	0.000097]	4.040	0.907	0.150
[10.170	0.02811	0.000097]	4.040	[10.227	0.02972	0.000040]	3.827	0.808	0.079
[10.227	0.02972	0.000040]	3.827	[10.149	0.02793	-0.000075]	-Inf	0.000	0.443
[10.227	0.02972	0.000040]	3.827	[10.258	0.02954	0.000251]	4.211	1.468	0.954
[10.258	0.02954	0.000251]	4.211	[10.418	0.03087	0.000522]	3.363	0.428	0.768
[10.258	0.02954	0.000251]	4.211	[10.239	0.03002	0.000251]	4.180	0.970	0.620
[10.239	0.03002	0.000251]	4.180	[10.139	0.02819	0.000342]	3.962	0.804	0.054
[10.139	0.02819	0.000342]	3.962	[10.180	0.02891	0.000401]	3.751	0.809	0.962
[10.139	0.02819	0.000342]	3.962	[10.046	0.02824	0.000300]	4.049	1.091	0.316
[10.046	0.02824	0.000300]	4.049	[9.853	0.02954	0.000145]	4.132	1.086	0.814
[9.853	0.02954	0.000145]	4.132	[9.783	0.03068	0.000147]	4.106	0.975	0.027
[9.783	0.03068	0.000147]	4.106	[9.900	0.03189	0.000043]	3.781	0.722	0.622
[9.900	0.03189	0.000043]	3.781	[10.022	0.03215	0.000162]	4.234	1.573	0.712
[10.022	0.03215	0.000162]	4.234	[10.003	0.03278	0.000331]	3.907	0.721	0.790
[10.022	0.03215	0.000162]	4.234	[9.983	0.03279	0.000301]	4.017	0.805	0.456
[9.983	0.03279	0.000301]	4.017	[9.890	0.03386	0.000232]	4.159	1.153	0.946
[9.890	0.03386	0.000232]	4.159	[9.985	0.03269	0.000311]	3.993	0.847	0.625
[9.985	0.03269	0.000311]	3.993	[10.090	0.03454	0.000240]	4.174	1.199	0.273
[10.090	0.03454	0.000240]	4.174	[10.058	0.03608	0.000041]	3.804	0.690	0.640
[10.058	0.03608	0.000041]	3.804	[10.041	0.03629	-0.000056]	-Inf	0.000	0.104
[10.058	0.03608	0.000041]	3.804	[10.089	0.03626	0.000163]	4.153	1.419	0.223
[10.089	0.03626	0.000163]	4.153	[10.005	0.03838	0.000259]	4.124	0.971	0.126
[10.005	0.03838	0.000259]	4.124	[9.932	0.03823	0.000172]	4.151	1.028	0.183
[9.932	0.03823	0.000172]	4.151	[9.951	0.03755	0.000412]	3.617	0.586	0.335
[9.951	0.03755	0.000412]	3.617	[9.965	0.03746	0.000585]	3.055	0.570	0.451
[9.965	0.03746	0.000585]	3.055	[9.934	0.03772	0.000595]	3.030	0.975	0.911
[9.934	0.03772	0.000595]	3.030	[10.006	0.03955	0.000724]	2.679	0.704	0.351
[10.006	0.03955	0.000724]	2.679	[9.957	0.03960	0.000828]	2.465	0.807	0.292
[9.957	0.03960	0.000828]	2.465	[10.028	0.03896	0.000781]	2.557	1.096	0.213
[10.028	0.03896	0.000781]	2.557	[10.074	0.03960	0.000765]	2.583	1.027	0.073
[10.074	0.03960	0.000765]	2.583	[10.123	0.03730	0.000601]	3.014	1.539	0.463
[10.123	0.03730	0.000601]	3.014	[9.997	0.03816	0.000537]	3.210	1.217	0.996
[9.997	0.03816	0.000537]	3.210	[10.060	0.03787	0.000558]	3.119	0.913	0.358
[10.060	0.03787	0.000558]	3.119	[9.886	0.03637	0.000619]	2.978	0.868	0.050
[9.886	0.03637	0.000619]	2.978	[9.738	0.03542	0.000600]	3.056	1.082	0.679
[9.738	0.03542	0.000600]	3.056	[9.902	0.03445	0.000656]	2.918	0.871	0.092
[9.902	0.03445	0.000656]	2.918	[9.828	0.03486	0.000657]	2.894	0.976	0.709
[9.828	0.03486	0.000657]	2.894	[9.989	0.03696	0.000582]	3.088	1.215	0.697
[9.989	0.03696	0.000582]	3.088	[9.978	0.03548	0.000617]	3.012	0.927	0.929
[9.989	0.03696	0.000582]	3.088	[10.038	0.03856	0.000513]	3.259	1.187	0.710
[10.038	0.03856	0.000513]	3.259	[10.031	0.03725	0.000489]	3.357	1.103	0.439
[10.031	0.03725	0.000489]	3.357	[9.974	0.03819	0.000503]	3.290	0.935	0.557
[9.974	0.03819	0.000503]	3.290	[9.967	0.03799	0.000473]	3.410	1.129	0.863
[9.967	0.03799	0.000473]	3.410	[9.862	0.03981	0.000609]	2.967	0.642	0.423
[9.862	0.03981	0.000609]	2.967	[9.764	0.03860	0.000598]	3.013	1.047	0.242
[9.764	0.03860	0.000598]	3.013	[9.712	0.03783	0.000647]	2.889	0.883	0.957
[9.764	0.03860	0.000598]	3.013	[9.727	0.03778	0.000681]	2.804	0.811	0.092
[9.727	0.03778	0.000681]	2.804	[9.658	0.03954	0.000623]	2.915	1.118	0.252
[9.658	0.03954	0.000623]	2.915	[9.532	0.03983	0.000713]	2.702	0.808	0.131
[9.532	0.03983	0.000713]	2.702	[9.504	0.04029	0.000759]	2.599	0.902	0.444
[9.504	0.04029	0.000759]	2.599	[9.573	0.04212	0.000852]	2.386	0.808	0.609
[9.573	0.04212	0.000852]	2.386	[9.590	0.04243	0.000858]	2.355	0.970	0.237
[9.590	0.04243	0.000858]	2.355	[9.467	0.04060	0.000836]	2.419	1.066	0.020
[9.467	0.04060	0.000836]	2.419	[9.395	0.04141	0.000741]	2.609	1.209	0.555
[9.395	0.04141	0.000741]	2.609	[9.458	0.04300	0.000588]	2.968	1.433	0.243
[9.458	0.04300	0.000588]	2.968	[9.580	0.04302	0.000676]	2.745	0.800	0.464
[9.580	0.04302	0.000676]	2.745	[9.554	0.04279	0.000554]	3.054	1.362	0.063
[9.554	0.04279	0.000554]	3.054	[9.559	0.04308	0.000688]	2.712	0.711	0.369
[9.559	0.04308	0.000688]	2.712	[9.624	0.04208	0.000852]	2.385	0.721	0.863
[9.559	0.04308	0.000688]	2.712	[9.318	0.04301	0.000683]	2.722	1.010	0.671
[9.318	0.04301	0.000683]	2.722	[9.238	0.04193	0.000628]	2.868	1.157	0.036
[9.238	0.04193	0.000628]	2.868	[9.232	0.04180	0.000629]	2.854	0.986	0.723
[9.232	0.04180	0.000629]	2.854	[9.132	0.04350	0.000615]	2.880	1.027	0.796
[9.132	0.04350	0.000615]	2.880	[8.994	0.04395	0.000526]	3.103	1.249	0.315
[8.994	0.04395	0.000526]	3.103	[8.842	0.04356	0.000616]	2.854	0.779	0.260
[8.842	0.04356	0.000616]	2.854	[8.941	0.04492	0.000838]	2.377	0.621	0.055
[8.941	0.04492	0.000838]	2.377	[9.099	0.04309	0.000743]	2.581	1.226	0.289
[9.099	0.04309	0.000743]	2.581	[9.082	0.04173	0.000755]	2.568	0.987	0.682
[9.082	0.04173	0.000755]	2.568	[8.975	0.04242	0.000748]	2.574	1.005	0.549
[8.975	0.04242	0.000748]	2.574	[8.915	0.04006	0.000720]	2.673	1.104	0.590
[8.915	0.04006	0.000720]	2.673	[8.974	0.03989	0.000719]	2.678	1.005	0.559
[8.974	0.03989	0.000719]	2.678	[8.933	0.03931	0.000578]	3.026	1.417	0.785
[8.933	0.03931	0.000578]	3.026	[9.105	0.04053	0.000355]	3.673	1.910	0.269
[9.105	0.04053	0.000355]	3.673	[9.180	0.04108	0.000398]	3.508	0.847	0.787
[9.180	0.04108	0.000398]	3.508	[9.186	0.04195	0.000472]	3.295	0.808	0.290
[9.186	0.04195	0.000472]	3.295	[9.111	0.04359	0.000427]	3.402	1.113	0.051
[9.111	0.04359	0.000427]	3.402	[9.135	0.04391	0.000250]	3.927	1.690	0.764
[9.135	0.04391	0.000250]	3.927	