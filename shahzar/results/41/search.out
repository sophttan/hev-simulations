
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> rm(list = ls())
> gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 284765 15.3     664565 35.5   464468 24.9
Vcells 490458  3.8    8388608 64.0  1837328 14.1
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(foreach)
> library(doParallel)
Loading required package: iterators
Loading required package: parallel
> 
> # Set up the number of cores used for parallelization.
> message(detectCores())
24
> num_cores <- 24
> registerDoParallel(num_cores)
> 
> #########################
> #### SEIR Simulation ####
> #########################
> time <- 365 # Number of days.
> inf <- 7 # Average infectious period length.
> N <- 1000 # Population size.
> 
> create_hh <- function() {
+   # Randomly sample household sizes such that total population is 1000 
+   # individuals.
+   hh_size <- sample(x = c(3, 4, 5, 6), size = 340, replace = T)
+   
+   # Keep households such that total population is < 1000.
+   hh_size <- hh_size[which(cumsum(hh_size) < N)]
+   
+   leftover <- N - sum(hh_size)
+   if (leftover < 3) {
+     hh <- 1:length(hh_size)
+     sampled <- sample(hh[hh_size < 6], leftover)
+     hh_size[sampled] <- hh_size[sampled] + 1
+   } else {
+     hh_size <- c(hh_size, leftover)
+   }
+   return(hh_size)
+ }
> 
> SEIR <- function(params, inf, verbose = F) {
+   hh_size <- create_hh()
+   
+   # Create frame for running the simulation.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # S: susceptibility status.
+   # E: exposed status.
+   # E_count: number of days since exposed.
+   # I: infectious status.
+   # I_count: number of days since infectious.
+   # R: recovered status.
+   # INC: incubation period.
+   # INF: infectious period.
+   data <- data.frame(ID = 1:N,
+                      SIZE = rep(hh_size, times = hh_size),
+                      HH = rep(1:length(hh_size), times = hh_size), 
+                      S = c(0, rep(1, N - 1)), 
+                      E = c(1, rep(0, N - 1)),
+                      E_count = c(1, rep(0, N - 1)), 
+                      I = 0,
+                      I_count = 0, 
+                      R = 0, 
+                      INC = c(round(rlnorm(1, meanlog = log(29.8), sdlog = 0.45)), rep(0, N - 1)),
+                      INF = 0)
+   
+   # Create frame for storing results.
+   # ID: ID of individual.
+   # SIZE: size of individual's household.
+   # HH: ID of individual's household.
+   # TYPE: the kind of infection: household (H), community (C), or both (B).
+   # TIME: when the individual became infectious.
+   # S_num: number of susceptible people in individual's household when their 
+   #        infectious period begins.
+   # I_num: number of people in household that this individual infected over 
+   #        their infectious period.
+   results <- data[, 1:3] %>% mutate(TYPE = NA, TIME = NA, S_num = NA, I_num = 0)
+   results$TYPE[1] <- '0'
+   
+   for(t in 1:time) {
+     if (verbose) {
+       if (t %% 10 == 0) {
+         cat(paste0(t, ' '))
+       }
+     }
+     
+     # Anyone who has been infectious for as many days as their infectious period
+     # is now recovered.
+     recovered <- (data$INF > 0) & (data$I_count == data$INF)
+     if(sum(recovered, na.rm = T) > 0) {
+       data$R[recovered] <- 1
+       data$I[recovered] <- 0
+       data$I_count[recovered] <- 0 
+     }
+     
+     # Anyone who has been incubating for as many days as their incubation period
+     # is now infectious.
+     new_inf <- (data$INC > 0) & (data$E_count == data$INC)
+     num_new_inf <- sum(new_inf, na.rm = T)
+     if(num_new_inf > 0) {
+       # Change status to newly infectious and add infectious period.
+       data$I[new_inf] <- 1
+       random_inf <- rnorm(num_new_inf, mean = inf, sd = 1) %>% round()
+       data$INF[new_inf] <- random_inf
+       
+       # Remove exposure status and exposure count.
+       data$E[new_inf] <- 0
+       data$E_count[new_inf] <- 0 
+       
+       # Record time at which infectious period starts.
+       results$TIME[new_inf] <- t
+       
+       # Save the number of susceptible people in each infectious individual's 
+       # household.
+       S_data <- data %>% group_by(HH) %>% 
+         mutate(S_tot = sum(S)) %>% 
+         select(HH, S_tot)
+       results$S_num[new_inf == 1] <- S_data$S_tot[new_inf == 1]
+     }
+     
+     # I_H is the number of infections inside each household.
+     # I_C is the number of infections outside each household.
+     I_data <- data %>% group_by(HH) %>% 
+       mutate(I_H = sum(I)) %>% 
+       ungroup() %>% 
+       mutate(I_C = sum(I) - I_H)
+     
+     # Calculate household risk and community risk.
+     beta_H <- params[1]
+     beta_C <- params[2]
+     risk_H <- pmin(beta_H * data$S * I_data$I_H / N, 1)
+     risk_C <- pmin(beta_C * data$S * I_data$I_C / N, 1)
+     
+     # Each individual is infected from their household or community 
+     # independently with probabilities risk_H and risk_C.
+     new_inf_H <- rbinom(N, 1, risk_H)
+     new_inf_C <- rbinom(N, 1, risk_C)
+     
+     new_exposed <- (new_inf_H == 1) | (new_inf_C == 1)
+     num_new_exposed <- sum(new_exposed, na.rm = T)
+     if (num_new_exposed > 0) {
+       # Change status to newly exposed and add incubation period.
+       data$E[new_exposed] <- 1
+       random_inc <- rlnorm(num_new_exposed, meanlog = log(29.8), sdlog = 0.45) %>% round()
+       data$INC[new_exposed] <- random_inc
+       
+       # Remove susceptible status.
+       data$S[new_exposed] <- 0
+       
+       # Get number of new infections in each household.
+       I_data <- I_data %>%
+         select(ID, HH, I, I_H) %>%
+         mutate(new_I_H = new_inf_H) %>%
+         group_by(HH) %>%
+         # Find households with at least 1 currently infectious individual. If 
+         # exactly 1 infectious individual in household, assign all new H 
+         # exposures to that individual. If there are multiple infectious 
+         # individuals, assign all infections to the infectious individual with 
+         # the first ID.
+         mutate(new_I_H = ifelse(I == 1 & ID == first(ID[I == 1]), 
+                                 sum(new_I_H), 0))
+       
+       results$I_num <- results$I_num + I_data$new_I_H
+       
+       # Label infection types.
+       results$TYPE[new_inf_C == 1] <- 'C'
+       results$TYPE[new_inf_H == 1] <- 'H'
+       results$TYPE[(new_inf_H == 1) & (new_inf_C == 1)] <- 'B'
+     }
+     
+     # Increment exposure and infectious counters.
+     data$E_count[data$E == 1] <- data$E_count[data$E == 1] + 1
+     data$I_count[data$I == 1] <- data$I_count[data$I == 1] + 1
+   }
+   return(results)
+ }
> 
> metrics <- function(results) {
+   # Incidence is the proportion of the population that became infected.
+   idc <- mean(!is.na(results$TIME))
+   
+   # If incidence is 0, the SAR is undefined.
+   sar <- NA
+   if (idc != 0) {
+     # The SAR is the average SAR for each individual that was infectious.
+     sar <- mean(results$I_num / results$S_num, na.rm = T)
+   }
+   return(c(idc, sar))
+ }
> 
> beta_Hs <- seq(50.0, 56.0, 0.2) #31
> beta_Cs <- seq(0.00, 0.20, 0.01) #21
> 
> d_H <- length(beta_Hs)
> d_C <- length(beta_Cs)
> 
> reps <- 150
> idcs <- array(rep(NA, d_H * d_C * reps), dim = c(d_H, d_C, reps))
> sars <- array(rep(NA, d_H * d_C * reps), dim = c(d_H, d_C, reps))
> t_tot <- 0
> for (i in 1:d_H) {
+     for (j in 1:d_C) {
+       beta_H <- beta_Hs[i]
+       beta_C <- beta_Cs[j]
+       params <- c(beta_H, beta_C)
+       
+       cat(paste0(format(beta_H, nsmall = 1, digits = 3), '/56.0\t', 
+                  format(beta_C, nsmall = 3, digits = 3), '/0.500\t'))
+ 
+       t_0 <- Sys.time()
+       vals <- foreach (l = 1:reps, .combine = 'c') %dopar% {
+         results <- SEIR(params, inf) 
+         metrics(results)
+       }
+       t_1 <- Sys.time()
+       t_tot <- t_tot + (t_1 - t_0)
+ 
+       cat(paste0(format(t_tot, nsmall = 2, digits = 4), '\t(', 
+                  format(t_1 - t_0, nsmall = 2, digits = 4), ')\t'))
+ 
+       vals <- matrix(vals, reps, byrow = T)
+       idcs[i, j, ] <- vals[, 1]
+       sars[i, j, ] <- vals[, 2]
+ 
+       cat(paste0(format(round(mean(vals[, 1]), 3), nsmall = 3), '\t',
+                  format(round(mean(vals[, 2]), 3), nsmall = 3), '\n'))
+       
+       saveRDS(idcs, file = 'idcs.rds')
+       saveRDS(sars, file = 'sars.rds')
+       write.table(idcs, file = 'idcs.txt', row.names = F, col.names = F)
+       write.table(sars, file = 'sars.txt', row.names = F, col.names = F)
+     }
+   message('\n')
+ }
50.0/56.0	0.000/0.500	31.64 secs	(31.64 secs)	0.003	0.234
50.0/56.0	0.010/0.500	62.93 secs	(31.29 secs)	0.003	0.278
50.0/56.0	0.020/0.500	94.95 secs	(32.02 secs)	0.004	0.229
50.0/56.0	0.030/0.500	128.48 secs	(33.53 secs)	0.006	0.200
50.0/56.0	0.040/0.500	163.00 secs	(34.52 secs)	0.010	0.286
50.0/56.0	0.050/0.500	198.69 secs	(35.69 secs)	0.013	0.235
50.0/56.0	0.060/0.500	238.30 secs	(39.61 secs)	0.022	0.241
50.0/56.0	0.070/0.500	282.02 secs	(43.72 secs)	0.037	0.225
50.0/56.0	0.080/0.500	330.51 secs	(48.49 secs)	0.049	0.229
50.0/56.0	0.090/0.500	383.39 secs	(52.88 secs)	0.077	0.222
50.0/56.0	0.100/0.500	441.79 secs	(58.40 secs)	0.101	0.235
50.0/56.0	0.110/0.500	511.32 secs	(1.159 mins)	0.166	0.244
50.0/56.0	0.120/0.500	582.02 secs	(1.178 mins)	0.182	0.227
50.0/56.0	0.130/0.500	659.99 secs	(1.30 mins)	0.246	0.248
50.0/56.0	0.140/0.500	738.61 secs	(1.31 mins)	0.297	0.229
50.0/56.0	0.150/0.500	823.47 secs	(1.414 mins)	0.335	0.253
50.0/56.0	0.160/0.500	913.25 secs	(1.496 mins)	0.436	0.253
50.0/56.0	0.170/0.500	1001.00 secs	(1.463 mins)	0.455	0.252
50.0/56.0	0.180/0.500	1093.84 secs	(1.547 mins)	0.582	0.266
50.0/56.0	0.190/0.500	1190.75 secs	(1.615 mins)	0.603	0.266
50.0/56.0	0.200/0.500	1289.08 secs	(1.639 mins)	0.664	0.266


50.2/56.0	0.000/0.500	1320.19 secs	(31.11 secs)	0.003	0.261
50.2/56.0	0.010/0.500	1351.82 secs	(31.63 secs)	0.004	0.253
50.2/56.0	0.020/0.500	1384.07 secs	(32.25 secs)	0.005	0.260
50.2/56.0	0.030/0.500	1417.07 secs	(33.00 secs)	0.006	0.219
50.2/56.0	0.040/0.500	1451.86 secs	(34.79 secs)	0.008	0.217
50.2/56.0	0.050/0.500	1486.76 secs	(34.90 secs)	0.012	0.225
50.2/56.0	0.060/0.500	1527.90 secs	(41.14 secs)	0.024	0.211
50.2/56.0	0.070/0.500	1571.83 secs	(43.93 secs)	0.036	0.225
50.2/56.0	0.080/0.500	1619.99 secs	(48.17 secs)	0.043	0.230
50.2/56.0	0.090/0.500	1679.24 secs	(59.25 secs)	0.081	0.224
50.2/56.0	0.100/0.500	1737.59 secs	(58.35 secs)	0.090	0.224
50.2/56.0	0.110/0.500	1801.05 secs	(1.058 mins)	0.145	0.229
50.2/56.0	0.120/0.500	1871.91 secs	(1.181 mins)	0.190	0.222
50.2/56.0	0.130/0.500	1950.99 secs	(1.318 mins)	0.246	0.234
50.2/56.0	0.140/0.500	2028.40 secs	(1.29 mins)	0.273	0.230
50.2/56.0	0.150/0.500	2115.07 secs	(1.444 mins)	0.362	0.239
50.2/56.0	0.160/0.500	2203.67 secs	(1.477 mins)	0.418	0.245
50.2/56.0	0.170/0.500	2294.41 secs	(1.512 mins)	0.482	0.262
50.2/56.0	0.180/0.500	2389.53 secs	(1.585 mins)	0.569	0.276
50.2/56.0	0.190/0.500	2487.32 secs	(1.63 mins)	0.632	0.266
50.2/56.0	0.200/0.500	2587.30 secs	(1.666 mins)	0.666	0.264


50.4/56.0	0.000/0.500	2618.34 secs	(31.05 secs)	0.003	0.255
50.4/56.0	0.010/0.500	2650.33 secs	(31.98 secs)	0.004	0.280
50.4/56.0	0.020/0.500	2682.08 secs	(31.76 secs)	0.005	0.205
50.4/56.0	0.030/0.500	2715.46 secs	(33.38 secs)	0.007	0.250
50.4/56.0	0.040/0.500	2750.61 secs	(35.15 secs)	0.011	0.260
50.4/56.0	0.050/0.500	2788.73 secs	(38.11 secs)	0.015	0.271
50.4/56.0	0.060/0.500	2827.82 secs	(39.09 secs)	0.020	0.227
50.4/56.0	0.070/0.500	2870.90 secs	(43.08 secs)	0.035	0.232
50.4/56.0	0.080/0.500	2919.10 secs	(48.21 secs)	0.054	0.250
50.4/56.0	0.090/0.500	2975.01 secs	(55.91 secs)	0.087	0.235
50.4/56.0	0.100/0.500	3030.73 secs	(55.72 secs)	0.097	0.235
50.4/56.0	0.110/0.500	3097.28 secs	(1.109 mins)	0.128	0.219
50.4/56.0	0.120/0.500	3171.95 secs	(1.245 mins)	0.221	0.260
50.4/56.0	0.130/0.500	3249.99 secs	(1.301 mins)	0.255	0.242
50.4/56.0	0.140/0.500	3337.11 secs	(1.452 mins)	0.310	0.256
50.4/56.0	0.150/0.500	3419.97 secs	(1.381 mins)	0.352	0.237
50.4/56.0	0.160/0.500	3507.47 secs	(1.458 mins)	0.410	0.242
50.4/56.0	0.170/0.500	3600.15 secs	(1.545 mins)	0.468	0.248
50.4/56.0	0.180/0.500	3693.67 secs	(1.559 mins)	0.583	0.278
50.4/56.0	0.190/0.500	3792.41 secs	(1.646 mins)	0.608	0.252
50.4/56.0	0.200/0.500	3891.93 secs	(1.659 mins)	0.645	0.253


50.6/56.0	0.000/0.500	3922.77 secs	(30.84 secs)	0.003	0.220
50.6/56.0	0.010/0.500	3955.56 secs	(32.79 secs)	0.003	0.213
50.6/56.0	0.020/0.500	3988.60 secs	(33.04 secs)	0.005	0.223
50.6/56.0	0.030/0.500	4022.27 secs	(33.67 secs)	0.006	0.247
50.6/56.0	0.040/0.500	4056.53 secs	(34.26 secs)	0.009	0.216
50.6/56.0	0.050/0.500	4092.40 secs	(35.87 secs)	0.018	0.231
50.6/56.0	0.060/0.500	4132.25 secs	(39.85 secs)	0.023	0.244
50.6/56.0	0.070/0.500	4177.30 secs	(45.05 secs)	0.031	0.222
50.6/56.0	0.080/0.500	4223.11 secs	(45.81 secs)	0.048	0.205
50.6/56.0	0.090/0.500	4281.60 secs	(58.49 secs)	0.086	0.254
50.6/56.0	0.100/0.500	4342.18 secs	(1.01 mins)	0.104	0.221
50.6/56.0	0.110/0.500	4407.36 secs	(1.086 mins)	0.145	0.225
50.6/56.0	0.120/0.500	4472.41 secs	(1.084 mins)	0.162	0.233
50.6/56.0	0.130/0.500	4543.00 secs	(1.177 mins)	0.219	0.245
50.6/56.0	0.140/0.500	4624.94 secs	(1.366 mins)	0.316	0.251
50.6/56.0	0.150/0.500	4712.68 secs	(1.462 mins)	0.372	0.259
50.6/56.0	0.160/0.500	4803.93 secs	(1.521 mins)	0.459	0.264
50.6/56.0	0.170/0.500	4896.35 secs	(1.54 mins)	0.517	0.261
50.6/56.0	0.180/0.500	4990.29 secs	(1.566 mins)	0.556	0.260
50.6/56.0	0.190/0.500	5085.62 secs	(1.589 mins)	0.583	0.259
50.6/56.0	0.200/0.500	5184.85 secs	(1.654 mins)	0.665	0.270


50.8/56.0	0.000/0.500	5216.37 secs	(31.53 secs)	0.003	0.257
50.8/56.0	0.010/0.500	5248.16 secs	(31.79 secs)	0.004	0.243
50.8/56.0	0.020/0.500	5280.20 secs	(32.04 secs)	0.005	0.306
50.8/56.0	0.030/0.500	5313.54 secs	(33.34 secs)	0.006	0.236
50.8/56.0	0.040/0.500	5347.31 secs	(33.77 secs)	0.010	0.244
50.8/56.0	0.050/0.500	5382.94 secs	(35.62 secs)	0.013	0.235
50.8/56.0	0.060/0.500	5423.41 secs	(40.47 secs)	0.024	0.232
50.8/56.0	0.070/0.500	5468.91 secs	(45.50 secs)	0.031	0.250
50.8/56.0	0.080/0.500	5517.21 secs	(48.30 secs)	0.050	0.245
50.8/56.0	0.090/0.500	5570.93 secs	(53.73 secs)	0.070	0.226
50.8/56.0	0.100/0.500	5628.52 secs	(57.59 secs)	0.093	0.239
50.8/56.0	0.110/0.500	5689.76 secs	(1.021 mins)	0.134	0.251
50.8/56.0	0.120/0.500	5757.60 secs	(1.131 mins)	0.182	0.234
50.8/56.0	0.130/0.500	5839.21 secs	(1.36 mins)	0.281	0.251
50.8/56.0	0.140/0.500	5915.72 secs	(1.275 mins)	0.303	0.259
50.8/56.0	0.150/0.500	6002.11 secs	(1.44 mins)	0.325	0.241
50.8/56.0	0.160/0.500	6092.51 secs	(1.507 mins)	0.450	0.262
50.8/56.0	0.170/0.500	6179.06 secs	(1.442 mins)	0.485	0.244
50.8/56.0	0.180/0.500	6276.52 secs	(1.624 mins)	0.583	0.269
50.8/56.0	0.190/0.500	6375.36 secs	(1.647 mins)	0.611	0.256
50.8/56.0	0.200/0.500	6474.25 secs	(1.648 mins)	0.682	0.266


51.0/56.0	0.000/0.500	6505.21 secs	(30.96 secs)	0.003	0.231
51.0/56.0	0.010/0.500	6536.76 secs	(31.56 secs)	0.003	0.247
51.0/56.0	0.020/0.500	6569.25 secs	(32.48 secs)	0.005	0.266
51.0/56.0	0.030/0.500	6601.69 secs	(32.45 secs)	0.006	0.224
51.0/56.0	0.040/0.500	6634.86 secs	(33.17 secs)	0.009	0.230
51.0/56.0	0.050/0.500	6671.67 secs	(36.80 secs)	0.015	0.229
51.0/56.0	0.060/0.500	6710.69 secs	(39.02 secs)	0.023	0.253
51.0/56.0	0.070/0.500	6753.26 secs	(42.57 secs)	0.029	0.231
51.0/56.0	0.080/0.500	6798.82 secs	(45.57 secs)	0.041	0.207
51.0/56.0	0.090/0.500	6847.02 secs	(48.19 secs)	0.059	0.230
51.0/56.0	0.100/0.500	6901.51 secs	(54.49 secs)	0.094	0.236
51.0/56.0	0.110/0.500	6969.61 secs	(1.135 mins)	0.166	0.257
51.0/56.0	0.120/0.500	7042.60 secs	(1.216 mins)	0.195	0.230
51.0/56.0	0.130/0.500	7121.40 secs	(1.313 mins)	0.227	0.230
51.0/56.0	0.140/0.500	7205.06 secs	(1.394 mins)	0.303	0.251
51.0/56.0	0.150/0.500	7292.56 secs	(1.458 mins)	0.352	0.250
51.0/56.0	0.160/0.500	7380.82 secs	(1.471 mins)	0.427	0.254
51.0/56.0	0.170/0.500	7469.26 secs	(1.474 mins)	0.503	0.254
51.0/56.0	0.180/0.500	7563.32 secs	(1.568 mins)	0.540	0.253
51.0/56.0	0.190/0.500	7665.14 secs	(1.697 mins)	0.636	0.260
51.0/56.0	0.200/0.500	7764.94 secs	(1.663 mins)	0.676	0.271


51.2/56.0	0.000/0.500	7796.70 secs	(31.76 secs)	0.003	0.281
51.2/56.0	0.010/0.500	7828.00 secs	(31.29 secs)	0.004	0.257
51.2/56.0	0.020/0.500	7860.21 secs	(32.22 secs)	0.005	0.254
51.2/56.0	0.030/0.500	7893.46 secs	(33.24 secs)	0.006	0.230
51.2/56.0	0.040/0.500	7927.71 secs	(34.25 secs)	0.010	0.236
51.2/56.0	0.050/0.500	7963.09 secs	(35.39 secs)	0.015	0.255
51.2/56.0	0.060/0.500	8003.09 secs	(40.00 secs)	0.022	0.190
51.2/56.0	0.070/0.500	8045.26 secs	(42.17 secs)	0.030	0.239
51.2/56.0	0.080/0.500	8094.49 secs	(49.23 secs)	0.050	0.223
51.2/56.0	0.090/0.500	8149.21 secs	(54.72 secs)	0.080	0.231
51.2/56.0	0.100/0.500	8217.68 secs	(1.141 mins)	0.114	0.230
51.2/56.0	0.110/0.500	8280.75 secs	(1.051 mins)	0.130	0.257
51.2/56.0	0.120/0.500	8356.14 secs	(1.256 mins)	0.186	0.226
51.2/56.0	0.130/0.500	8434.26 secs	(1.302 mins)	0.287	0.256
51.2/56.0	0.140/0.500	8515.31 secs	(1.351 mins)	0.294	0.256
51.2/56.0	0.150/0.500	8601.68 secs	(1.439 mins)	0.370	0.252
51.2/56.0	0.160/0.500	8695.63 secs	(1.566 mins)	0.458	0.255
51.2/56.0	0.170/0.500	8786.68 secs	(1.517 mins)	0.495	0.259
51.2/56.0	0.180/0.500	8875.52 secs	(1.481 mins)	0.510	0.246
51.2/56.0	0.190/0.500	8971.60 secs	(1.601 mins)	0.610	0.263
51.2/56.0	0.200/0.500	9073.22 secs	(1.694 mins)	0.685	0.272


51.4/56.0	0.000/0.500	9104.69 secs	(31.47 secs)	0.003	0.254
51.4/56.0	0.010/0.500	9136.01 secs	(31.32 secs)	0.003	0.240
51.4/56.0	0.020/0.500	9167.75 secs	(31.74 secs)	0.005	0.240
51.4/56.0	0.030/0.500	9202.01 secs	(34.26 secs)	0.007	0.250
51.4/56.0	0.040/0.500	9237.74 secs	(35.73 secs)	0.011	0.232
51.4/56.0	0.050/0.500	9274.90 secs	(37.16 secs)	0.019	0.266
51.4/56.0	0.060/0.500	9314.31 secs	(39.41 secs)	0.024	0.251
51.4/56.0	0.070/0.500	9360.99 secs	(46.68 secs)	0.030	0.197
51.4/56.0	0.080/0.500	9410.20 secs	(49.21 secs)	0.056	0.242
51.4/56.0	0.090/0.500	9464.23 secs	(54.02 secs)	0.078	0.239
51.4/56.0	0.100/0.500	9520.56 secs	(56.33 secs)	0.096	0.250
51.4/56.0	0.110/0.500	9588.79 secs	(1.137 mins)	0.162	0.261
51.4/56.0	0.120/0.500	9659.00 secs	(1.17 mins)	0.183	0.254
51.4/56.0	0.130/0.500	9729.59 secs	(1.177 mins)	0.207	0.225
51.4/56.0	0.140/0.500	9810.66 secs	(1.351 mins)	0.315	0.275
51.4/56.0	0.150/0.500	9896.25 secs	(1.427 mins)	0.362	0.243
51.4/56.0	0.160/0.500	9985.76 secs	(1.492 mins)	0.457	0.264
51.4/56.0	0.170/0.500	10078.62 secs	(1.548 mins)	0.512	0.263
51.4/56.0	0.180/0.500	10172.97 secs	(1.573 mins)	0.597	0.268
51.4/56.0	0.190/0.500	10266.33 secs	(1.556 mins)	0.611	0.261
51.4/56.0	0.200/0.500	10365.76 secs	(1.657 mins)	0.663	0.268


51.6/56.0	0.000/0.500	10397.21 secs	(31.45 secs)	0.003	0.289
51.6/56.0	0.010/0.500	10428.72 secs	(31.51 secs)	0.003	0.244
51.6/56.0	0.020/0.500	10460.71 secs	(31.98 secs)	0.005	0.266
51.6/56.0	0.030/0.500	10492.87 secs	(32.17 secs)	0.006	0.245
51.6/56.0	0.040/0.500	10527.98 secs	(35.10 secs)	0.009	0.259
51.6/56.0	0.050/0.500	10564.31 secs	(36.33 secs)	0.013	0.238
51.6/56.0	0.060/0.500	10604.57 secs	(40.26 secs)	0.023	0.252
51.6/56.0	0.070/0.500	10647.65 secs	(43.08 secs)	0.029	0.212
51.6/56.0	0.080/0.500	10699.30 secs	(51.65 secs)	0.062	0.238
51.6/56.0	0.090/0.500	10753.43 secs	(54.14 secs)	0.078	0.228
51.6/56.0	0.100/0.500	10816.72 secs	(1.055 mins)	0.118	0.239
51.6/56.0	0.110/0.500	10883.29 secs	(1.109 mins)	0.123	0.237
51.6/56.0	0.120/0.500	10957.44 secs	(1.236 mins)	0.212	0.254
51.6/56.0	0.130/0.500	11036.08 secs	(1.311 mins)	0.235	0.259
51.6/56.0	0.140/0.500	11118.13 secs	(1.367 mins)	0.343	0.271
51.6/56.0	0.150/0.500	11205.62 secs	(1.458 mins)	0.372	0.255
51.6/56.0	0.160/0.500	11292.54 secs	(1.449 mins)	0.455	0.258
51.6/56.0	0.170/0.500	11386.00 secs	(1.558 mins)	0.518	0.258
51.6/56.0	0.180/0.500	11476.15 secs	(1.502 mins)	0.542	0.254
51.6/56.0	0.190/0.500	11573.93 secs	(1.63 mins)	0.609	0.266
51.6/56.0	0.200/0.500	11673.46 secs	(1.659 mins)	0.658	0.270


51.8/56.0	0.000/0.500	11705.09 secs	(31.63 secs)	0.003	0.268
51.8/56.0	0.010/0.500	11736.92 secs	(31.83 secs)	0.003	0.244
51.8/56.0	0.020/0.500	11768.87 secs	(31.95 secs)	0.005	0.283
51.8/56.0	0.030/0.500	11802.63 secs	(33.76 secs)	0.007	0.288
51.8/56.0	0.040/0.500	11837.12 secs	(34.49 secs)	0.009	0.257
51.8/56.0	0.050/0.500	11872.72 secs	(35.61 secs)	0.015	0.219
51.8/56.0	0.060/0.500	11913.86 secs	(41.13 secs)	0.028	0.252
51.8/56.0	0.070/0.500	11957.63 secs	(43.78 secs)	0.031	0.229
51.8/56.0	0.080/0.500	12003.09 secs	(45.45 secs)	0.049	0.240
51.8/56.0	0.090/0.500	12058.75 secs	(55.66 secs)	0.081	0.241
51.8/56.0	0.100/0.500	12121.44 secs	(1.045 mins)	0.121	0.254
51.8/56.0	0.110/0.500	12185.34 secs	(1.065 mins)	0.136	0.253
51.8/56.0	0.120/0.500	12260.38 secs	(1.251 mins)	0.204	0.234
51.8/56.0	0.130/0.500	12338.77 secs	(1.307 mins)	0.238	0.247
51.8/56.0	0.140/0.500	12418.60 secs	(1.33 mins)	0.308	0.256
51.8/56.0	0.150/0.500	12506.36 secs	(1.463 mins)	0.370	0.254
51.8/56.0	0.160/0.500	12600.72 secs	(1.573 mins)	0.426	0.261
51.8/56.0	0.170/0.500	12697.00 secs	(1.605 mins)	0.511	0.268
51.8/56.0	0.180/0.500	12789.68 secs	(1.545 mins)	0.571	0.268
51.8/56.0	0.190/0.500	12882.36 secs	(1.545 mins)	0.570	0.256
51.8/56.0	0.200/0.500	12974.48 secs	(1.535 mins)	0.627	0.263


52.0/56.0	0.000/0.500	13005.58 secs	(31.10 secs)	0.003	0.280
52.0/56.0	0.010/0.500	13037.00 secs	(31.42 secs)	0.003	0.244
52.0/56.0	0.020/0.500	13069.49 secs	(32.48 secs)	0.005	0.238
52.0/56.0	0.030/0.500	13101.78 secs	(32.30 secs)	0.007	0.258
52.0/56.0	0.040/0.500	13135.90 secs	(34.12 secs)	0.010	0.249
52.0/56.0	0.050/0.500	13172.82 secs	(36.92 secs)	0.016	0.250
52.0/56.0	0.060/0.500	13212.39 secs	(39.57 secs)	0.021	0.255
52.0/56.0	0.070/0.500	13257.35 secs	(44.96 secs)	0.035	0.239
52.0/56.0	0.080/0.500	13306.55 secs	(49.20 secs)	0.050	0.237
52.0/56.0	0.090/0.500	13355.20 secs	(48.65 secs)	0.064	0.247
52.0/56.0	0.100/0.500	13416.24 secs	(1.017 mins)	0.110	0.248
52.0/56.0	0.110/0.500	13481.08 secs	(1.081 mins)	0.132	0.249
52.0/56.0	0.120/0.500	13554.93 secs	(1.231 mins)	0.223	0.258
52.0/56.0	0.130/0.500	13629.05 secs	(1.235 mins)	0.252	0.271
52.0/56.0	0.140/0.500	13707.74 secs	(1.312 mins)	0.309	0.246
52.0/56.0	0.150/0.500	13792.97 secs	(1.42 mins)	0.372	0.254
52.0/56.0	0.160/0.500	13883.76 secs	(1.513 mins)	0.444	0.267
52.0/56.0	0.170/0.500	13976.91 secs	(1.552 mins)	0.494	0.254
52.0/56.0	0.180/0.500	14068.83 secs	(1.532 mins)	0.536	0.262
52.0/56.0	0.190/0.500	14167.14 secs	(1.638 mins)	0.630	0.264
52.0/56.0	0.200/0.500	14262.96 secs	(1.597 mins)	0.640	0.273


52.2/56.0	0.000/0.500	14294.02 secs	(31.06 secs)	0.003	0.284
52.2/56.0	0.010/0.500	14325.77 secs	(31.76 secs)	0.003	0.221
52.2/56.0	0.020/0.500	14357.95 secs	(32.18 secs)	0.005	0.268
52.2/56.0	0.030/0.500	14389.95 secs	(31.99 secs)	0.007	0.240
52.2/56.0	0.040/0.500	14426.24 secs	(36.29 secs)	0.012	0.244
52.2/56.0	0.050/0.500	14462.87 secs	(36.63 secs)	0.013	0.227
52.2/56.0	0.060/0.500	14501.04 secs	(38.17 secs)	0.023	0.211
52.2/56.0	0.070/0.500	14545.14 secs	(44.10 secs)	0.035	0.253
52.2/56.0	0.080/0.500	14592.25 secs	(47.11 secs)	0.056	0.247
52.2/56.0	0.090/0.500	14648.71 secs	(56.46 secs)	0.080	0.227
52.2/56.0	0.100/0.500	14706.94 secs	(58.23 secs)	0.093	0.236
52.2/56.0	0.110/0.500	14773.77 secs	(1.114 mins)	0.155	0.252
52.2/56.0	0.120/0.500	14841.84 secs	(1.135 mins)	0.197	0.265
52.2/56.0	0.130/0.500	14917.01 secs	(1.253 mins)	0.254	0.246
52.2/56.0	0.140/0.500	14997.65 secs	(1.344 mins)	0.325	0.261
52.2/56.0	0.150/0.500	15083.33 secs	(1.428 mins)	0.371	0.259
52.2/56.0	0.160/0.500	15168.42 secs	(1.418 mins)	0.413	0.250
52.2/56.0	0.170/0.500	15259.98 secs	(1.526 mins)	0.498	0.259
52.2/56.0	0.180/0.500	15356.02 secs	(1.601 mins)	0.576	0.265
52.2/56.0	0.190/0.500	15449.87 secs	(1.564 mins)	0.580	0.258
52.2/56.0	0.200/0.500	15549.64 secs	(1.663 mins)	0.677	0.279


52.4/56.0	0.000/0.500	15581.18 secs	(31.53 secs)	0.003	0.254
52.4/56.0	0.010/0.500	15612.56 secs	(31.39 secs)	0.004	0.247
52.4/56.0	0.020/0.500	15645.25 secs	(32.69 secs)	0.005	0.275
52.4/56.0	0.030/0.500	15678.18 secs	(32.93 secs)	0.007	0.258
52.4/56.0	0.040/0.500	15712.92 secs	(34.74 secs)	0.009	0.259
52.4/56.0	0.050/0.500	15748.78 secs	(35.86 secs)	0.015	0.249
52.4/56.0	0.060/0.500	15790.17 secs	(41.39 secs)	0.031	0.234
52.4/56.0	0.070/0.500	15832.37 secs	(42.20 secs)	0.034	0.231
52.4/56.0	0.080/0.500	15884.34 secs	(51.97 secs)	0.055	0.234
52.4/56.0	0.090/0.500	15935.78 secs	(51.43 secs)	0.075	0.236
52.4/56.0	0.100/0.500	15993.26 secs	(57.49 secs)	0.107	0.224
52.4/56.0	0.110/0.500	16058.02 secs	(1.079 mins)	0.141	0.242
52.4/56.0	0.120/0.500	16129.48 secs	(1.191 mins)	0.205	0.239
52.4/56.0	0.130/0.500	16206.95 secs	(1.291 mins)	0.272	0.254
52.4/56.0	0.140/0.500	16287.28 secs	(1.339 mins)	0.325	0.253
52.4/56.0	0.150/0.500	16369.58 secs	(1.372 mins)	0.384	0.265
52.4/56.0	0.160/0.500	16461.07 secs	(1.525 mins)	0.457	0.266
52.4/56.0	0.170/0.500	16548.63 secs	(1.459 mins)	0.470	0.255
52.4/56.0	0.180/0.500	16643.84 secs	(1.587 mins)	0.574	0.264
52.4/56.0	0.190/0.500	16741.11 secs	(1.621 mins)	0.626	0.271
52.4/56.0	0.200/0.500	16837.08 secs	(1.599 mins)	0.626	0.258


52.6/56.0	0.000/0.500	16868.55 secs	(31.47 secs)	0.003	0.241
52.6/56.0	0.010/0.500	16900.49 secs	(31.94 secs)	0.004	0.258
52.6/56.0	0.020/0.500	16933.31 secs	(32.83 secs)	0.005	0.259
52.6/56.0	0.030/0.500	16965.74 secs	(32.43 secs)	0.006	0.254
52.6/56.0	0.040/0.500	17000.14 secs	(34.40 secs)	0.010	0.264
52.6/56.0	0.050/0.500	17036.15 secs	(36.02 secs)	0.013	0.242
52.6/56.0	0.060/0.500	17077.26 secs	(41.11 secs)	0.026	0.252
52.6/56.0	0.070/0.500	17124.08 secs	(46.82 secs)	0.035	0.241
52.6/56.0	0.080/0.500	17170.43 secs	(46.35 secs)	0.049	0.221
52.6/56.0	0.090/0.500	17223.29 secs	(52.86 secs)	0.073	0.228
52.6/56.0	0.100/0.500	17285.65 secs	(1.039 mins)	0.116	0.260
52.6/56.0	0.110/0.500	17348.30 secs	(1.044 mins)	0.139	0.240
52.6/56.0	0.120/0.500	17427.77 secs	(1.324 mins)	0.218	0.252
52.6/56.0	0.130/0.500	17501.33 secs	(1.226 mins)	0.254	0.229
52.6/56.0	0.140/0.500	17590.25 secs	(1.482 mins)	0.357	0.267
52.6/56.0	0.150/0.500	17673.27 secs	(1.384 mins)	0.377	0.264
52.6/56.0	0.160/0.500	17759.59 secs	(1.439 mins)	0.435	0.269
52.6/56.0	0.170/0.500	17855.48 secs	(1.598 mins)	0.485	0.262
52.6/56.0	0.180/0.500	17948.80 secs	(1.555 mins)	0.557	0.264
52.6/56.0	0.190/0.500	18049.99 secs	(1.687 mins)	0.662	0.281
52.6/56.0	0.200/0.500	18150.21 secs	(1.67 mins)	0.675	0.277


52.8/56.0	0.000/0.500	18181.44 secs	(31.23 secs)	0.003	0.288
52.8/56.0	0.010/0.500	18213.49 secs	(32.05 secs)	0.003	0.226
52.8/56.0	0.020/0.500	18246.00 secs	(32.51 secs)	0.005	0.258
52.8/56.0	0.030/0.500	18278.56 secs	(32.57 secs)	0.007	0.268
52.8/56.0	0.040/0.500	18313.23 secs	(34.67 secs)	0.010	0.243
52.8/56.0	0.050/0.500	18351.94 secs	(38.70 secs)	0.017	0.260
52.8/56.0	0.060/0.500	18392.05 secs	(40.12 secs)	0.024	0.245
52.8/56.0	0.070/0.500	18440.59 secs	(48.54 secs)	0.039	0.240
52.8/56.0	0.080/0.500	18488.71 secs	(48.12 secs)	0.046	0.233
52.8/56.0	0.090/0.500	18546.16 secs	(57.45 secs)	0.089	0.260
52.8/56.0	0.100/0.500	18606.31 secs	(1.002 mins)	0.124	0.254
52.8/56.0	0.110/0.500	18672.81 secs	(1.108 mins)	0.139	0.242
52.8/56.0	0.120/0.500	18739.99 secs	(1.12 mins)	0.187	0.252
52.8/56.0	0.130/0.500	18816.27 secs	(1.271 mins)	0.256	0.249
52.8/56.0	0.140/0.500	18902.88 secs	(1.444 mins)	0.310	0.277
52.8/56.0	0.150/0.500	18987.97 secs	(1.418 mins)	0.380	0.262
52.8/56.0	0.160/0.500	19081.23 secs	(1.554 mins)	0.465	0.268
52.8/56.0	0.170/0.500	19167.97 secs	(1.446 mins)	0.483	0.267
52.8/56.0	0.180/0.500	19263.55 secs	(1.593 mins)	0.580	0.273
52.8/56.0	0.190/0.500	19361.08 secs	(1.626 mins)	0.625	0.271
52.8/56.0	0.200/0.500	19460.65 secs	(1.659 mins)	0.692	0.285


53.0/56.0	0.000/0.500	19492.10 secs	(31.46 secs)	0.003	0.197
53.0/56.0	0.010/0.500	19524.98 secs	(32.88 secs)	0.004	0.273
53.0/56.0	0.020/0.500	19557.06 secs	(32.08 secs)	0.005	0.251
53.0/56.0	0.030/0.500	19588.87 secs	(31.81 secs)	0.005	0.219
53.0/56.0	0.040/0.500	19623.50 secs	(34.63 secs)	0.010	0.238
53.0/56.0	0.050/0.500	19658.54 secs	(35.03 secs)	0.013	0.225
53.0/56.0	0.060/0.500	19698.41 secs	(39.87 secs)	0.026	0.265
53.0/56.0	0.070/0.500	19739.37 secs	(40.96 secs)	0.033	0.235
53.0/56.0	0.080/0.500	19784.44 secs	(45.07 secs)	0.048	0.242
53.0/56.0	0.090/0.500	19837.65 secs	(53.21 secs)	0.077	0.235
53.0/56.0	0.100/0.500	19902.96 secs	(1.088 mins)	0.124	0.247
53.0/56.0	0.110/0.500	19975.26 secs	(1.205 mins)	0.171	0.259
53.0/56.0	0.120/0.500	20049.44 secs	(1.236 mins)	0.202	0.246
53.0/56.0	0.130/0.500	20132.67 secs	(1.387 mins)	0.274	0.254
53.0/56.0	0.140/0.500	20220.36 secs	(1.461 mins)	0.338	0.279
53.0/56.0	0.150/0.500	20304.20 secs	(1.397 mins)	0.400	0.269
53.0/56.0	0.160/0.500	20394.95 secs	(1.512 mins)	0.455	0.258
53.0/56.0	0.170/0.500	20488.32 secs	(1.556 mins)	0.495	0.257
53.0/56.0	0.180/0.500	20581.05 secs	(1.545 mins)	0.537	0.264
53.0/56.0	0.190/0.500	20678.30 secs	(1.621 mins)	0.609	0.266
53.0/56.0	0.200/0.500	20779.23 secs	(1.682 mins)	0.696	0.273


53.2/56.0	0.000/0.500	20810.42 secs	(31.19 secs)	0.003	0.258
53.2/56.0	0.010/0.500	20841.84 secs	(31.42 secs)	0.004	0.274
53.2/56.0	0.020/0.500	20874.34 secs	(32.50 secs)	0.005	0.254
53.2/56.0	0.030/0.500	20906.92 secs	(32.58 secs)	0.008	0.294
53.2/56.0	0.040/0.500	20941.96 secs	(35.04 secs)	0.010	0.257
53.2/56.0	0.050/0.500	20976.97 secs	(35.01 secs)	0.014	0.266
53.2/56.0	0.060/0.500	21019.13 secs	(42.16 secs)	0.026	0.228
53.2/56.0	0.070/0.500	21061.37 secs	(42.24 secs)	0.029	0.240
53.2/56.0	0.080/0.500	21107.54 secs	(46.17 secs)	0.054	0.234
53.2/56.0	0.090/0.500	21162.27 secs	(54.73 secs)	0.072	0.235
53.2/56.0	0.100/0.500	21216.90 secs	(54.63 secs)	0.091	0.223
53.2/56.0	0.110/0.500	21282.84 secs	(1.099 mins)	0.159	0.246
53.2/56.0	0.120/0.500	21352.19 secs	(1.156 mins)	0.196	0.238
53.2/56.0	0.130/0.500	21432.05 secs	(1.331 mins)	0.257	0.258
53.2/56.0	0.140/0.500	21515.78 secs	(1.396 mins)	0.337	0.273
53.2/56.0	0.150/0.500	21594.17 secs	(1.307 mins)	0.358	0.250
53.2/56.0	0.160/0.500	21688.11 secs	(1.566 mins)	0.468	0.267
53.2/56.0	0.170/0.500	21773.73 secs	(1.427 mins)	0.471	0.260
53.2/56.0	0.180/0.500	21868.34 secs	(1.577 mins)	0.576	0.273
53.2/56.0	0.190/0.500	21961.79 secs	(1.558 mins)	0.642	0.270
53.2/56.0	0.200/0.500	22060.37 secs	(1.643 mins)	0.690	0.271


53.4/56.0	0.000/0.500	22091.33 secs	(30.97 secs)	0.003	0.314
53.4/56.0	0.010/0.500	22123.60 secs	(32.27 secs)	0.005	0.285
53.4/56.0	0.020/0.500	22155.87 secs	(32.27 secs)	0.004	0.243
53.4/56.0	0.030/0.500	22190.06 secs	(34.19 secs)	0.008	0.246
53.4/56.0	0.040/0.500	22224.34 secs	(34.28 secs)	0.010	0.249
53.4/56.0	0.050/0.500	22263.27 secs	(38.92 secs)	0.015	0.257
53.4/56.0	0.060/0.500	22303.59 secs	(40.32 secs)	0.026	0.259
53.4/56.0	0.070/0.500	22348.17 secs	(44.59 secs)	0.036	0.255
53.4/56.0	0.080/0.500	22396.33 secs	(48.15 secs)	0.050	0.228
53.4/56.0	0.090/0.500	22448.92 secs	(52.60 secs)	0.078	0.271
53.4/56.0	0.100/0.500	22511.81 secs	(1.048 mins)	0.129	0.259
53.4/56.0	0.110/0.500	22580.69 secs	(1.148 mins)	0.150	0.248
53.4/56.0	0.120/0.500	22648.97 secs	(1.138 mins)	0.191	0.236
53.4/56.0	0.130/0.500	22724.61 secs	(1.261 mins)	0.263	0.251
53.4/56.0	0.140/0.500	22808.11 secs	(1.392 mins)	0.334	0.261
53.4/56.0	0.150/0.500	22890.03 secs	(1.365 mins)	0.352	0.255
53.4/56.0	0.160/0.500	22976.90 secs	(1.448 mins)	0.467	0.271
53.4/56.0	0.170/0.500	23071.60 secs	(1.578 mins)	0.530	0.278
53.4/56.0	0.180/0.500	23162.09 secs	(1.508 mins)	0.556	0.268
53.4/56.0	0.190/0.500	23253.92 secs	(1.531 mins)	0.613	0.265
53.4/56.0	0.200/0.500	23356.19 secs	(1.704 mins)	0.712	0.286


53.6/56.0	0.000/0.500	23387.99 secs	(31.80 secs)	0.003	0.291
53.6/56.0	0.010/0.500	23420.09 secs	(32.10 secs)	0.004	0.282
53.6/56.0	0.020/0.500	23452.32 secs	(32.23 secs)	0.005	0.270
53.6/56.0	0.030/0.500	23486.03 secs	(33.71 secs)	0.007	0.239
53.6/56.0	0.040/0.500	23520.60 secs	(34.57 secs)	0.011	0.274
53.6/56.0	0.050/0.500	23555.21 secs	(34.61 secs)	0.013	0.260
53.6/56.0	0.060/0.500	23595.49 secs	(40.28 secs)	0.026	0.250
53.6/56.0	0.070/0.500	23638.89 secs	(43.40 secs)	0.033	0.244
53.6/56.0	0.080/0.500	23687.90 secs	(49.01 secs)	0.052	0.257
53.6/56.0	0.090/0.500	23742.38 secs	(54.48 secs)	0.077	0.242
53.6/56.0	0.100/0.500	23806.74 secs	(1.073 mins)	0.127	0.266
53.6/56.0	0.110/0.500	23878.78 secs	(1.201 mins)	0.173	0.267
53.6/56.0	0.120/0.500	23949.52 secs	(1.179 mins)	0.211	0.250
53.6/56.0	0.130/0.500	24026.99 secs	(1.291 mins)	0.261	0.278
53.6/56.0	0.140/0.500	24112.30 secs	(1.422 mins)	0.354	0.264
53.6/56.0	0.150/0.500	24194.92 secs	(1.377 mins)	0.391	0.260
53.6/56.0	0.160/0.500	24284.31 secs	(1.49 mins)	0.434	0.252
53.6/56.0	0.170/0.500	24377.57 secs	(1.554 mins)	0.495	0.262
53.6/56.0	0.180/0.500	24468.38 secs	(1.513 mins)	0.530	0.260
53.6/56.0	0.190/0.500	24563.05 secs	(1.578 mins)	0.612	0.274
53.6/56.0	0.200/0.500	24658.21 secs	(1.586 mins)	0.651	0.270


53.8/56.0	0.000/0.500	24689.33 secs	(31.12 secs)	0.003	0.271
53.8/56.0	0.010/0.500	24720.95 secs	(31.62 secs)	0.004	0.273
53.8/56.0	0.020/0.500	24752.59 secs	(31.64 secs)	0.005	0.281
53.8/56.0	0.030/0.500	24787.55 secs	(34.96 secs)	0.008	0.246
53.8/56.0	0.040/0.500	24823.61 secs	(36.06 secs)	0.011	0.257
53.8/56.0	0.050/0.500	24861.18 secs	(37.57 secs)	0.016	0.263
53.8/56.0	0.060/0.500	24900.77 secs	(39.59 secs)	0.026	0.245
53.8/56.0	0.070/0.500	24945.87 secs	(45.10 secs)	0.040	0.238
53.8/56.0	0.080/0.500	24995.39 secs	(49.52 secs)	0.054	0.265
53.8/56.0	0.090/0.500	25049.14 secs	(53.75 secs)	0.067	0.227
53.8/56.0	0.100/0.500	25108.99 secs	(59.85 secs)	0.118	0.256
53.8/56.0	0.110/0.500	25178.64 secs	(1.161 mins)	0.158	0.247
53.8/56.0	0.120/0.500	25256.98 secs	(1.306 mins)	0.204	0.243
53.8/56.0	0.130/0.500	25334.55 secs	(1.293 mins)	0.249	0.260
53.8/56.0	0.140/0.500	25419.11 secs	(1.409 mins)	0.328	0.275
53.8/56.0	0.150/0.500	25506.88 secs	(1.463 mins)	0.439	0.287
53.8/56.0	0.160/0.500	25599.49 secs	(1.543 mins)	0.475	0.266
53.8/56.0	0.170/0.500	25691.28 secs	(1.53 mins)	0.513	0.271
53.8/56.0	0.180/0.500	25787.86 secs	(1.61 mins)	0.593	0.284
53.8/56.0	0.190/0.500	25887.04 secs	(1.653 mins)	0.647	0.282
53.8/56.0	0.200/0.500	25987.35 secs	(1.672 mins)	0.679	0.277


54.0/56.0	0.000/0.500	26018.63 secs	(31.28 secs)	0.003	0.281
54.0/56.0	0.010/0.500	26050.68 secs	(32.05 secs)	0.004	0.272
54.0/56.0	0.020/0.500	26083.49 secs	(32.81 secs)	0.006	0.286
54.0/56.0	0.030/0.500	26117.20 secs	(33.72 secs)	0.007	0.246
54.0/56.0	0.040/0.500	26152.00 secs	(34.79 secs)	0.011	0.267
54.0/56.0	0.050/0.500	26189.86 secs	(37.86 secs)	0.015	0.241
54.0/56.0	0.060/0.500	26231.67 secs	(41.81 secs)	0.028	0.225
54.0/56.0	0.070/0.500	26272.54 secs	(40.88 secs)	0.033	0.261
54.0/56.0	0.080/0.500	26322.83 secs	(50.29 secs)	0.061	0.245
54.0/56.0	0.090/0.500	26380.18 secs	(57.35 secs)	0.076	0.245
54.0/56.0	0.100/0.500	26440.81 secs	(1.011 mins)	0.103	0.253
54.0/56.0	0.110/0.500	26506.75 secs	(1.099 mins)	0.164	0.251
54.0/56.0	0.120/0.500	26580.32 secs	(1.226 mins)	0.216	0.269
54.0/56.0	0.130/0.500	26662.08 secs	(1.363 mins)	0.277	0.263
54.0/56.0	0.140/0.500	26740.68 secs	(1.31 mins)	0.323	0.245
54.0/56.0	0.150/0.500	26825.56 secs	(1.415 mins)	0.373	0.265
54.0/56.0	0.160/0.500	26913.03 secs	(1.458 mins)	0.451	0.272
54.0/56.0	0.170/0.500	27002.51 secs	(1.491 mins)	0.459	0.250
54.0/56.0	0.180/0.500	27094.71 secs	(1.537 mins)	0.559	0.268
54.0/56.0	0.190/0.500	27189.35 secs	(1.577 mins)	0.635	0.277
54.0/56.0	0.200/0.500	27285.99 secs	(1.611 mins)	0.686	0.283


54.2/56.0	0.000/0.500	27317.03 secs	(31.04 secs)	0.003	0.276
54.2/56.0	0.010/0.500	27348.35 secs	(31.32 secs)	0.003	0.263
54.2/56.0	0.020/0.500	27380.16 secs	(31.81 secs)	0.005	0.272
54.2/56.0	0.030/0.500	27412.73 secs	(32.57 secs)	0.007	0.240
54.2/56.0	0.040/0.500	27446.94 secs	(34.21 secs)	0.010	0.226
54.2/56.0	0.050/0.500	27485.32 secs	(38.38 secs)	0.018	0.251
54.2/56.0	0.060/0.500	27525.85 secs	(40.53 secs)	0.026	0.243
54.2/56.0	0.070/0.500	27567.64 secs	(41.79 secs)	0.034	0.246
54.2/56.0	0.080/0.500	27620.76 secs	(53.12 secs)	0.061	0.258
54.2/56.0	0.090/0.500	27674.16 secs	(53.40 secs)	0.082	0.247
54.2/56.0	0.100/0.500	27737.53 secs	(1.056 mins)	0.125	0.246
54.2/56.0	0.110/0.500	27810.01 secs	(1.208 mins)	0.169	0.260
54.2/56.0	0.120/0.500	27885.76 secs	(1.262 mins)	0.209	0.247
54.2/56.0	0.130/0.500	27965.73 secs	(1.333 mins)	0.273	0.254
54.2/56.0	0.140/0.500	28053.20 secs	(1.458 mins)	0.356	0.276
54.2/56.0	0.150/0.500	28135.97 secs	(1.38 mins)	0.406	0.266
54.2/56.0	0.160/0.500	28229.98 secs	(1.567 mins)	0.522	0.288
54.2/56.0	0.170/0.500	28321.70 secs	(1.529 mins)	0.544	0.278
54.2/56.0	0.180/0.500	28418.70 secs	(1.617 mins)	0.607	0.282
54.2/56.0	0.190/0.500	28522.28 secs	(1.726 mins)	0.646	0.276
54.2/56.0	0.200/0.500	28627.89 secs	(1.76 mins)	0.709	0.291


54.4/56.0	0.000/0.500	28661.06 secs	(33.17 secs)	0.003	0.294
54.4/56.0	0.010/0.500	28695.08 secs	(34.02 secs)	0.004	0.282
54.4/56.0	0.020/0.500	28729.39 secs	(34.31 secs)	0.005	0.252
54.4/56.0	0.030/0.500	28763.94 secs	(34.55 secs)	0.007	0.241
54.4/56.0	0.040/0.500	28800.57 secs	(36.63 secs)	0.013	0.271
54.4/56.0	0.050/0.500	28839.44 secs	(38.87 secs)	0.016	0.280
54.4/56.0	0.060/0.500	28882.96 secs	(43.52 secs)	0.023	0.234
54.4/56.0	0.070/0.500	28927.24 secs	(44.28 secs)	0.034	0.241
54.4/56.0	0.080/0.500	28978.70 secs	(51.46 secs)	0.056	0.247
54.4/56.0	0.090/0.500	29036.07 secs	(57.37 secs)	0.073	0.241
54.4/56.0	0.100/0.500	29098.05 secs	(1.033 mins)	0.116	0.259
54.4/56.0	0.110/0.500	29161.00 secs	(1.049 mins)	0.152	0.257
54.4/56.0	0.120/0.500	29231.35 secs	(1.172 mins)	0.194	0.250
54.4/56.0	0.130/0.500	29305.90 secs	(1.242 mins)	0.242	0.253
54.4/56.0	0.140/0.500	29390.28 secs	(1.406 mins)	0.326	0.256
54.4/56.0	0.150/0.500	29473.07 secs	(1.38 mins)	0.360	0.270
54.4/56.0	0.160/0.500	29558.07 secs	(1.417 mins)	0.438	0.273
54.4/56.0	0.170/0.500	29652.04 secs	(1.566 mins)	0.520	0.266
54.4/56.0	0.180/0.500	29749.64 secs	(1.627 mins)	0.592	0.274
54.4/56.0	0.190/0.500	29846.85 secs	(1.62 mins)	0.650	0.286
54.4/56.0	0.200/0.500	29946.03 secs	(1.653 mins)	0.674	0.287


54.6/56.0	0.000/0.500	29977.57 secs	(31.54 secs)	0.003	0.274
54.6/56.0	0.010/0.500	30009.35 secs	(31.78 secs)	0.004	0.283
54.6/56.0	0.020/0.500	30041.30 secs	(31.95 secs)	0.005	0.265
54.6/56.0	0.030/0.500	30074.71 secs	(33.41 secs)	0.007	0.276
54.6/56.0	0.040/0.500	30108.56 secs	(33.86 secs)	0.009	0.228
54.6/56.0	0.050/0.500	30145.57 secs	(37.01 secs)	0.018	0.242
54.6/56.0	0.060/0.500	30183.20 secs	(37.63 secs)	0.023	0.244
54.6/56.0	0.070/0.500	30230.73 secs	(47.53 secs)	0.039	0.248
54.6/56.0	0.080/0.500	30283.20 secs	(52.47 secs)	0.062	0.278
54.6/56.0	0.090/0.500	30339.50 secs	(56.29 secs)	0.081	0.275
54.6/56.0	0.100/0.500	30406.37 secs	(1.115 mins)	0.132	0.252
54.6/56.0	0.110/0.500	30474.37 secs	(1.133 mins)	0.164	0.262
54.6/56.0	0.120/0.500	30547.56 secs	(1.22 mins)	0.235	0.262
54.6/56.0	0.130/0.500	30623.29 secs	(1.262 mins)	0.269	0.268
54.6/56.0	0.140/0.500	30707.37 secs	(1.401 mins)	0.363	0.272
54.6/56.0	0.150/0.500	30796.39 secs	(1.484 mins)	0.412	0.253
54.6/56.0	0.160/0.500	30882.42 secs	(1.434 mins)	0.468	0.271
54.6/56.0	0.170/0.500	30977.43 secs	(1.583 mins)	0.550	0.274
54.6/56.0	0.180/0.500	31074.05 secs	(1.61 mins)	0.600	0.285
54.6/56.0	0.190/0.500	31173.32 secs	(1.654 mins)	0.631	0.279
54.6/56.0	0.200/0.500	31272.24 secs	(1.649 mins)	0.704	0.287


54.8/56.0	0.000/0.500	31303.64 secs	(31.39 secs)	0.003	0.232
54.8/56.0	0.010/0.500	31335.32 secs	(31.68 secs)	0.003	0.234
54.8/56.0	0.020/0.500	31367.41 secs	(32.09 secs)	0.005	0.274
54.8/56.0	0.030/0.500	31401.12 secs	(33.71 secs)	0.007	0.243
54.8/56.0	0.040/0.500	31437.17 secs	(36.06 secs)	0.011	0.286
54.8/56.0	0.050/0.500	31473.60 secs	(36.42 secs)	0.015	0.257
54.8/56.0	0.060/0.500	31512.10 secs	(38.50 secs)	0.021	0.262
54.8/56.0	0.070/0.500	31554.80 secs	(42.70 secs)	0.030	0.254
54.8/56.0	0.080/0.500	31605.24 secs	(50.44 secs)	0.066	0.240
54.8/56.0	0.090/0.500	31658.52 secs	(53.29 secs)	0.076	0.243
54.8/56.0	0.100/0.500	31728.41 secs	(1.165 mins)	0.135	0.252
54.8/56.0	0.110/0.500	31795.29 secs	(1.115 mins)	0.166	0.270
54.8/56.0	0.120/0.500	31865.12 secs	(1.164 mins)	0.197	0.237
54.8/56.0	0.130/0.500	31952.18 secs	(1.451 mins)	0.298	0.260
54.8/56.0	0.140/0.500	32030.24 secs	(1.301 mins)	0.332	0.263
54.8/56.0	0.150/0.500	32116.57 secs	(1.439 mins)	0.408	0.270
54.8/56.0	0.160/0.500	32206.17 secs	(1.493 mins)	0.445	0.269
54.8/56.0	0.170/0.500	32300.25 secs	(1.568 mins)	0.568	0.291
54.8/56.0	0.180/0.500	32395.54 secs	(1.588 mins)	0.570	0.267
54.8/56.0	0.190/0.500	32492.57 secs	(1.617 mins)	0.641	0.284
54.8/56.0	0.200/0.500	32590.09 secs	(1.625 mins)	0.676	0.277


55.0/56.0	0.000/0.500	32622.41 secs	(32.33 secs)	0.003	0.252
55.0/56.0	0.010/0.500	32653.84 secs	(31.42 secs)	0.004	0.319
55.0/56.0	0.020/0.500	32686.18 secs	(32.34 secs)	0.005	0.293
55.0/56.0	0.030/0.500	32719.04 secs	(32.86 secs)	0.007	0.270
55.0/56.0	0.040/0.500	32754.68 secs	(35.64 secs)	0.011	0.265
55.0/56.0	0.050/0.500	32796.43 secs	(41.75 secs)	0.016	0.234
55.0/56.0	0.060/0.500	32838.59 secs	(42.17 secs)	0.026	0.249
55.0/56.0	0.070/0.500	32882.38 secs	(43.79 secs)	0.038	0.242
55.0/56.0	0.080/0.500	32937.13 secs	(54.75 secs)	0.057	0.254
55.0/56.0	0.090/0.500	32995.78 secs	(58.65 secs)	0.089	0.256
55.0/56.0	0.100/0.500	33057.85 secs	(1.034 mins)	0.129	0.263
55.0/56.0	0.110/0.500	33127.91 secs	(1.168 mins)	0.157	0.259
55.0/56.0	0.120/0.500	33199.85 secs	(1.199 mins)	0.228	0.264
55.0/56.0	0.130/0.500	33283.56 secs	(1.395 mins)	0.293	0.266
55.0/56.0	0.140/0.500	33369.65 secs	(1.435 mins)	0.374	0.271
55.0/56.0	0.150/0.500	33460.99 secs	(1.522 mins)	0.443	0.277
55.0/56.0	0.160/0.500	33554.23 secs	(1.554 mins)	0.453	0.272
55.0/56.0	0.170/0.500	33644.95 secs	(1.512 mins)	0.513	0.270
55.0/56.0	0.180/0.500	33741.81 secs	(1.614 mins)	0.600	0.285
55.0/56.0	0.190/0.500	33834.96 secs	(1.553 mins)	0.599	0.275
55.0/56.0	0.200/0.500	33936.15 secs	(1.686 mins)	0.732	0.288


55.2/56.0	0.000/0.500	33967.96 secs	(31.81 secs)	0.003	0.293
55.2/56.0	0.010/0.500	34000.43 secs	(32.48 secs)	0.004	0.289
55.2/56.0	0.020/0.500	34032.27 secs	(31.84 secs)	0.005	0.280
55.2/56.0	0.030/0.500	34064.89 secs	(32.62 secs)	0.007	0.256
55.2/56.0	0.040/0.500	34100.49 secs	(35.60 secs)	0.011	0.251
55.2/56.0	0.050/0.500	34137.53 secs	(37.04 secs)	0.017	0.283
55.2/56.0	0.060/0.500	34177.01 secs	(39.49 secs)	0.026	0.237
55.2/56.0	0.070/0.500	34221.18 secs	(44.17 secs)	0.037	0.251
55.2/56.0	0.080/0.500	34268.61 secs	(47.43 secs)	0.060	0.269
55.2/56.0	0.090/0.500	34325.66 secs	(57.05 secs)	0.091	0.266
55.2/56.0	0.100/0.500	34391.00 secs	(1.089 mins)	0.117	0.277
55.2/56.0	0.110/0.500	34463.76 secs	(1.213 mins)	0.162	0.262
55.2/56.0	0.120/0.500	34539.41 secs	(1.261 mins)	0.222	0.279
55.2/56.0	0.130/0.500	34623.17 secs	(1.396 mins)	0.294	0.262
55.2/56.0	0.140/0.500	34707.71 secs	(1.409 mins)	0.383	0.284
55.2/56.0	0.150/0.500	34797.94 secs	(1.504 mins)	0.418	0.274
55.2/56.0	0.160/0.500	34889.13 secs	(1.52 mins)	0.493	0.288
55.2/56.0	0.170/0.500	34984.95 secs	(1.597 mins)	0.553	0.271
55.2/56.0	0.180/0.500	35078.68 secs	(1.562 mins)	0.539	0.275
55.2/56.0	0.190/0.500	35176.61 secs	(1.632 mins)	0.676	0.288
55.2/56.0	0.200/0.500	35275.56 secs	(1.649 mins)	0.720	0.298


55.4/56.0	0.000/0.500	35306.76 secs	(31.20 secs)	0.003	0.334
55.4/56.0	0.010/0.500	35338.66 secs	(31.91 secs)	0.004	0.313
55.4/56.0	0.020/0.500	35370.21 secs	(31.55 secs)	0.005	0.250
55.4/56.0	0.030/0.500	35402.47 secs	(32.26 secs)	0.006	0.277
55.4/56.0	0.040/0.500	35436.29 secs	(33.82 secs)	0.012	0.273
55.4/56.0	0.050/0.500	35474.86 secs	(38.58 secs)	0.019	0.269
55.4/56.0	0.060/0.500	35515.54 secs	(40.68 secs)	0.024	0.237
55.4/56.0	0.070/0.500	35570.39 secs	(54.85 secs)	0.047	0.275
55.4/56.0	0.080/0.500	35619.79 secs	(49.40 secs)	0.067	0.259
55.4/56.0	0.090/0.500	35675.81 secs	(56.01 secs)	0.093	0.271
55.4/56.0	0.100/0.500	35736.49 secs	(1.011 mins)	0.123	0.268
55.4/56.0	0.110/0.500	35803.34 secs	(1.114 mins)	0.167	0.267
55.4/56.0	0.120/0.500	35879.02 secs	(1.261 mins)	0.211	0.273
55.4/56.0	0.130/0.500	35956.66 secs	(1.294 mins)	0.292	0.276
55.4/56.0	0.140/0.500	36043.32 secs	(1.444 mins)	0.353	0.283
55.4/56.0	0.150/0.500	36132.53 secs	(1.487 mins)	0.390	0.271
55.4/56.0	0.160/0.500	36222.96 secs	(1.507 mins)	0.500	0.279
55.4/56.0	0.170/0.500	36314.30 secs	(1.522 mins)	0.524	0.280
55.4/56.0	0.180/0.500	36410.50 secs	(1.603 mins)	0.594	0.286
55.4/56.0	0.190/0.500	36504.19 secs	(1.562 mins)	0.633	0.277
55.4/56.0	0.200/0.500	36604.91 secs	(1.679 mins)	0.704	0.286


55.6/56.0	0.000/0.500	36635.94 secs	(31.03 secs)	0.003	0.267
55.6/56.0	0.010/0.500	36667.79 secs	(31.85 secs)	0.004	0.244
55.6/56.0	0.020/0.500	36699.74 secs	(31.95 secs)	0.005	0.253
55.6/56.0	0.030/0.500	36733.65 secs	(33.91 secs)	0.008	0.296
55.6/56.0	0.040/0.500	36768.60 secs	(34.95 secs)	0.011	0.256
55.6/56.0	0.050/0.500	36806.83 secs	(38.23 secs)	0.019	0.284
55.6/56.0	0.060/0.500	36846.34 secs	(39.51 secs)	0.027	0.258
55.6/56.0	0.070/0.500	36893.20 secs	(46.86 secs)	0.047	0.273
55.6/56.0	0.080/0.500	36943.64 secs	(50.44 secs)	0.066	0.255
55.6/56.0	0.090/0.500	37006.57 secs	(1.049 mins)	0.094	0.269
55.6/56.0	0.100/0.500	37066.17 secs	(59.60 secs)	0.114	0.258
55.6/56.0	0.110/0.500	37141.74 secs	(1.259 mins)	0.201	0.274
55.6/56.0	0.120/0.500	37210.39 secs	(1.144 mins)	0.211	0.251
55.6/56.0	0.130/0.500	37292.44 secs	(1.367 mins)	0.273	0.265
55.6/56.0	0.140/0.500	37373.72 secs	(1.355 mins)	0.339	0.266
55.6/56.0	0.150/0.500	37462.31 secs	(1.477 mins)	0.435	0.275
55.6/56.0	0.160/0.500	37548.66 secs	(1.439 mins)	0.455	0.265
55.6/56.0	0.170/0.500	37646.07 secs	(1.623 mins)	0.593	0.293
55.6/56.0	0.180/0.500	37739.46 secs	(1.557 mins)	0.593	0.277
55.6/56.0	0.190/0.500	37834.99 secs	(1.592 mins)	0.659	0.287
55.6/56.0	0.200/0.500	37940.84 secs	(1.764 mins)	0.712	0.295


55.8/56.0	0.000/0.500	37972.69 secs	(31.85 secs)	0.003	0.282
55.8/56.0	0.010/0.500	38004.55 secs	(31.86 secs)	0.003	0.274
55.8/56.0	0.020/0.500	38036.99 secs	(32.43 secs)	0.005	0.283
55.8/56.0	0.030/0.500	38070.05 secs	(33.06 secs)	0.007	0.270
55.8/56.0	0.040/0.500	38104.12 secs	(34.07 secs)	0.012	0.256
55.8/56.0	0.050/0.500	38143.73 secs	(39.61 secs)	0.017	0.273
55.8/56.0	0.060/0.500	38183.87 secs	(40.14 secs)	0.025	0.237
55.8/56.0	0.070/0.500	38228.84 secs	(44.97 secs)	0.038	0.258
55.8/56.0	0.080/0.500	38279.37 secs	(50.53 secs)	0.055	0.258
55.8/56.0	0.090/0.500	38340.27 secs	(1.015 mins)	0.082	0.264
55.8/56.0	0.100/0.500	38404.13 secs	(1.064 mins)	0.136	0.273
55.8/56.0	0.110/0.500	38472.36 secs	(1.137 mins)	0.175	0.256
55.8/56.0	0.120/0.500	38548.51 secs	(1.269 mins)	0.233	0.285
55.8/56.0	0.130/0.500	38626.38 secs	(1.298 mins)	0.317	0.276
55.8/56.0	0.140/0.500	38709.25 secs	(1.381 mins)	0.352	0.285
55.8/56.0	0.150/0.500	38798.52 secs	(1.488 mins)	0.394	0.261
55.8/56.0	0.160/0.500	38890.14 secs	(1.527 mins)	0.496	0.281
55.8/56.0	0.170/0.500	38980.33 secs	(1.503 mins)	0.533	0.276
55.8/56.0	0.180/0.500	39080.64 secs	(1.672 mins)	0.638	0.301
55.8/56.0	0.190/0.500	39181.46 secs	(1.68 mins)	0.650	0.301
55.8/56.0	0.200/0.500	39282.19 secs	(1.679 mins)	0.696	0.296


56.0/56.0	0.000/0.500	39313.53 secs	(31.34 secs)	0.003	0.312
56.0/56.0	0.010/0.500	39345.81 secs	(32.28 secs)	0.004	0.290
56.0/56.0	0.020/0.500	39378.32 secs	(32.52 secs)	0.006	0.280
56.0/56.0	0.030/0.500	39411.97 secs	(33.65 secs)	0.007	0.281
56.0/56.0	0.040/0.500	39448.30 secs	(36.33 secs)	0.014	0.263
56.0/56.0	0.050/0.500	39484.51 secs	(36.21 secs)	0.016	0.263
56.0/56.0	0.060/0.500	39527.31 secs	(42.80 secs)	0.031	0.279
56.0/56.0	0.070/0.500	39571.13 secs	(43.83 secs)	0.038	0.255
56.0/56.0	0.080/0.500	39623.15 secs	(52.01 secs)	0.063	0.274
56.0/56.0	0.090/0.500	39680.99 secs	(57.84 secs)	0.089	0.273
56.0/56.0	0.100/0.500	39742.72 secs	(1.029 mins)	0.119	0.252
56.0/56.0	0.110/0.500	39809.94 secs	(1.12 mins)	0.151	0.240
56.0/56.0	0.120/0.500	39881.89 secs	(1.199 mins)	0.225	0.271
56.0/56.0	0.130/0.500	39965.70 secs	(1.397 mins)	0.335	0.284
56.0/56.0	0.140/0.500	40044.57 secs	(1.314 mins)	0.320	0.252
56.0/56.0	0.150/0.500	40131.73 secs	(1.453 mins)	0.444	0.283
56.0/56.0	0.160/0.500	40221.98 secs	(1.504 mins)	0.489	0.276
56.0/56.0	0.170/0.500	40313.95 secs	(1.533 mins)	0.537	0.278
56.0/56.0	0.180/0.500	40412.65 secs	(1.645 mins)	0.615	0.292
56.0/56.0	0.190/0.500	40506.64 secs	(1.566 mins)	0.612	0.274
56.0/56.0	0.200/0.500	40606.33 secs	(1.662 mins)	0.646	0.284


> 
> proc.time()
     user    system   elapsed 
795843.05  11012.29  40792.71 
